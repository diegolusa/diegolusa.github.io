{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo!","text":"<p>Este site foi especialmente desenvolvido para compartilhar conhecimento e dicas sobre Tecnologia da Informa\u00e7\u00e3o. Em especial, abordaremos temas das \u00e1reas de Programa\u00e7\u00e3o, Banco de Dados e Intelig\u00eancia Artificial. </p> <p>Este espa\u00e7o tamb\u00e9m  ser\u00e1 utilizado para notas de aula das disciplinas que leciono, de modo que as atualiza\u00e7\u00f5es ser\u00e3o frequentes.</p>"},{"location":"about/","title":"Sobre este site","text":"<p>Me chamo Diego A. Lusa. Atou como Engenheiro de Dados na Compass.uol e tamb\u00e9m como professor, ministrando disciplinas de programa\u00e7\u00e3o, banco de dados e desenvolvimento Web.</p> <p>Este site foi especialmente desenvolvimento como um reposit\u00f3rio de conte\u00fado elaborado para as diferentes disciplinas em que atuo, servindo tamb\u00e9m ao objetivo de compartilhar conhecimento e experi\u00eancias com todos os interessados.</p> <p>Espero que este conte\u00fado lhe seja \u00fatil!</p> <p>Cordiais sauda\u00e7\u00f5es ;)</p>"},{"location":"banco-dados/hospital_db/","title":"Estudo de Caso - Hospital_Db","text":"<p>Em nossos tutoriais, utilizaremos a base de dados sig_hospitalar_db como estudo de caso. Trata-se de uma base que mapeia o universo de discurso de um hospital fict\u00edcio. Logo temos tabelas armazenando dados de pacientes, acompanhantes, profissionais, interna\u00e7\u00f5es, medica\u00e7\u00f5es e procedimentos, todas de modo simplificado, com finalidade did\u00e1tica, apenas. Observe, portanto, que o foco est\u00e1 na estrutura da base e n\u00e3o propriamente na fidedignidade com o mapeamento de dados reais de ambientes hospitalares.</p> <p>Considerando que voc\u00ea j\u00e1 tenha realizado a instala\u00e7\u00e3o do servidor PostgreSQL em sua m\u00e1quina, passaremos ao passo seguinte, no qual a base de dados sig_hospitalar_db ser\u00e1 criada. Tal opera\u00e7\u00e3o pode ser realizada via psql ou por meio da IDE de sua prefer\u00eancia (PgAdmin4, por exemplo). Caso opte pelo psql, utilize o comando <code>create database sig_hospitalar_db;</code> no terminal. </p> <p>Agora, conectado \u00e0 base sig_hospitalar_db, proceda com a execu\u00e7\u00e3o dos comandos abaixo na \u00edntegra.</p> <pre><code>begin;\n\ncreate domain t_nome as varchar(200) not null check(value ~'[a-zA-z]+');\n\ncreate table bairro(\n    id serial not null primary key,\n    nome t_nome,\n    cidade_id integer not null\n\n\n);\n\n\ninsert into bairro values\n        (1, 'Centro',1),\n        (2, 'Sol Nascente',1),\n        (3, 'S\u00e3o Paulo',1),\n\n        (4, 'Vera Cruz',2),\n        (5, 'Centro',2),\n        (6, 'S\u00e3o Cristov\u00e3o',2),\n\n        (7, 'Centro',3),\n        (8, 'Tr\u00eas Vendas',3),\n        (9, 'F\u00e1tima',3);\n\ncreate table cidade(\n    id serial not null primary key,\n    nome t_nome\n);\n\ninsert into cidade values \n    (1,'Tapejara'),\n    (2,'Passo Fundo'),\n    (3,'Erechim');\n\n\ncreate domain t_cnpj as char(14) check (value ~ '^[0-9]{14}$');\ncreate domain t_cpf as char(11) check (value ~ '^[0-9]{11}$');\n\ncreate table convenio(\n    id serial not null primary key,\n    razao_social t_nome,\n    cnpj t_cnpj not null unique,\n    descricao text\n);\ncomment on table convenio is 'Armazena os diferentes planos de sa\u00fade utilizados pelos pacientes em suas interna\u00e7\u00f5es';\n\n\n\ninsert into convenio values \n    (1,'UNIMED','16034061000100',null),\n    (2,'IPE Sa\u00fade', '40355755000123',null),\n    (3, 'Cassi','63364447000160', null);\n\ncreate table diagnostico(\n        id serial not null primary key,\n        cid char(4) not null unique,\n        nome t_nome,\n        descricao text\n);\n\ncomment on table diagnostico is 'Armazena dados acerca dos diagn\u00f3sticos m\u00e9dicos';\ncomment on column diagnostico.cid is 'Classifica\u00e7\u00e3o Internacional de Doen\u00e7as';\n\n\n\ninsert into diagnostico(id, cid,nome) VALUES\n    (1,'A000','C\u00f3lera devida a Vibrio cholerae 01, bi\u00f3tipo cholerae'),\n    (2,'A009','C\u00f3lera n\u00e3o especificada'),\n    (3,'B000','Eczema herp\u00e9tico'),\n    (4,'B008','Outras formas de infec\u00e7\u00e3o devida ao v\u00edrus do herpes');\n\n\ncreate table diagnostico_prescricao (\n    prescricao_id integer not null,\n    diagnostico_id integer not null,\n    primary key(prescricao_id, diagnostico_id)\n);\n\ncomment on table diagnostico_prescricao is 'Armazena os diagn\u00f3sticos da prescri\u00e7\u00e3o';\n\ninsert into diagnostico_prescricao values\n    (1,2),\n    (2,1),\n    (3,4),\n    (4,4);\n\ncreate table enfermeiro(\n    pessoa_id integer not null primary key,\n    coren char(7) not null check (coren ~ '^[0-9]{7}$')\n\n);\n\ncomment on column enfermeiro.coren is 'C\u00f3digo de registro do enfermeiro no Conselho Regional de Enfermagem';\n\ninsert into enfermeiro values \n    (1, '0123654'),\n    (2, '0251687');\n\ncreate table especialidade(\n    id serial not null primary key,\n    nome t_nome\n);\n\ncomment on table especialidade is 'Armazena as especialidades m\u00e9dicas, como cardiologia, pediatria, etc.';\n\ninsert into especialidade values \n    (1, 'Cardiologia'),\n    (2, 'Pediatria'),\n    (3, 'Otorinolaringologia'),\n    (4, 'Ortopedia');\n\ncreate table evolucao_internacao(\n    internacao_id integer not null,\n    data_hora timestamp not null default CURRENT_TIMESTAMP,\n    evolucao text not null,\n    enfermeiro_id integer not null,\n    primary key (internacao_id, data_hora)\n);\n\ncomment on table evolucao_internacao is 'Evolu\u00e7\u00e3o \u00e9 a descri\u00e7\u00e3o do estado do paciente. Os enfermeiros fazem v\u00e1rias evolu\u00e7\u00f5es do paciente durante a interna\u00e7\u00e3o';\n\ninsert into evolucao_internacao values \n    (1,default,'Pariatur tempor nulla aliquip elit est proident consequat deserunt incididunt et minim. Aliquip consequat cupidatat do proident aliquip aliquip magna sit consequat anim aliqua proident. Amet mollit in consectetur ut. Sint laborum elit occaecat laboris. Consequat veniam dolor proident fugiat. Commodo qui aliqua anim veniam non velit non reprehenderit consequat dolor voluptate cillum. Tempor et qui tempor consequat.\nSunt labore veniam non duis eiusmod laboris voluptate sit dolore nisi. Incididunt eiusmod nostrud eu consequat velit ex eu adipisicing tempor tempor occaecat anim. Ex commodo nisi ullamco ex officia consectetur eu laborum. Lorem magna Lorem aliqua ullamco adipisicing sunt consectetur reprehenderit minim dolore voluptate qui quis. Voluptate anim fugiat consectetur irure commodo aliquip nisi adipisicing. Cillum adipisicing nostrud sit anim mollit aliqua do deserunt exercitation cupidatat. Officia dolor duis incididunt minim velit cillum et cillum adipisicing esse Lorem labore sunt reprehenderit.\nNisi fugiat incididunt culpa dolore ex ullamco sit et velit est sit ut. Do sint sint magna aliqua veniam sint aute velit adipisicing aute tempor sint aliquip irure. Non sunt consequat eiusmod deserunt anim. Nostrud tempor sint eiusmod pariatur officia aliqua reprehenderit. Ex reprehenderit enim Lorem proident id eiusmod id eiusmod est minim. Sunt sint et reprehenderit occaecat do aute amet.\nSit do consectetur in tempor deserunt sunt velit mollit do proident sunt ex. Excepteur aliqua fugiat ut tempor dolore nostrud consequat reprehenderit anim quis consectetur nulla proident qui. Sit dolor Lorem proident laboris aute consequat irure cillum mollit nisi fugiat duis. Est dolore qui sunt quis voluptate magna esse sint occaecat. Occaecat voluptate nulla tempor veniam pariatur consectetur sunt non elit cupidatat deserunt reprehenderit elit laboris. Lorem duis officia sit sit voluptate ea dolore.\nNostrud anim ea adipisicing cillum. Aute ipsum est dolor magna non. Consectetur aliqua esse reprehenderit qui aliquip do tempor irure. Amet est deserunt do in.',2);\n\n\ninsert into evolucao_internacao values \n    (2,default,'Pariatur tempor nulla aliquip elit est proident consequat deserunt incididunt et minim. Aliquip consequat cupidatat do proident aliquip aliquip magna sit consequat anim aliqua proident. Amet mollit in consectetur ut. Sint laborum elit occaecat laboris. Consequat veniam dolor proident fugiat. Commodo qui aliqua anim veniam non velit non reprehenderit consequat dolor voluptate cillum. Tempor et qui tempor consequat.\nSunt labore veniam non duis eiusmod laboris voluptate sit dolore nisi. Incididunt eiusmod nostrud eu consequat velit ex eu adipisicing tempor tempor occaecat anim. Ex commodo nisi ullamco ex officia consectetur eu laborum. Lorem magna Lorem aliqua ullamco adipisicing sunt consectetur reprehenderit minim dolore voluptate qui quis. Voluptate anim fugiat consectetur irure commodo aliquip nisi adipisicing. Cillum adipisicing nostrud sit anim mollit aliqua do deserunt exercitation cupidatat. Officia dolor duis incididunt minim velit cillum et cillum adipisicing esse Lorem labore sunt reprehenderit.\nNisi fugiat incididunt culpa dolore ex ullamco sit et velit est sit ut. Do sint sint magna aliqua veniam sint aute velit adipisicing aute tempor sint aliquip irure. Non sunt consequat eiusmod deserunt anim. Nostrud tempor sint eiusmod pariatur officia aliqua reprehenderit. Ex reprehenderit enim Lorem proident id eiusmod id eiusmod est minim. Sunt sint et reprehenderit occaecat do aute amet.\nSit do consectetur in tempor deserunt sunt velit mollit do proident sunt ex. Excepteur aliqua fugiat ut tempor dolore nostrud consequat reprehenderit anim quis consectetur nulla proident qui. Sit dolor Lorem proident laboris aute consequat irure cillum mollit nisi fugiat duis. Est dolore qui sunt quis voluptate magna esse sint occaecat. Occaecat voluptate nulla tempor veniam pariatur consectetur sunt non elit cupidatat deserunt reprehenderit elit laboris. Lorem duis officia sit sit voluptate ea dolore.\nNostrud anim ea adipisicing cillum. Aute ipsum est dolor magna non. Consectetur aliqua esse reprehenderit qui aliquip do tempor irure. Amet est deserunt do in.',1);\n\ninsert into evolucao_internacao values \n    (3,default,'Pariatur tempor nulla aliquip elit est proident consequat deserunt incididunt et minim. Aliquip consequat cupidatat do proident aliquip aliquip magna sit consequat anim aliqua proident. Amet mollit in consectetur ut. Sint laborum elit occaecat laboris. Consequat veniam dolor proident fugiat. Commodo qui aliqua anim veniam non velit non reprehenderit consequat dolor voluptate cillum. Tempor et qui tempor consequat.\nSunt labore veniam non duis eiusmod laboris voluptate sit dolore nisi. Incididunt eiusmod nostrud eu consequat velit ex eu adipisicing tempor tempor occaecat anim. Ex commodo nisi ullamco ex officia consectetur eu laborum. Lorem magna Lorem aliqua ullamco adipisicing sunt consectetur reprehenderit minim dolore voluptate qui quis. Voluptate anim fugiat consectetur irure commodo aliquip nisi adipisicing. Cillum adipisicing nostrud sit anim mollit aliqua do deserunt exercitation cupidatat. Officia dolor duis incididunt minim velit cillum et cillum adipisicing esse Lorem labore sunt reprehenderit.\nNisi fugiat incididunt culpa dolore ex ullamco sit et velit est sit ut. Do sint sint magna aliqua veniam sint aute velit adipisicing aute tempor sint aliquip irure. Non sunt consequat eiusmod deserunt anim. Nostrud tempor sint eiusmod pariatur officia aliqua reprehenderit. Ex reprehenderit enim Lorem proident id eiusmod id eiusmod est minim. Sunt sint et reprehenderit occaecat do aute amet.\nSit do consectetur in tempor deserunt sunt velit mollit do proident sunt ex. Excepteur aliqua fugiat ut tempor dolore nostrud consequat reprehenderit anim quis consectetur nulla proident qui. Sit dolor Lorem proident laboris aute consequat irure cillum mollit nisi fugiat duis. Est dolore qui sunt quis voluptate magna esse sint occaecat. Occaecat voluptate nulla tempor veniam pariatur consectetur sunt non elit cupidatat deserunt reprehenderit elit laboris. Lorem duis officia sit sit voluptate ea dolore.\nNostrud anim ea adipisicing cillum. Aute ipsum est dolor magna non. Consectetur aliqua esse reprehenderit qui aliquip do tempor irure. Amet est deserunt do in.',2);\n\ncreate table funcionario(\n    pessoa_id integer not null primary key,\n    pis_pasep char(11) not null check (pis_pasep ~ '^[0-9]{11}$')\n);\n\ninsert into funcionario values \n    (1,'83919800958'),\n    (2,'84811096999'),\n    (3,'31859934560'),\n    (4,'12649826837'),\n    (5,'94340833899');\n\ncreate table internacao(\n    id bigserial not null primary key,\n    medico_id integer not null,\n    leito_id integer not null,\n    paciente_id integer not null,\n    data_hora_internacao timestamp not null default CURRENT_TIMESTAMP,\n    tipo_clinica char(1) not null default 'M' check (tipo_clinica in ('M','O','P','A') ),\n    convenio_id integer not null,\n    data_hora_alta timestamp,\n    registrante_id integer not null,\n    anamnese text not null\n);\ncomment on column internacao.tipo_clinica is 'M - M\u00e9dica, O - Obst\u00e9trica, C - Cir\u00fargica, P - Pedi\u00e1trica, A - Ambulat\u00f3rio ';\ncomment on table internacao is 'Interna\u00e7\u00e3o \u00e9 o procedimento em que o paciente torna-se interno ao hospital para tratar de sua sa\u00fade';\n\n\ninsert into internacao(id, medico_id, leito_id,paciente_id,registrante_id, anamnese,convenio_id) values \n    (1,8,1,12,4,'Paciente queixou-se de dores abdominais intensas',1),\n    (2,9,2,13,4,'Paciente apresenta febre de 39 graus',2),\n    (3,10,2,12,4,'Paciente apresenta desequilibrio e s\u00edncopes frequentes',3),\n    (4,11,3,14,4,'Paciente epis\u00f3dios de amn\u00e9sia e hipersonia ',3),\n    (5,8,4,15,4,'Paciente queixou-se de dores lombares intensas',1);\n\ncreate table leito (\n    id serial not null primary key,\n    codigo varchar(3) not null unique,\n    quarto_id integer not null,\n    descricao text\n);\n\ninsert into leito values \n(1,'A1',1,NULL), (2,'A2',1,NULL), (3,'A3',1,NULL), \n(4,'B1',2,NULL), (5,'B2',2,NULL), (6,'B3',2,NULL), \n(7,'C1',3,NULL), (8,'C2',3,NULL), (9,'C3',3,NULL), \n(10,'D1',4,NULL), (11,'D2',4,NULL), (12,'D3',4,NULL);\n\ncreate table quarto (\n    id serial not null primary key,\n    nome varchar(20) not null unique,\n    posto_id integer not null,\n    tipo char(1) not null check (tipo in ('P','N')),\n    numero_banheiros smallint not null\n);\n\n\n\ninsert into quarto values\n    (1,'A',1,'P',2),\n    (2,'B',2,'P',1),\n    (3,'C',3,'P',1),\n    (4,'D',4,'P',3);\n\n\ncreate table material (\n    id serial not null primary key,\n    nome t_nome,\n    valor money not null,\n    descricao text\n) ;\n\ncomment on table material is 'Itens n\u00e3o medicamentosos utilizados no hospital';\n\n\ninsert into material values \n    (1,'Esparadrapo',0.56, null),\n    (2,'Micropore',1.5, null),\n    (3,'Adesivo', 2.5,null),\n    (4,'Agulha para Sutura',3.50,null),\n    (5,'Algod\u00e3o',2.89,null),\n    (6,'Atadura',8.56, null),\n    (7,'Curativos',15.69, null),\n    (8,'Bolsa T\u00e9rmica', 12.5,null),\n    (9,'Coletores',40,null),\n    (10,'Compressas',2.98,null);\n\n\n\n\n\ncreate table material_prescricao (\n    prescricao_id integer not null,\n    material_id integer not null,\n    data_hora_lancamento timestamp not null default current_timestamp,\n    quantidade numeric (20,3) not null,\n    primary key (prescricao_id,material_id, data_hora_lancamento)\n\n);\n\ncomment on table material_prescricao is 'Armazena os diferentes materiais usados na prescri\u00e7\u00e3o';\n\n\ninsert into material_prescricao values \n(1,1,default,12), (1,5,default,6),(1,10,default,5),\n(2,3,default,12), (2,6,default,6),(2,9,default,5),\n(3,2,default,12), (3,7,default,6),(3,8,default,5);\n\n\ncreate table medicamento (\n    id serial not null primary key,\n    denominacao_generica varchar(200) not null,\n    concentracao varchar(20) not null,\n    forma_farmaceutica varchar(50) not null,\n    descricao text\n);\n\n\ninsert into medicamento values \n    (1,'cloreto de s\u00f3dio', '3,4 mEq/mL (20%)', 'solu\u00e7\u00e3o injet\u00e1vel'),\n    (2,'cloridrato de amiodarona', '50 mg/mL', 'solu\u00e7\u00e3o injet\u00e1vel'),\n    (3,'cloridrato de amiodarona', '200 mg', 'comprimido'),\n    (4,'cloridrato de clindamicina', '150 mg', 'c\u00e1psula'),\n    (5,'cloridrato de clomipramina', '10 mg', 'comprimido');\n\n\ncreate table medico (\n    pessoa_id integer not null primary key,\n    crm char(6) not null check (crm ~ '^[0-6]{6}')\n);\n\ninsert into medico values \n(8, '000345'),(9, '000346'),(10, '000350'),(11, '000351');\n\n\ncreate table medico_especialidade (\n    medico_id integer not null,\n    especialidade_id integer not null,\n    primary key (medico_id, especialidade_id)\n);\n\ncomment on table medico_especialidade is 'Relaciona as especialidades aos m\u00e9dicos';\n\n\ninsert into medico_especialidade values\n    (8,1),(9,4),(10,2),(11,3);\n\n\ncreate table medicamento_prescricao (\n    prescricao_id integer not null,\n    medicamento_id  integer not null,\n    data_hora_lancamento timestamp not null default CURRENT_TIMESTAMP,\n    aprazamento varchar(100) not null,\n    dosagem varchar(100) not null,\n    primary key(prescricao_id, medicamento_id,data_hora_lancamento)\n);\n\ncomment on table medicamento_prescricao is 'Armazena os diferentes medicamentos usados na prescri\u00e7\u00e3o';\n\ninsert into  medicamento_prescricao values \n    (1,3,default,'6/6 horas','1 comprimido'),\n    (1,4,default,'12/12 horas','1 capsula'),\n    (1,2,default,'6/6 horas','10 ml');\n\n\ncreate table paciente (\n    pessoa_id integer not null primary key,\n    responsavel_id integer not null,\n    nome_mae t_nome,\n    cartao_sus char(15) not null unique check(cartao_sus ~'^[0-9]{14}')\n);\n\ninsert into paciente values \n    (12,16,'Fabiana Ana S\u00f4nia Corte Real','267584097280006'),\n    (13,17,'Marcela Ant\u00f4nia Liz Arag\u00e3o','147243223830007'),\n    (14,18,'Daiane Olivia Cristiane Novaes','223139799940002'),\n    (15,19,'Alana Rita Betina Brito','816428033820008');\n\n\ncreate table pessoa (\n    id serial not null primary key,\n    nome t_nome,\n    telefone varchar(11) not null check (telefone ~ '^[0-9]{10,11}$'),\n    cpf t_cpf,\n    identidade varchar(10) not null,\n    rua_id integer not null,\n    numero_endereco integer,\n    complemento_endereco varchar(100),\n    data_nascimento date not null,\n    sexo char(1) not null check (sexo in ('M','F')),\n    cep_endereco char(8) not null check (cep_endereco ~ '^[0-9]{8,9}$')\n);\n\n\n\ninsert into pessoa values \n    (1,'Lorena F\u00e1tima Carolina Nunes','5137140997','50037489062','265780329',1,'635','','01/11/1996','F','99910020'),\n    (2,'Diogo Hugo C\u00e9sar Silva','5135356502','66911317037','238012669',2,'197','','27/02/1996','M','99810020'),\n    (3,'Matheus Manoel Martin Viana','5135703717','53775328050','199665953',3,'402','','12/11/1996','M','99710020'),\n    (4,'Kevin Marcos Vinicius Raimundo Vieira','5135356503','66911317037','238012669',2,'197','','27/02/1996','F','69910020'),\n    (5,'Ben\u00edcio Alexandre Andr\u00e9 Rocha','5135356504','66911317078','238012669',2,'197','','27/02/1995','F','78910030'),\n    (6,'Lorena Vit\u00f3ria da Silva','5135356505','66911317058','238012669',2,'197','','27/02/1994','F','76910029'),\n    (7,'Andreia Mariah Rocha','5135356506','66911317034','238012669',2,'197','','27/02/1993','F','76910028'),\n    (8,'Elza Mariane Sophia Bernardes','5135356507','66911317056','238012669',2,'197','','27/02/1994','F','76910027'),\n    (9,'D\u00e9bora Ester Adriana Rodrigues','5135356508','66911317090','238012669',2,'197','','27/02/1993','F','76910026'),\n    (10,'Joana Olivia Castro','5135356510','66911317067','238012669',2,'197','','27/02/1992','F','76910025'),\n    (11,'Giovana Cl\u00e1udia da Silva','5135356512','66911317056','238012669',2,'197','','27/02/1991','F','76910024'),\n    (12,'Lorena Vit\u00f3ria Jesus','5135356513','66911317040','238012669',2,'197','','27/02/1999','F','76910023'),\n    (13,'Fl\u00e1via L\u00edvia Martins','5135356514','66911317039','238012669',2,'197','','27/02/1998','F','76910022'),\n    (14,'Angela da Mata','5135356515','66911317041','238011669',2,'197','','27/02/1995','F','76910321'),\n    (15,'Marcia Fagundes','5135356515','66911317051','238112669',2,'197','','27/02/1995','F','76912021'),\n    (16,'Artur da Mata','5135356515','66911317061','231012669',2,'197','','27/02/1995','F','76911021'),\n    (17,'Maiki Dellani','5135756515','66421317061','233014669',2,'197','','28/02/1995','F','76611021'),\n    (18,'Fabio Dellani','5135656515','66431317061','233018669',2,'197','','28/02/1995','F','76611021'),\n    (19,'Mateus Dellani','5134356515','66511317061','233019669',2,'197','','28/02/1995','F','76611021');\n\n\ncreate table posto (\n    id serial not null primary key,\n    nome varchar(10) not null unique,\n    descricao text\n);\n\ninsert into posto values \n    (1,'P1',null),(2,'P2',null),(3,'P3',null),(4,'P4',null);\n\n\ncreate table prescricao(\n    prescricao_id serial not null primary key,\n    internacao_id integer not null,\n    data date not null default current_date,\n    hora time not null default current_time,\n    evolucao_medica text,\n    unique(internacao_id, data)\n);\n\ninsert into prescricao values\n    (1,1,current_date-2,default,'Paciente n\u00e3o apresentou melhora'),\n    (2,1,current_date-1,default,'Paciente n\u00e3o apresentou melhora'),\n    (3,1,default,default,'Paciente apresentou leve melhora com a nova medica\u00e7\u00e3o utilizada'),\n    (4,2,default,default,'N\u00e3o houve melhora cl\u00ednica aparente'),\n    (5,3,default,default,'O procedimento realizado demonstrou normalidade nas atividades vitais b\u00e1sicas'),\n    (6,4,default,default,'Aguarda-se resultado de exames para orientar a escolha da melhor medica\u00e7\u00e3o'); \n\n\ncreate table procedimento(\n    id serial not null primary key,\n    nome t_nome,\n    descricao text\n);\n\ncomment on table procedimento is 'Interven\u00e7\u00f5es m\u00e9dicas met\u00f3dicas para fins diagn\u00f3sticos, cir\u00fargicos, etc';\n\ninsert into procedimento values \n    (1,'Ultrassonografia'),(2,'Eletrocardiograma'),(3,'Radiografia');\n\n\ncreate table procedimento_internacao(\n    procedimento_id integer not null,\n    internacao_id integer not null,\n    data_hora timestamp not null default current_timestamp,\n    primary key(procedimento_id, internacao_id,data_hora)\n);\n\ninsert into procedimento_internacao\nvalues (1,1,default), (2,3,default);\n\n\ncreate table rua (\n    id serial not null primary key,\n    nome t_nome,\n    bairro_id integer not null\n);\n\ninsert into rua values \n    (1,'Rog\u00e9rio Nunes',1),\n    (2,'Travessa Tiradentes',2),\n    (3,'Raimunda Pereira Lima',3),\n    (4,'Aren\u00f3polis',4),\n    (5,'Rui Barbosa',5),\n    (6,'Cristov\u00e3o Colombo',6),\n    (7,'Get\u00falio Vargas',7),\n    (8,'Nelson Mandela',8),\n    (9,'Andr\u00e9 Franco Montora',9);\n\n\nalter table rua add constraint fk_rua_bairro foreign key(bairro_id) references bairro;\n\nalter table procedimento_internacao add \n    constraint fk_procedimento_int_internacao foreign key(internacao_id) references internacao;\nalter table procedimento_internacao add \n    constraint fk_procedimento_int_procedimento foreign key(procedimento_id) references procedimento;\n\n\n\nalter table prescricao add \n    constraint fk_prescricao_internacao foreign key(internacao_id) references internacao;\n\nalter table pessoa add constraint fk_pessoa_rua\n    foreign key (rua_id) references rua;\n\nalter table paciente add constraint fk_paciente_responsavel \n    foreign key (responsavel_id) references pessoa;\n\n\nalter table paciente add constraint fk_paciente_pessoa \n    foreign key (pessoa_id) references pessoa;\n\n\nalter table medicamento_prescricao add constraint fk_medicamento_pres_prescricao \n    foreign key (prescricao_id) references prescricao;\n\nalter table medicamento_prescricao add constraint fk_medicamento_pres_medicamento\n    foreign key (medicamento_id) references medicamento;\n\n\nalter table medico_especialidade add constraint fk_medico_esp_medico foreign key (medico_id) references medico;\nalter table medico_especialidade add constraint fk_medico_esp_especialidade foreign key (especialidade_id) references especialidade;\n\n\nalter table medico add constraint fk_medico_pessoa foreign key (pessoa_id) references pessoa;\n\nalter table material_prescricao add constraint fk_mat_pres_prescricao foreign key (prescricao_id) references prescricao;\nalter table material_prescricao add constraint fk_mat_pres_material foreign key (material_id) references material;\n\nalter table leito add constraint fk_leito_quarto foreign key (quarto_id) references quarto;\nalter table internacao add constraint fk_internacao_medico foreign key (medico_id) references medico;\nalter table internacao add constraint fk_internacao_leito foreign key (leito_id) references leito;\nalter table internacao add constraint fk_internacao_paciente foreign key (paciente_id) references paciente;\nalter table internacao add constraint fk_internacao_funcionario foreign key (registrante_id) references funcionario;\nalter table internacao add constraint fk_internacao_convenio foreign key (convenio_id) references convenio;\n\n\nalter table funcionario add constraint fk_funcionario_pessoa foreign key (pessoa_id) references pessoa;\nalter table evolucao_internacao add constraint fk_evolucao_int_enfermeiro foreign key (enfermeiro_id) references enfermeiro;\nalter table evolucao_internacao add constraint fk_evolucao_int_internacao foreign key (internacao_id) references internacao;\nalter table enfermeiro add constraint fk_enfermeiro_pessoa foreign key (pessoa_id) references pessoa;\nalter table diagnostico_prescricao add constraint fk_diag_int_prescricao foreign key (prescricao_id) references prescricao;\nalter table diagnostico_prescricao add constraint fk_diag_int_diagnostico foreign key (diagnostico_id) references diagnostico;\nalter table bairro add constraint fk_bairro_cidade foreign key (cidade_id) references cidade;\nalter table quarto add constraint fk_quarto_posto foreign key(posto_id) references posto;\n\n\ncommit;\n</code></pre>","tags":["Banco de Dados","SQL","Estudo de Caso"]},{"location":"banco-dados/introducao/","title":"Banco de Dados: Introdu\u00e7\u00e3o","text":"<p>Quando falamos em computadores e softwares, somos inevitavelmente remetidos a dados digitais. Praticamente todos os servi\u00e7os que utilizamos, de alguma forma, dependem de dados para operar. Tais dados representam entradas e sa\u00eddas e, boa parte do tempo, precisam estar armazenados de forma persistente. Mas afinal, voc\u00ea sabe como estes dados s\u00e3o armazenados? Ser\u00e1 que na hist\u00f3ria da computa\u00e7\u00e3o, o armazenamento de dados sempre foi imprescind\u00edvel? E, para n\u00e3o esquecer, o que entendemos como dados?</p> <p>Para responder a estas e outras perguntas, siga comigo nos pr\u00f3ximos cap\u00edtulos desta jornada!</p>","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#dados-metadados-e-informacao","title":"Dados, Metadados e Informa\u00e7\u00e3o","text":"<p>Os <code>dados</code> cada vez mais os dados fazem parte da vida cotidiana. Nas diferentes atividades que realizamos, consumimos e produzimos dados de forma nunca vista antes. Enquanto sociedade, as Tecnologias da Informa\u00e7\u00e3o e Comunica\u00e7\u00e3o potencializaram nossas capacidades de gerar e transferir signos.</p> <p>Mesmo nosso dia-a-dia estando imerso em <code>dados</code>, a defini\u00e7\u00e3o do termo e sua rela\u00e7\u00e3o com <code>informa\u00e7\u00e3o</code> e <code>conhecimento</code> precisa ser bem compreendida, principalmente para profissionais da \u00e1rea de tecnologia. Comecemos pelos dados:</p> <p><code>Dados</code> (data, no ingl\u00eas) refere-se a fatos conhecidos que podem ser registrados e que possuem significado impl\u00edcito <sup>1</sup>. J\u00e1 na defini\u00e7\u00e3o do DMBOK, dados s\u00e3o representa\u00e7\u00f5es de fatos sobre o mundo e, no contexto de Tecnologia da Informa\u00e7\u00e3o, s\u00e3o informa\u00e7\u00f5es armazenadas em formato digital<sup>2</sup>. </p> <p>Dados n\u00e3o est\u00e3o dispon\u00edveis naturalmente: eles precisam ser criados. S\u00e3o meios de representa\u00e7\u00e3o e seu significado extrapola a si pr\u00f3prio. Compreende tanto a interpreta\u00e7\u00e3o dos objetos que representa quanto um objeto que precisa ser interpretado<sup>2</sup>.</p> <p>Neste ponto \u00e9 importante tamb\u00e9m diferenciarmos o termo <code>dados</code> de <code>metadados</code>. Quando voc\u00ea encontrar a palavra  <code>dados</code>, estamos nos referindo a um meio de representa\u00e7\u00e3o de fatos do mundo em formato digital. E para interpret\u00e1-los precisamos de um contexto, um sistema de representa\u00e7\u00e3o dos dados, ao que chamamos de <code>metadados</code>. Ou seja, o significado impl\u00edcito dos dados torna-se evidente a partir de um contexto e este contexto \u00e9 expresso pelos metadados, que atuam como conven\u00e7\u00f5es para interpreta\u00e7\u00e3o dos dados <sup>2</sup>.</p> <p>Isso nos permite entender que um mesmo conceito do mundo (fato) pode ser representado de diferentes formas em dados, de modo mais ou menos detalhado. A interpreta\u00e7\u00e3o, contudo, deve manter-se alinhada ao significado real, independendo da representa\u00e7\u00e3o.</p> <p>Vamos imaginar o n\u00famero 14084218014. Voc\u00ea saberia o que ele representa? Sem um contexto, possivelmente n\u00e3o. Agora se eu disser que estamos falando do CPF de pacientes internados em determinado hospital? Bem, agora voc\u00ea reconhece o significado do n\u00famero 14084218014 (nosso dado) a partir dos metadados que fornecemos.</p> <p>Os dados representam a base da pir\u00e2mide. Acima deles encontramos a informa\u00e7\u00e3o, conhecimento e a sabedoria, tal qual a imagem a seguir ilustra. Contudo, tal representa\u00e7\u00e3o desconsidera que a pr\u00f3pria produ\u00e7\u00e3o de dados requer conhecimento e que n\u00e3o existem fronteiras claras entre dados e informa\u00e7\u00f5es, por exemplo. Informa\u00e7\u00e3o, em determinados contextos, tamb\u00e9m pode ser entendida como dado.</p> <p> Autor: Luiz Roberto. Dispon\u00edvel em https://professorluizroberto.com/wp-content/uploads/2021/03/Piramide-DICS-7-min.jpg.</p>","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#banco-de-dados","title":"Banco de Dados","text":"<p>Sabemos que o computador \u00e9 fruto da ind\u00fastria de guerra e que seus primeiros usos foram para fins militares. Nesse per\u00edodo, em que os fundamentos da computa\u00e7\u00e3o estavam sendo constru\u00eddos, os programas desenvolvidos tinham como principal objetivo a execu\u00e7\u00e3o de c\u00e1lculos complexos. N\u00e3o haviam interfaces gr\u00e1ficas, sequer telas, para exibir os resultados. No caso do ENIAC, primeiro computador digital eletr\u00f4nico, a resposta era gerada a partir de uma sequ\u00eancia de l\u00e2mpadas.</p> <p>Na medida que a tecnologia evoluiu, os computadores receberam novas tarefas, passando a ser utilizados em universidades, ind\u00fastrias, presta\u00e7\u00e3o de servi\u00e7os e, \u00e9 claro, em nossos lares. E, com a amplia\u00e7\u00e3o significativa de uso, novos softwares foram desenvolvidos, potencializando a necessidade armazenamento de dados digitais. </p> <p>Partimos ent\u00e3o de um contexto onde os dados processados pelos softwares eram inputados a cada execu\u00e7\u00e3o por operadores humanos e cuja resposta final servia ao momento ( n\u00e3o sendo armazenada digitalmente para usos posteriores), para um cen\u00e1rio onde os dados digitais representam ativos de imenso valor para indiv\u00edduos e organiza\u00e7\u00f5es. \u00c9 neste ponto da hist\u00f3ria que nos encontramos hoje.</p> <p>Os fatores que nos levaram a esta revolu\u00e7\u00e3o digital podem ser resumidos a tr\u00eas: demanda por informa\u00e7\u00e3o, hardware de armazenamento com grande capacidade e baixo custo e o desenvolvimento de <code>sistemas gerenciadores de banco de dados (SGBD)</code>, que s\u00e3o o tema do nosso estudo.</p> <p>Os <code>SGBDs</code> mant\u00e9m sob sua guarda diversas bases de dados (<code>databases</code>) pelo tempo que for necess\u00e1rio. Cada <code>database</code> corresponde a um conjunto de dados logicamente organizado, dispon\u00edvel para consultas e atualiza\u00e7\u00f5es de uma comunidade de usu\u00e1rios interessados.</p> <p>\u00c9 importante ressaltar que sempre que houver a coleta organizada e sistem\u00e1tica de dados para um determinado prop\u00f3sito, teremos um <code>banco de dados</code>. Logo, um banco de dados pode ser alimentado de forma autom\u00e1tica ou manual e os dados podem ser mantidos em qualquer formato (papel, fitas, ..., ou arquivos digitais). Seja qual for o meio, todo banco de dados representa um aspecto do mundo real, reduzido \u00e0s propriedades de interesse (minimundo ou universo de discurso). Todas as mudan\u00e7as que ocorrem no minimundo devem ser refletidas no banco de dados e o banco de dados deve ser um espelho da realidade<sup>1</sup>. Contudo, para a \u00e1rea de estudo em Banco de Dados da Ci\u00eancia da Computa\u00e7\u00e3o e afins nos concentramos com os  bancos de dados mantidos por sistemas computadorizados, cujos dados s\u00e3o representados de forma digital.</p> <p>Sabemos que o sistema de arquivos funciona muito bem para armazenar e recuperar dados digitais. Qual seria o motivo, ent\u00e3o, para utilizarmos <code>SGBDs</code> quando tratamos de bases de dados? Segundo Garcia-Molina et al (2008), alguns elementos que justificam escolhar um SGBD seriam<sup>3</sup>:</p> <ul> <li>Permitir que usu\u00e1rios criem novas bases e manipulem seus <code>schemas</code> por meio de uma linguagem espec\u00edfica de defini\u00e7\u00e3o de dados; </li> <li>Permitir que usu\u00e1rios consultem e modifiquem dados por meio de uma linguagem espec\u00edfica de manipula\u00e7\u00e3o de dados;</li> <li>Suportar o armazenamento de grandes volumes de dados por longo tempo, sempre mantendo a efici\u00eancia em seu acesso;</li> <li>Garantir a durabilidade, garantindo que falhas e eventos inesperados n\u00e3o comprometam os dados;</li> <li>Garantir o isolamento e a atomicidade na manipula\u00e7\u00e3o dos dados.</li> </ul> <p>Nota</p> <p><code>Schema</code> refere-se a representa\u00e7\u00e3o da estrutura e organiza\u00e7\u00e3o de uma base de dados a partir de uma linguagem formal. S\u00e3o senten\u00e7as que imp\u00f5em restri\u00e7\u00f5es de integridade aos dados. Pode associar-se ao n\u00edvel l\u00f3gico ou ao f\u00edsico no projeto de bases de dados.</p> <p>Nota</p> <p>Conceitos como  <code>linguagem de defini\u00e7\u00e3o de dados</code>, <code>linguagem de manipula\u00e7\u00e3o de dados</code>, <code>durabilidade</code>,  <code>atomicidade</code> e <code>isolamento</code> ser\u00e3o aprofundados posteriormente.</p> <p>Perceba que sistemas de arquivos n\u00e3o disp\u00f5em de linguagens de consulta e manipula\u00e7\u00e3o de dados, tampouco permitem definir o schema dos dados de maneira aprimorada. Quest\u00f5es como isolamento e atomicidade n\u00e3o s\u00e3o plenamente atendidas, bem como a durabilidade em seu sentido mais estrito. H\u00e1 tamb\u00e9m a quest\u00e3o do acesso pouco eficiente a dados cuja localiza\u00e7\u00e3o \u00e9 desconhecida.</p> <p>Para facilitara  compreens\u00e3o das diferen\u00e7as entre SGBD e sistema de arquivos, devemos ter em mente que o cen\u00e1rio de uso deve considerar dados compostos por pequenos fragmentos constantemente atualizados e consultados. Em tal situa\u00e7\u00e3o, o uso do sistema de arquivos em detrimento de um SGBD pode ocasionar alguns efeitos indesejados. Vejamos os principais deles:</p>","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#redundancia-e-inconsistencia","title":"Redund\u00e2ncia e Inconsist\u00eancia","text":"<p><code>Redund\u00e2ncia</code> ocorre quando uma mesma informa\u00e7\u00e3o \u00e9 representada diversas vezes na base de dados. Imagine, por exemplo, os dados de seu endere\u00e7o \"espalhados\" em diversas c\u00f3pias no site de e-commerce que voc\u00ea costuma fazer compras. Seria um caso de redund\u00e2ncia.</p> <p>Ter dados redundantes n\u00e3o implica, necessariamente, em problemas. \u00c9 s\u00f3 pensar na recomenda\u00e7\u00e3o que ouvimos a todo o momento: \"Fa\u00e7a c\u00f3pias de seguran\u00e7a de seus arquivos!\". Redund\u00e2ncia \u00e9 o fundamento do backup, e fazer backup \u00e9 bom \ud83d\ude00.</p> <p>O problema com dados redundantes est\u00e1 na sua gest\u00e3o. Se existem c\u00f3pias de uma mesma informa\u00e7\u00e3o, \u00e9 preciso mant\u00ea-las sob controle, de modo que todas representem o mesmo fato do mundo. Ou seja, precisamos manter sincronizadas as diferentes c\u00f3pias existentes. </p> <p>Inconsist\u00eancia</p> <p>Dados similares encontram-se representados em diferentes formatos e locais distintos. Torna-se necess\u00e1rio deduzir qual representa\u00e7\u00e3o \u00e9 a correta (ou mais completa) em rela\u00e7\u00e3o ao fato.</p> <p>Redund\u00e2ncia</p> <p>Um mesmo fato do mundo encontra-se representado m\u00faltiplas vezes no banco de dados. Divide-se em: <ul><li>Redund\u00e2ncia controlada: O software est\u00e1 ciente das diversas c\u00f3pias da mesma informa\u00e7\u00e3o e mant\u00e9m a sincronia entre tais c\u00f3pias.  </li> <li> Redund\u00e2ncia n\u00e3o controlada: O software est\u00e1 n\u00e3o est\u00e1 ciente das diferentes c\u00f3pias existentes. A sincroniza\u00e7\u00e3o fica a cargo do usu\u00e1rio. A redund\u00e2ncia n\u00e3o  controlada predisp\u00f5e a inconsist\u00eancia, visto que gera anomalias na manipula\u00e7\u00e3o dos dados.</li></ul></p> <p>Pense comigo: se no site de e-commerce haviam diferentes c\u00f3pias de seu endere\u00e7o, mas apenas uma delas est\u00e1 correta, quais problemas poderiam ocorrer? </p>","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#dificuldade-de-acesso","title":"Dificuldade de Acesso","text":"<p>Para um software que n\u00e3o utiliza SGBD, ficando restrito ao sistema de arquivos, a disponibiliza\u00e7\u00e3o de novas consultas depende de manuten\u00e7\u00e3o no software, o que tende aumentar custos e a possibilidade de injetar defeitos.                     </p> <p>Isso ocorre porque o acesso aos dados requer conhecimento detalhado da estrutura f\u00edsica de armazenamento dos mesmos. Al\u00e9m disso, compartilhar estes dados com outros softwares torna-se custoso e inseguro pois o novo usu\u00e1rio dever\u00e1 implementar o mesmo conjunto de regras do software \"dono\" da base de dados para garantir consist\u00eancia na manipula\u00e7\u00e3o.</p> <p>Outro fator que implica complexidade \u00e9 a natureza fragmentada da base de dados. Se ela for composta de m\u00faltiplos arquivos, o software precisar\u00e1 \"conhecer\" todos eles em detalhes. Logo, n\u00e3o h\u00e1 uma camada de abstra\u00e7\u00e3o entre software e base de dados, mas uma liga\u00e7\u00e3o f\u00edsica extremamente engessada e codependente.</p>","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#problemas-de-integridade","title":"Problemas de Integridade","text":"","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#dificuldades-de-compartilhamento","title":"Dificuldades de Compartilhamento","text":"","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#problemas-de-atomicidade","title":"Problemas de Atomicidade","text":"","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#problemas-de-isolamento","title":"Problemas de Isolamento","text":"","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/introducao/#problemas-de-seguranca","title":"Problemas de Seguran\u00e7a","text":"<ol> <li> <p>R. Elmasri and S. Navathe. Fundamentals of Database Systems. Addison-Wesley, 2011. ISBN 9780136086208. URL: https://books.google.com.br/books?id=ZdhAQgAACAAJ.\u00a0\u21a9\u21a9</p> </li> <li> <p>Dama International, Data Management Association, D. Henderson, and S. Earley. DAMA-DMBOK: Data Management Body of Knowledge. Technics Publications, 2017. ISBN 9781634622349. URL: https://books.google.com.br/books?id=YjacswEACAAJ.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>H. Garcia-Molina, J.D. Ullman, and J. Widom. Database Systems: The Complete Book. Pearson international edition. Pearson Prentice Hall, 2009. ISBN 9780131873254. URL: https://books.google.com.br/books?id=pk5GAQAAIAAJ.\u00a0\u21a9</p> </li> </ol>","tags":["Banco de Dados","Introdu\u00e7\u00e3o"]},{"location":"banco-dados/lang/","title":"Structured Query Language - SQL","text":"","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#data-definition-language","title":"Data Definition Language","text":"","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#data-manipulation-language","title":"Data Manipulation Language","text":"","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#comando-insert","title":"Comando INSERT","text":"<p>{: .notice--info}</p> <p>Respons\u00e1vel por adicionar novas linhas a uma tabela, o comando INSERT apresenta sintaxe muito simples, embora com algumas varia\u00e7\u00f5es. A forma trivial de escrev\u00ea-lo \u00e9 especificando todas as colunas da tabela e os seus respectivos valores. Observe o trecho de c\u00f3digo a seguir:</p> <p><pre><code>INSERT INTO quote\n            (id,\n             entrance_exam_id,\n             NAME,\n             reference_code,\n             description,\n             comment,\n             is_universal_access)\nVALUES      (1,\n             1,\n             'ACESSO UNIVERSAL',\n             '1',\n             'Vagas de acesso universal',\n             '',\n             true); \n</code></pre> Para ter sucesso na execu\u00e7\u00e3o, o comando <code>insert</code> deve respeitar a sintaxe e as <code>constraints</code> definidas para as colunas da tabela. Todas as colunas obrigat\u00f3rias (<code>not null</code>) devem aparecer no comando, com exce\u00e7\u00e3o daquelas que possuem valor <code>default</code>, que podem ser omitidas. </p> <p>Ainda, quando a(s) coluna(s) representam chaves estrangeiras, os valores informados devem respeitar a integridade referencial, ou seja, devem estar presentes como valores de chave prim\u00e1ria na tabela referenciada. E, para n\u00e3o esquecer, os valores informados devem respeitar o dom\u00ednio de dados da coluna.</p> <p>Quando h\u00e1 necessidade de adicionar m\u00faltiplas linhas em uma tabela n\u00e3o precisamos repetir diversas vezes o comando <code>insert</code>. Nestes casos, \u00e9 poss\u00edvel informar v\u00e1rios valores de tupla (linha) na cl\u00e1usula VALUES. No exemplo abaixo, o resultado da execu\u00e7\u00e3o ser\u00e1 a inser\u00e7\u00e3o de duas linhas na tabela <code>produto</code>.</p> <pre><code>INSERT INTO produto \n        (id, \n        nome                    \n        )\nVALUES\n        (default,'L\u00e1pis'), \n        (default,'Caneta');\n</code></pre> <p>Outra varia\u00e7\u00e3o de grande utilidade \u00e9 a possibilidade de substituir VALUES por um comando de SELECT. Observe:</p> <pre><code>INSERT INTO produto \n        (\n        nome                    \n        )\nSELECT \n    item_nome \nFROM\n    item_nota_fiscal\nWHERE \n    tipo = 'P';\n</code></pre> <p>Por fim, o PostgreSQL possibilita o retorno de valores em comandos de <code>insert</code> atrav\u00e9s da cl\u00e1usula <code>returning</code>. Esse recurso \u00e9 especialmente \u00fatil para obter valores de colunas configuradas como <code>default</code>, inclu\u00edndo tipos seriais utilizados em chaves prim\u00e1rias, bem como para comandos de PL/SQL que envolvem a atribui\u00e7\u00e3o de vari\u00e1veis (Vide Documenta\u00e7\u00e3o).</p> <p>No exemplo abaixo, o comando <code>insert</code> ir\u00e1 retornar o valor gerado para a coluna <code>id</code>, tal qual faria um comando <code>select</code> an\u00e1logo. <pre><code>INSERT INTO produto \n        (id,\n        nome                    \n        ) \nVALUES\n      (default,\n      'P\u00e3o')\nRETURNING id;\n</code></pre></p>","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#comando-delete","title":"Comando DELETE","text":"<p>{: .notice--info}</p> <p>A exclus\u00e3o de linhas de uma tabela \u00e9 realizada pelo comando <code>delete</code>. N\u00e3o confunda, portanto com o comando <code>drop</code>, cuja finalidade \u00e9 remover do dicion\u00e1rio (schema) a defini\u00e7\u00e3o e dados (se houver) de um objeto existente na base de dados.</p> <p>O comando <code>delete</code> n\u00e3o requer a especifica\u00e7\u00e3o de filtros. Neste caso, todas as linhas da tabela ser\u00e3o removidas, o que pode ser imprudente. Normalmente todo comando <code>delete</code> acompanha condi\u00e7\u00f5es que determinam quais linhas devem ser exclu\u00eddas dentre todas as existentes. Tais condi\u00e7\u00f5es s\u00e3o expressas na cl\u00e1usula WHERE, na forma de condi\u00e7\u00f5es l\u00f3gicas.</p> <pre><code>--ir\u00e1 excluir todas as linhas da tabela estudante\nDELETE FROM estudante;\n\n/*ir\u00e1 excluir somente as linhas \ncujas condi\u00e7\u00f5es forem satisfeitas*/\n\nDELETE FROM estudante \n  WHERE\n      cpf = '012365478963' or\n      status = 'C';\n</code></pre> <p>A exclus\u00e3o das linhas somente ocorre quando nenhuma <code>constraint</code> for violada. Casos t\u00edpicos s\u00e3o linhas referenciadas em chaves estrangeiras, as quais n\u00e3o podem ser exclu\u00eddas pois implicaria na viola\u00e7\u00e3o da restri\u00e7\u00e3o de integridade referencial. </p> <p>Um meio de contornar a restri\u00e7\u00e3o e permitir a exclus\u00e3o da linha com depend\u00eancia \u00e9 valer-se da cl\u00e1usula ON DELETE CASCADE no momento de criar a chave estrangeira. Isso, contudo, ir\u00e1 depender das regras do neg\u00f3cio, que por vezes tornam invi\u00e1vel o uso de tal recurso. Pense, por exemplo, se ao excluir o registro de uma cidade, todos os dados de habitantes a ela associados fossem exclu\u00eddos automaticamente. Certamente n\u00e3o parece ser a melhor estrat\u00e9gia.</p> <p>Da mesma forma que ocorre com o comando INSERT, o PostgreSQL possibilita o retorno de valores em comandos de <code>delete</code> atrav\u00e9s da cl\u00e1usula <code>returning</code>. Observe o comando abaixo (Vide Documenta\u00e7\u00e3o):</p> <pre><code>DELETE FROM produto \nWHERE data_validade &gt; current_date - interval '10 days' \nreturning id, nome;\n</code></pre>","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#comando-update","title":"Comando UPDATE","text":"<p>{: .notice--info}</p> <p>Para realizar modifica\u00e7\u00f5es em dados armazenados, utilizamos o comando UPDATE. Por meio dele \u00e9 poss\u00edvel alterar valores de uma ou mais colunas da linha (ou linhas) de uma tabela.</p> <p>Se definido sem filtros, a altera\u00e7\u00e3o solicitada ser\u00e1 efetivada em todas as linhas, contudo nos cen\u00e1rios triviais de uso, este n\u00e3o \u00e9 o objetivo pretendido. Normalmente utilizamos condi\u00e7\u00f5es que restringem o efeito da atualiza\u00e7\u00e3o para uma quantia menor de linhas.</p> <pre><code>--Todas as linhas de produto ter\u00e3o o valor da coluna nome alterado para Feij\u00e3o\nUPDATE produto SET nome = 'Feij\u00e3o';\n\n--O mesmo comando, agora com filtro\nUPDATE produto SET nome = 'Feij\u00e3o' \n        WHERE codigo = 25;\n</code></pre> <p>No comando <code>update</code> podemos especificar apenas uma tabela. A partir da cl\u00e1usula <code>set</code> informamos qual ser\u00e1 o novo valor das colunas que desejamos modificar. \u00c9 poss\u00edvel informar uma ou mais colunas na mesma instru\u00e7\u00e3o, assim como utilizar o valor atual de colunas para compor novos. Observe:</p> <pre><code>--Modificando v\u00e1rias colunas em uma \u00fanica instru\u00e7\u00e3o\n\nUPDATE produto \nSET nome = 'Feij\u00e3o', preco=4.86, peso=2000 \nWHERE codigo = 25;\n\n--Novos valores de coluna com base nos atuais\n\nUPDATE produto \nSET preco= preco+ preco * 0.05 \nWHERE codigo = 25;\n</code></pre> <p>Voc\u00ea deve ter observado que a cl\u00e1usula <code>set</code> \u00e9 uma sequ\u00eancia de pares de coluna/valor separados por v\u00edrgula. Utilizando o trecho <code>preco= preco + preco * 0.05</code> como exemplo, percebemos que \u00e0 esquerda da igualdade temos o nome da coluna que ter\u00e1 o valor modificado, enquanto que na direita encontramos o novo valor. Quando o nome de uma coluna aparece na direita (nosso exemplo), estamos lendo o valor atual para utiliz\u00e1-lo de alguma forma na composi\u00e7\u00e3o do novo. Assim, supondo que a coluna <code>preco</code> tenha por valor atual <code>2.40</code>, o novo valor ser\u00e1 o resultado da express\u00e3o <code>2.40 + 2.40 * 0.05</code>, ou seja, <code>2.52</code>.</p> <p>O PostgreSQL possibilita o retorno de valores em comandos <code>update</code> atrav\u00e9s da cl\u00e1usula <code>returning</code>. Observe o comando abaixo (Vide Documenta\u00e7\u00e3o):</p> <pre><code>UPDATE produto \nSET nome = 'Feij\u00e3o', preco = preco * 0.15 \nWHERE codigo = 25 RETURNING preco;\n</code></pre>","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#comando-select","title":"Comando SELECT","text":"<p>{: .notice--info}</p> <p>Certamente podemos afirmar que o comando select \u00e9 um dos mais importantes da linguagem SQL. Isso porque atrav\u00e9s dele temos condi\u00e7\u00f5es de recompor as informa\u00e7\u00f5es do mundo fragmentados nas diferentes tabelas da base, respondendo \u00e0s consultas dos usu\u00e1rios. A informa\u00e7\u00e3o \u00e9, portanto, o que se busca apresentar nos diferentes softwares que constru\u00edmos para interagir com bases de dados. </p> <p>Proporcional a import\u00e2ncia do comando select \u00e9 a sua complexidade e varia\u00e7\u00e3o de sintaxe. Logo, extrair todo potencial do comando pode levar certo tempo de estudo e dedica\u00e7\u00e3o.</p> <p>Em termos gerais, o comando select representa o meio que temos, em bases relacionais, para recuperar dados. O seu retorno representa uma rela\u00e7\u00e3o (nome formal dado \u00e0s tabelas), uma vez que falamos em um retorno estruturado em linhas e colunas.</p> <p>Vamos come\u00e7ar nosso estudo entendendo as principais se\u00e7\u00f5es que comp\u00f5em o comando select. Para tal, considere o c\u00f3digo SQL abaixo:</p> <pre><code>select medico_id,\n       paciente_id,\n       anamnese,\n       data_hora_alta\nfrom\n        internacao\n</code></pre> <p>Observe a cl\u00e1usula from. Nela especificamos a(s) rela\u00e7\u00e3o(\u00f5es) que iremos consultar. A tabela <code>internacao</code> \u00e9 nossa rela\u00e7\u00e3o e estamos interessados em recuperar as linhas que ela cont\u00e9m. </p> <p>Sabemos que rela\u00e7\u00f5es s\u00e3o segmentadas em colunas e, na consulta, podemos limitar a quais delas gostar\u00edamos de receber no retorno. Portanto, somente as colunas <code>medico_id</code>, <code>paciente_id</code>, <code>anamnese</code> e <code>data_hora_alta</code> de todas as linhas armazenadas em <code>internacao</code> ser\u00e3o retornadas. Perceba que a lista de colunas deve ser expressa entre as cl\u00e1usulas select e from, utilizando v\u00edrgula como caractere separador e respeitando a nomenclatura utilizada no momento da cria\u00e7\u00e3o da tabela. Para os casos onde todas as colunas devem estar presentes na sa\u00edda, utilizamos um asterisco para simplificar a escrita da consulta. Neste caso, ter\u00edamos:</p> <pre><code>select * from internacao\n</code></pre> <p>Bem, e se voc\u00ea preferir mudar o nome de sa\u00edda da coluna...como faria? Neste caso, basta utilizar o recurso de troca de nomes (rename). Veja:</p> <pre><code>select medico_id as \"codigo do m\u00e9dico\",\n       paciente_id paciente,\n       anamnese,\n       data_hora_alta as saida_paciente\nfrom\n        internacao\n</code></pre> <p>Ao optar por renomear colunas, quando utilizamos nomes compostos com espa\u00e7os entre as palavras, ser\u00e1 preciso envolver com aspas duplas (<code>medico_id as \"codigo do m\u00e9dico\"</code>). O operador as \u00e9 opcional, logo fica a seu crit\u00e9rio utiliz\u00e1-lo ou n\u00e3o. Apenas mantenha um padr\u00e3o de escrita, aderindo a uma das formas apenas.</p> <p>Aten\u00e7\u00e3o: A opera\u00e7\u00e3o rename n\u00e3o realiza altera\u00e7\u00f5es de schema. Seu efeito vale apenas no contexto da query.</p> <p>Al\u00e9m de nomes de colunas, podemos solicitar sa\u00edda de express\u00f5es. \u00c9 poss\u00edvel, por exemplo, realizar chamadas de fun\u00e7\u00f5es, c\u00e1lculos matem\u00e1ticos e at\u00e9 fazer uso de subqueries no espa\u00e7o reservado \u00e0s colunas. Contudo, precisamos utilizar tais liberdades com modera\u00e7\u00e3o, pois em alguns casos podemos comprometer o desempenho da consulta (veremos estas situa\u00e7\u00f5es em outro post). </p> <pre><code>select \n       upper(anamnese),\n       age(data_hora_alta) as tempo_de_saida,\n       3*9 as calculo   \nfrom\n        internacao\n</code></pre> <p>At\u00e9 o momento sabemos como especificar as colunas (ou express\u00f5es) e a rela\u00e7\u00e3o para nossas consultas via select. Da forma que apresentamos at\u00e9 ent\u00e3o, todas as linhas da rela\u00e7\u00e3o ser\u00e3o retornadas, uma vez que n\u00e3o definimos filtros para os dados. \u00c9 pouco prov\u00e1vel que suas queries considerem a integralidade de linhas de uma tabela, logo saber restringir o retorno apenas as linhas de interesse \u00e9 de fundamental import\u00e2ncia. </p> <p>A cl\u00e1usula que nos permite condicionar linhas ao retorno chama-se where. Nela, expressamos as restri\u00e7\u00f5es na forma de condi\u00e7\u00f5es l\u00f3gicas, elaboradas por meio de operadores de compara\u00e7\u00e3o (<code>&lt; &gt; = &lt;= &gt;= &lt;&gt;</code>) e conectores l\u00f3gicos (<code>NOT AND OR</code>) envolvendo colunas e/ou express\u00f5es.</p> <pre><code>select \n        * \nfrom\n   internacao\nwhere\n   data_hora_internacao &gt; \n        current_timestamp - interval '3 days'\n   and tipo_clinica = 'M'\n</code></pre> <p>Na query acima, condicionamos ao retorno linhas da tabela <code>internacao</code> que possuem valor igual a <code>M</code> na coluna <code>tipo_clinica</code> e cuja <code>data_hora_internacao</code> registra uma estampa de tempo de at\u00e9 3 dias. </p>","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/lang/#juncoes-internas","title":"Jun\u00e7\u00f5es Internas","text":"","tags":["Banco de Dados","SQL"]},{"location":"banco-dados/references/","title":"Refer\u00eancias","text":"","tags":["Banco de Dados","Refer\u00eancias"]},{"location":"banco-dados/references/#referencias","title":"Refer\u00eancias","text":"<p>1 - Garcia-Molina, H. et al. Database Systems: The Complete Book. 2. ed. Upper Saddle River: Pearson Prentice Hall, 2008. 1240 p.</p> <p>2 - DAMA International. DAMA-DMBOK (2nd Edition): Data Management Body of Knowledge.2. ed. Technics Publications, 2017. 1827 p.</p>","tags":["Banco de Dados","Refer\u00eancias"]},{"location":"cloud-computing/aws/dynamodb/crud_records/","title":"Crud records","text":"<p>I need a code to write dynamodb items to a table</p> In\u00a0[\u00a0]: Copied! <pre>import boto3\nimport json\nfrom decimal import Decimal\n</pre> import boto3 import json from decimal import Decimal In\u00a0[\u00a0]: Copied! <pre>session = boto3.Session(profile_name='141684974138_AdministratorAccess', region_name='us-east-1')\ndynamodb = session.resource('dynamodb')\n</pre> session = boto3.Session(profile_name='141684974138_AdministratorAccess', region_name='us-east-1') dynamodb = session.resource('dynamodb') In\u00a0[\u00a0]: Copied! <pre>table = dynamodb.Table('users')\n</pre> table = dynamodb.Table('users') <p>https://youtu.be/yNOVamgIXGQ</p> In\u00a0[\u00a0]: Copied! <pre>def add_new(key='diego.lusa@compasso.com.br'):\n    table.put_item(\n        Item={\n            'user_id':key,\n            'FirstName': 'Diego',\n            'LastName': 'Lusa',\n            'age': 34,\n        }\n    )\n</pre> def add_new(key='diego.lusa@compasso.com.br'):     table.put_item(         Item={             'user_id':key,             'FirstName': 'Diego',             'LastName': 'Lusa',             'age': 34,         }     ) In\u00a0[\u00a0]: Copied! <pre>def update_rec(key='diego.lusa@compasso.com.br'):\n    #se o atributo do set n\u00e3o existir, ser\u00e1 criado\n    table.update_item(\n        Key={\n            \"user_id\": 'diego.lusa@compasso.com.br'\n        },\n        UpdateExpression='SET NewFirstName = :new_name REMOVE FirstName',\n        \n        ExpressionAttributeValues={\n            \":new_name\": \"DIEGO123\"\n            \n        }\n    )\n</pre> def update_rec(key='diego.lusa@compasso.com.br'):     #se o atributo do set n\u00e3o existir, ser\u00e1 criado     table.update_item(         Key={             \"user_id\": 'diego.lusa@compasso.com.br'         },         UpdateExpression='SET NewFirstName = :new_name REMOVE FirstName',                  ExpressionAttributeValues={             \":new_name\": \"DIEGO123\"                      }     ) In\u00a0[\u00a0]: Copied! <pre>def get_rec(key='diego.lusa@compasso.com.br'):\n    response = table.get_item(\n        Key={\n            'user_id': key\n        }\n    )\n    print(response['Item'])\n</pre> def get_rec(key='diego.lusa@compasso.com.br'):     response = table.get_item(         Key={             'user_id': key         }     )     print(response['Item']) In\u00a0[\u00a0]: Copied! <pre>get_rec()\n</pre> get_rec()"},{"location":"cloud-computing/aws/sqs/consumer/","title":"Consumer","text":"In\u00a0[\u00a0]: Copied! <p>I need a SQS consumer</p> In\u00a0[\u00a0]: Copied! <pre>import boto3\nfrom time import sleep\n</pre> import boto3 from time import sleep In\u00a0[\u00a0]: Copied! <pre>session = boto3.Session(profile_name='141684974138_AdministratorAccess', region_name='us-east-1')\nsqs = session.resource('sqs')\n</pre> session = boto3.Session(profile_name='141684974138_AdministratorAccess', region_name='us-east-1') sqs = session.resource('sqs') In\u00a0[\u00a0]: Copied! <pre>queue = sqs.get_queue_by_name(QueueName='sqs-demo-queue')\n</pre> queue = sqs.get_queue_by_name(QueueName='sqs-demo-queue') In\u00a0[\u00a0]: Copied! <pre>while 1:\n    for message in queue.receive_messages(MaxNumberOfMessages=2,AttributeNames=['All'],MessageAttributeNames=['age']):\n        print(message.body)\n        print(message.message_attributes)\n        message.delete()\n    sleep(10)\n</pre> while 1:     for message in queue.receive_messages(MaxNumberOfMessages=2,AttributeNames=['All'],MessageAttributeNames=['age']):         print(message.body)         print(message.message_attributes)         message.delete()     sleep(10)"},{"location":"cloud-computing/aws/sqs/producer/","title":"Producer","text":"In\u00a0[\u00a0]: Copied! <p>I need a SQS producer to send messages to SQS queue.</p> In\u00a0[\u00a0]: Copied! <pre>import boto3\n</pre> import boto3 In\u00a0[\u00a0]: Copied! <pre>session = boto3.Session(profile_name='141684974138_AdministratorAccess')\nsqs = session.resource('sqs',region_name='us-east-1')\n</pre> session = boto3.Session(profile_name='141684974138_AdministratorAccess') sqs = session.resource('sqs',region_name='us-east-1') In\u00a0[\u00a0]: Copied! <pre>queue = sqs.get_queue_by_name(QueueName='sqs-demo-queue')\n</pre> queue = sqs.get_queue_by_name(QueueName='sqs-demo-queue') In\u00a0[\u00a0]: Copied! <pre>message = {\n    'code':\"CD001\",\n    'message':\"Hello World\"\n}\n</pre> message = {     'code':\"CD001\",     'message':\"Hello World\" } In\u00a0[\u00a0]: Copied! <pre>#https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-java-send-message-with-attributes.html\nresponse = queue.send_message(MessageBody=str(message),MessageAttributes={\n    'age':{ \n        'DataType':'Number',       \n        'StringValue':'30'\n    }\n})\n</pre> #https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-java-send-message-with-attributes.html response = queue.send_message(MessageBody=str(message),MessageAttributes={     'age':{          'DataType':'Number',                'StringValue':'30'     } }) In\u00a0[\u00a0]: Copied! <pre>print(response.get('MessageId'))\n</pre> print(response.get('MessageId'))"},{"location":"ia/redes-neurais-artificiais/","title":"Redes neurais artificiais","text":"<p>Curso de Machine Learning em Python: https://python-course.eu/machine-learning/</p> <p>https://didatica.tech/cursos-machine-learning-diferenciados-pela-didatica-aprendizado/</p> <p>https://iaexpert.academy/2020/09/28/importancia-do-bias-nas-redes-neurais/</p> <p>https://www.datascienceacademy.com.br/course/matematica-e-estatistica-aplicada-para-data-science-machine-learning-e-ia  </p> <p>https://github.com/m2dsupsdlclass/lectures-labs/tree/master</p> <p>https://machinelearningmastery.com/build-multi-layer-perceptron-neural-network-models-keras/</p>"},{"location":"ia/exercicios/reconhecimento-entidades-nomeadas/","title":"Reconhecimento entidades nomeadas","text":"<p>O Reconhecimento de Entidades Nomeadas (NER - Named Entity Recognition) \u00e9 uma tarefa do \u00e2mbito do Processamento de Linguagem Natural (PLN) que envolve identificar e classificar automaticamente elementos importantes em um texto, como nomes de pessoas, organiza\u00e7\u00f5es, locais, datas, quantidades, entre outros.</p> <p>Por meio desta t\u00e9cnica, um corpo de texto inserido como entrada \u00e0 rede ter\u00e1 suas entidades identificadas e classificadas, que \u00e9 extremamente \u00fatil para automatizar tarefas, como minerar dados de redes jornal\u00edsticos a fim de extrair os fatos relevantes (5W). NER \u00e9, portanto, uma t\u00e9cnica fundamental para muitas aplica\u00e7\u00f5es de PLN, pois ajuda a estruturar informa\u00e7\u00f5es textuais desorganizadas e extrair dados relevantes de forma automatizada.</p> <p>Dado a relev\u00e2ncia da t\u00e9cnica no \u00e2mbito de estudo de redes neurais artificiais, iremos desenvolver uma atividade guiada para agregar novos conhecimentos e aplicar os j\u00e1 obtidos at\u00e9 o momento.</p> <p>O objetivo da atividade ser\u00e1 implementar um modelo de Reconhecimento de Entidades Nomeadas (NER) utilizando redes neurais, para identificar nomes de pessoas, locais, organiza\u00e7\u00f5es, e datas em textos.</p> <p>Voc\u00ea poder\u00e1 escolher qualquer dataset dispon\u00edvel publicamente para utilizar nas etapas de treinamento e valida\u00e7\u00e3o. Ao final, sua entrega corresponder\u00e1 ao script contendo o c\u00f3digo de treinamento da rede, acompanhado de exemplos de predi\u00e7\u00e3o. </p> <p>Ser\u00e1 necess\u00e1rio explicar os principais trechos de seu c\u00f3digo. Logo, desenvolva todo seu trabalho em um \u00fanico notebook (via Google Colab, por exemplo.)</p>"},{"location":"informatica/fundamentos/","title":"Fundamentos","text":"<p>Tentativas de construir m\u00e1quinas que pudessem realizar atividades tipicamente humanas s\u00e3o extremamente comuns na hist\u00f3ria. Com o computador n\u00e3o foi diferente. De avan\u00e7o em avan\u00e7o nos campos da matem\u00e1tica, qu\u00edmica, f\u00edsica e eletr\u00f4nica chegamos ao computador como o conhecemos hoje. </p> <p>Das habilidades humanas, o c\u00e1lculo foi objeto de diversos inventos que buscavam facilitar o processo. O mais antigo deles \u00e9 o \u00e1baco, que embora seja aparentemente simples, pode ser t\u00e3o eficaz quanto uma calculadora eletr\u00f4nica nas m\u00e3os de um usu\u00e1rio experiente.</p> <p></p> <p>As primeiras m\u00e1quinas capazes de realizar c\u00e1lculos eram puramente mec\u00e2nicas, utilizando rotores e combina\u00e7\u00f5es de engrenagens para efetuar opera\u00e7\u00f5es matem\u00e1ticas. Aqui podemos citar a M\u00e1quina de Pascal e a M\u00e1quina Anal\u00edtica de Charles Babbage, considerado um dos precursores da computa\u00e7\u00e3o.</p> <p>Outro invento marcante na hist\u00f3ria foi a M\u00e1quina de Tabular por Hermann Hollerith em 1890. Utilizando conceitos como cart\u00e3o perfurado, l\u00f3gica booleana e eletricidade, a m\u00e1quina de Hollerith tornou o processamento dos dados de censo americano da \u00e9poca muito mais r\u00e1pidos. Devido ao sucesso alcan\u00e7ado, Hollerith abriu sua pr\u00f3pria companhia que, em 1916, viria a ser conhecida como International Business Machine, a famosa IBM.</p>","tags":["Hardware","Mem\u00f3ria","Computador"]},{"location":"informatica/editores-texto/abnt/","title":"ABNT","text":"<p>Em diversas situa\u00e7\u00f5es, a formata\u00e7\u00e3o do documento n\u00e3o \u00e9 de livre escolha do autor. Um exemplo cl\u00e1ssico s\u00e3o trabalhos acad\u00eamicos de conclus\u00e3o de curso, como artigos, monografias, teses, disserta\u00e7\u00f5es, entre outros. Para estes, a institui\u00e7\u00e3o define o modelo (<code>template</code>) do documento, que deve ser seguido a rigor pelo autor.</p> <p>Boa parte das regras de formata\u00e7\u00e3o contidas nestes modelos s\u00e3o baseados em normas da Associa\u00e7\u00e3o Brasileira de Normas T\u00e9cnicas (ABNT). Tentaremos, neste artigo, abordar alguns elementos presentes nestas normas para a formata\u00e7\u00e3o de trabalhos de conclus\u00e3o de curso. Contudo, aviso que o objetivo n\u00e3o ser\u00e1 apresentar detalhadamente a especifica\u00e7\u00e3o ditada pela norma, mas como configuramos no writer tais informa\u00e7\u00f5es do modo correto.</p>"},{"location":"informatica/editores-texto/abnt/#partes-de-documento","title":"Partes de Documento","text":"<p>Trabalhos acad\u00eamicos tem suas partes divididas em tr\u00eas categorias: elementos pr\u00e9-textuais, elementos textuais e p\u00f3s-textuais. Vamos abordar cada um deles e apresentar dicas de como podemos configurar a formata\u00e7\u00e3o no LibreOffice Writer.</p> <p></p> <p>Fonte:  Manual ABNT: Regras Gerais de Estilo e Formata\u00e7\u00e3o de Trabalhos Acad\u00eamicos, pg. 13</p> <p>De antem\u00e3o, devemos considerar que as p\u00e1ginas devem ser configuradas para <code>formato A4</code>, <code>orienta\u00e7\u00e3o retrato</code>, e <code>margens esquerda e superior em 3cm, direita e inferior, 2 cm</code>. Quanto a fonte, devemos utilizar <code>Times New Roman</code> ou <code>Arial</code> em <code>tamanho 12</code> para corpo do texto e <code>10</code>, para cita\u00e7\u00f5es, notas de rodap\u00e9, pagina\u00e7\u00e3o e legendas.</p> <p>Para configurar as p\u00e1ginas, sugiro criar estilos e, considerando a exist\u00eancia de tr\u00eas segmentos no documento (pr\u00e9-textuais, textuais e p\u00f3s-textuais), pode ser interessante realizar a cria\u00e7\u00e3o de tr\u00eas novos estilos de p\u00e1gina. Caso esteja com d\u00favidas sobre como criar tais estilos, sugiro a leitura do t\u00f3pico que falamos sobre o recurso.</p> <p>Ser\u00e1 importante tamb\u00e9m colocar todos os elementos pr\u00e9-textuais obrigat\u00f3rio e \u00e0queles opcionais que far\u00e3o parte do trabalho, um em cada p\u00e1gina (apenas reservar a p\u00e1gina). Assim teremos ideia do n\u00famero de p\u00e1ginas utilizadas e, tamb\u00e9m, do que ser\u00e1 necess\u00e1rio configurar para gerar os \u00edndices de forma autom\u00e1tica.</p>"},{"location":"informatica/editores-texto/abnt/#elementos-pre-textuais","title":"Elementos pr\u00e9-textuais","text":"<p>S\u00e3o as partes do documento que antecedem o conte\u00fado do trabalho. Nesta categoria, temos:</p>"},{"location":"informatica/editores-texto/abnt/#capa","title":"Capa","text":"<p>Item obrigat\u00f3rio de qualquer trabalho. Identifica a institui\u00e7\u00e3o, curso, autores, t\u00edtulo e subt\u00edtulo do trabalho, local e ano de entrega.</p> <p>Importante lembrar que a capa n\u00e3o conta na numera\u00e7\u00e3o de p\u00e1gina (p\u00e1gina 0) e que todos os elementos pr\u00e9-textuais n\u00e3o devem apresentar a numera\u00e7\u00e3o de p\u00e1gina no rodap\u00e9.</p>"},{"location":"informatica/editores-texto/abnt/#lombada","title":"Lombada","text":"<p>Para trabalhos encadernados, este item se torna obrigat\u00f3rio. Sua estrutura \u00e9 definida pela institui\u00e7\u00e3o.</p>"},{"location":"informatica/editores-texto/abnt/#folha-de-rosto","title":"Folha de Rosto","text":"<p>Sua presen\u00e7a no documento \u00e9 obrigat\u00f3ria. Tem por objetivo apresentar os elementos de identifica\u00e7\u00e3o do trabalho, como nome do autor, t\u00edtulo e subt\u00edtulo, natureza, objetivo do trabalho, nome da institui\u00e7\u00e3o, nome do orientador, local e ano de entrega.</p>"},{"location":"informatica/editores-texto/abnt/#composicao-institucional-e-ficha-catalografica","title":"Composi\u00e7\u00e3o Institucional e Ficha Catalogr\u00e1fica","text":"<p>Normalmente gerada por bibliotec\u00e1rios. Ser\u00e1 preciso verificar o procedimento da institui\u00e7\u00e3o para sua obten\u00e7\u00e3o.</p>"},{"location":"informatica/editores-texto/abnt/#errata","title":"Errata","text":"<p>Item opcional, utilizado para adicionar a lista de erros e suas respectivas corre\u00e7\u00f5es.</p>"},{"location":"informatica/editores-texto/abnt/#folha-de-aprovacao","title":"Folha de Aprova\u00e7\u00e3o","text":"<p>Obrigat\u00f3ria. Deve conter detalhes dos autores, da institui\u00e7\u00e3o, t\u00edtulo pretendido e detalhes dos componentes da banca, com espa\u00e7o para assinatura.</p>"},{"location":"informatica/editores-texto/abnt/#dedicatoria","title":"Dedicat\u00f3ria","text":"<p>Item opcional utilizado para prestar homenagens e/ou dedicar o trabalho para algu\u00e9m.</p>"},{"location":"informatica/editores-texto/abnt/#agradecimento","title":"Agradecimento","text":"<p>Item opcional utilizado para agradecer pessoas e/ou institui\u00e7\u00f5es que colaboraram  de alguma forma para o desenvolvimento do trabalho.</p>"},{"location":"informatica/editores-texto/abnt/#epigrafe","title":"Ep\u00edgrafe","text":"<p>Elemento opcional onde o autor pode fazer uma cita\u00e7\u00e3o que foi significativa no contexto do trabalho. A fonte deve ser indicada.</p>"},{"location":"informatica/editores-texto/abnt/#resumo","title":"Resumo","text":"<p>Item obrigat\u00f3rio, escrito na l\u00edngua vern\u00e1cula (do pa\u00eds). Apresenta os pontos relevantes do documento. Acompanha ao final a lista de palavras-chave.</p>"},{"location":"informatica/editores-texto/abnt/#resumo-em-lingua-estrangeira","title":"Resumo em L\u00edngua Estrangeira","text":"<p>Corresponde ao <code>abstract</code>, vers\u00e3o do resumo escrito em ingl\u00eas, acompanhado das <code>keywords</code> (palavras-chave). \u00c9 obrigat\u00f3rio apresent\u00e1-lo.</p>"},{"location":"informatica/editores-texto/abnt/#lista-de-ilustracoes","title":"Lista de Ilustra\u00e7\u00f5es","text":"<p>\u00cdndice contendo as legendas das ilustra\u00e7\u00f5es apresentadas no texto, conforme sua ordem de apari\u00e7\u00e3o. \u00c9 opcional.</p>"},{"location":"informatica/editores-texto/abnt/#lista-de-tabelas","title":"Lista de Tabelas","text":"<p>\u00cdndice contendo as legendas das tabelas apresentadas no texto, conforme sua ordem de apari\u00e7\u00e3o. \u00c9 opcional.</p>"},{"location":"informatica/editores-texto/abnt/#lista-de-abreviaturas-e-siglas","title":"Lista de Abreviaturas e Siglas","text":"<p>Rela\u00e7\u00e3o de siglas e abreviaturas utilizadas no texto, acompanhadas dos respectivos significados. Tamb\u00e9m \u00e9 um elemento opcional.</p>"},{"location":"informatica/editores-texto/abnt/#lista-de-simbolos","title":"Lista de S\u00edmbolos","text":"<p>Rela\u00e7\u00e3o de s\u00edmbolos utilizados e seus respectivos significados. \u00c9 opcional.</p>"},{"location":"informatica/editores-texto/abnt/#sumario","title":"Sum\u00e1rio","text":"<p>\u00daltimo dos elementos pr\u00e9-textuais. \u00c9 obrigat\u00f3rio constar no documento. Corresponde a organiza\u00e7\u00e3o de t\u00f3picos do trabalho (cap\u00edtulos, se\u00e7\u00f5es, etc), apresentadas na ordem em que aparecem com o respectivo n\u00famero de p\u00e1gina.</p>"},{"location":"informatica/editores-texto/abnt/#elementos-textuais","title":"Elementos textuais","text":"<p>Os elementos textuais devem contemplar a <code>Introdu\u00e7\u00e3o</code>, <code>Desenvolvimento</code> e <code>Conclus\u00e3o</code> do trabalho e naturalmente s\u00e3o obrigat\u00f3rios. </p> <p>Em termos de formata\u00e7\u00e3o, os pontos mais relevantes dos elementos textuais s\u00e3o <code>t\u00edtulos</code>, <code>numera\u00e7\u00e3o de p\u00e1ginas</code>, <code>corpo do texto</code>, <code>cita\u00e7\u00f5es</code>, <code>figuras</code>, <code>quadros</code> e <code>tabelas</code>. </p> <p>Vamos come\u00e7ar analisando a quest\u00e3o da numera\u00e7\u00e3o de p\u00e1ginas. Neste ponto, precisamos saber exatamente quantas p\u00e1ginas iremos utilizar nos elementos pr\u00e9-textuais (todos os obrigat\u00f3rios e os opcionais escolhidos). Tamb\u00e9m devemos nos atentar de que a capa n\u00e3o \u00e9 contabilizada.</p> <p>Ent\u00e3o, para nosso tutorial, vamos supor que nosso trabalho tenha os seguintes elementos pr\u00e9-textuais:</p> <ul> <li><code>Capa</code> </li> <li><code>Folha de Rosto</code></li> <li><code>Folha de Aprova\u00e7\u00e3o</code></li> <li><code>Agradecimentos</code></li> <li><code>Lista de Ilustra\u00e7\u00f5es</code></li> <li><code>Lista de Tabelas</code></li> <li><code>Resumo</code></li> <li><code>Abstract</code></li> <li><code>Sum\u00e1rio</code></li> </ul> <p>Considerando que teremos 9 p\u00e1ginas de elementos pr\u00e9-textuais e que a capa n\u00e3o entra na contagem, a numera\u00e7\u00e3o de p\u00e1ginas, que ser\u00e1 apresentada a partir da <code>Introdu\u00e7\u00e3o</code>, deve iniciar em 9. Para conseguirmos ocultar a numera\u00e7\u00e3o dos elementos pr\u00e9-textuais e apresentarmos a partir dos elementos textuais, devemos utilizar o recurso <code>quebra manual de p\u00e1gina</code>, em conjunto com os estilos de p\u00e1gina que criamos anteriormente. </p> <p>Antes de realizar a quebra de p\u00e1gina, voc\u00ea deve reservar as p\u00e1ginas para os elementos pr\u00e9-textuais. Utilize o atalho <code>CTRL+ENTER</code> para inserir nova p\u00e1gina no documento. Agora, estando com o cursor na \u00faltima p\u00e1gina dos elementos pr\u00e9-textuais (referente ao sum\u00e1rio), v\u00e1 at\u00e9 o menu <code>Inserir -&gt; Mais quebras -&gt; Quebra Manual</code> e configure os valores conforme a imagem a seguir. Perceba que iremos utilizar o estilo de p\u00e1gina que criamos, alterando a sequ\u00eancia de numera\u00e7\u00e3o para <code>9</code>.</p> <p></p> <p>As quebras de p\u00e1gina s\u00e3o extremamente \u00fateis porque definem regi\u00f5es do documento em que podemos aplicar estilos de p\u00e1gina diferentes. Al\u00e9m disso, cada regi\u00e3o ter\u00e1 cabe\u00e7alho e rodap\u00e9 espec\u00edficos, o que nos permitir\u00e1 ocultar o n\u00famero de p\u00e1gina dos elementos pr\u00e9-textuais de forma simples.</p> <p>Sabemos que o n\u00famero de p\u00e1gina deve estar no canto superior direito do documento, em fonte <code>Arial</code> ou <code>Times New Roman</code>, <code>tamanho 10</code>. O primeiro passo para adicion\u00e1-lo \u00e9 exibir o cabe\u00e7alho da p\u00e1gina, clicar no espa\u00e7o correspondente e finalmente acessar o menu <code>Inserir -&gt; N\u00famero de P\u00e1gina</code>.</p> <p></p> <p>Nossos pr\u00f3ximos itens de formata\u00e7\u00e3o ser\u00e3o os t\u00edtulos. Configur\u00e1-los corretamente \u00e9 o segredo para a gera\u00e7\u00e3o do sum\u00e1rio de forma simples. Neste procedimento estaremos alterando <code>estilos de par\u00e1grafo</code>.</p> <p>Por padr\u00e3o, o LibreOffice Writer tr\u00e1s estilos espec\u00edficos para t\u00edtulos. Logo, \u00e9 mais r\u00e1pido modificar estes existentes do que criar novos. Para encontr\u00e1-los, um dos caminhos \u00e9 pela aba de estilos, filtrando por  <code>Estilos de Texto</code>.</p> <p></p>"},{"location":"informatica/editores-texto/abnt/#capitulos","title":"Cap\u00edtulos","text":"<p>Come\u00e7aremos a configura\u00e7\u00e3o pelo t\u00edtulo de primeiro n\u00edvel, que estabelece os cap\u00edtulos do documento e, pela norma, deve sempre iniciar nova p\u00e1gina. Para modificarmos o estilo <code>T\u00edtulo 1</code> devemos clicar com o bot\u00e3o direito do mouse sobre ele, escolhendo a op\u00e7\u00e3o <code>Modificar</code>. Lembre-se que j\u00e1 apresentamos as telas de edi\u00e7\u00e3o de estilos de par\u00e1grafo. Caso n\u00e3o lembre, sugiro uma nova leitura.</p> <p>Os demais n\u00edveis voc\u00ea poder\u00e1 formatar utilizando como refer\u00eancia os exemplos aqui apresentados. Haver\u00e1 varia\u00e7\u00e3o do tamanho da fonte e efeitos aplicados. Revise a norma para detalhes. E, o mais importante: certifique-se de configurar os t\u00edtulos do n\u00edvel correto e de aplicar o estilo nos respectivos t\u00edtulos. </p> <p>Na sequ\u00eancia apresentamos os passos de configura\u00e7\u00e3o para <code>T\u00edtulo 1</code>.</p>"},{"location":"informatica/editores-texto/abnt/#alinhamento-do-texto","title":"Alinhamento do texto","text":"<p>Dica</p> <p>Alinhar \u00e0 esquerda. Aba <code>Alinhamento</code>, <code>Op\u00e7\u00f5es</code>. </p> <p> </p>"},{"location":"informatica/editores-texto/abnt/#caracteres","title":"Caracteres","text":"<p>Dica</p> <p>Converter automaticamente todos os caracteres para mai\u00fasculo. Aba <code>Efeitos da fonte</code>, <code>Efeitos</code></p> <p> </p>"},{"location":"informatica/editores-texto/abnt/#fonte","title":"Fonte","text":"<p>Dica</p> <p>A norma define que a fonte seja <code>Aria</code> ou <code>Times New Roman</code>, tamanho 14 e um efeito, como negrito. Estas configura\u00e7\u00f5es s\u00e3o encontradas na  Aba <code>Fonte</code></p> <p> </p>"},{"location":"informatica/editores-texto/abnt/#fluxo-do-texto","title":"Fluxo do texto","text":"<p>Dica</p> <p>T\u00edtulos de primeiro n\u00edvel devem iniciar nova p\u00e1gina.Aba <code>Fluxo do texto</code>, <code>Quebras</code></p> <p></p>"},{"location":"informatica/editores-texto/abnt/#nivel-do-paragrafo","title":"N\u00edvel do par\u00e1grafo","text":"<p>Dica</p> <p>Verificar se o par\u00e1grafo est\u00e1 vinculado ao <code>n\u00edvel 1</code> do texto. Esta configura\u00e7\u00e3o est\u00e1 indispon\u00edvel para edi\u00e7\u00e3o. </p> <p></p>"},{"location":"informatica/editores-texto/abnt/#espacamento","title":"Espa\u00e7amento","text":"<p>Dica</p> <p>Antes ou ap\u00f3s o par\u00e1grafo deve-se deixar a dist\u00e2ncia equivalente a duas linhas de texto. No caso do t\u00edtulo de primeiro n\u00edvel, informamos somente o espa\u00e7o abaixo do par\u00e1grafo. Tal configura\u00e7\u00e3o \u00e9 feita na Aba <code>Recuo e Espa\u00e7amento</code>. Importante observar que, para os demais n\u00edveis, deve ser configurado o espa\u00e7o acima e abaixo do par\u00e1grafo. </p> <p></p>"},{"location":"informatica/editores-texto/abnt/#numeracao-dos-capitulos","title":"Numera\u00e7\u00e3o dos cap\u00edtulos","text":"<p>A numera\u00e7\u00e3o de t\u00edtulos deve utilizar n\u00fameros ar\u00e1bicos, identificando a sequ\u00eancia em que aparecem no documento. Considerando que voc\u00ea configurou e aplicou os estilos corretamente, iremos agora configurar a numera\u00e7\u00e3o por meio do menu <code>Ferramentas -&gt; Numera\u00e7\u00e3o de Cap\u00edtulos</code>.</p> <p></p> <p>Observe na tela acima que, no lado esquerdo, temos os <code>10</code> n\u00edveis de t\u00f3picos poss\u00edveis. Clicando sobre um deles, temos a possibilidade de configurar o <code>n\u00famero</code>, <code>\u00ednicio da contagem</code>, <code>estilo de par\u00e1grafo associado ao n\u00edvel</code>, <code>estilo de caractere</code>, <code>mostrar subn\u00edveis</code> e <code>separadores</code>.</p> <p>Em <code>n\u00famero</code>, informe a sequ\u00eancia de n\u00famero ar\u00e1bicos (1,2,3). Verifique se o estilo de par\u00e1grafo informado condiz com \u00e0queles que voc\u00ea utilizou. Fa\u00e7a as altera\u00e7\u00f5es conforme necess\u00e1rio. No campo <code>mostrar subn\u00edveis</code> voc\u00ea deve informar os n\u00edveis que ir\u00e3o compor a numera\u00e7\u00e3o. Aumente este valor para o m\u00e1ximo poss\u00edvel (todos os n\u00edveis anteriores). Demais itens podem ficar com os valores padr\u00e3o. Repita a configura\u00e7\u00e3o para cada n\u00edvel existente no seu documento.</p> <p>Por fim, na aba <code>Posi\u00e7\u00e3o</code>, campo <code>numera\u00e7\u00e3o seguida de</code>, informe <code>Espa\u00e7o</code>.</p> <p></p>"},{"location":"informatica/editores-texto/abnt/#sumario-automatico","title":"Sum\u00e1rio autom\u00e1tico","text":"<p>Uma vez configurados os estilos e numera\u00e7\u00e3o dos cap\u00edtulos, a gera\u00e7\u00e3o do sum\u00e1rio de forma autom\u00e1tica se torna poss\u00edvel. Para o procedimento, devemos ir at\u00e9 a p\u00e1gina reservada ao sum\u00e1rio na se\u00e7\u00e3o de elementos pr\u00e9-textuais.</p> <p>Ap\u00f3s, acessar a aba <code>Refer\u00eancias</code>, bot\u00e3o <code>Refer\u00eancias</code> que est\u00e1 a direita, op\u00e7\u00e3o <code>Sum\u00e1rio, \u00cdndice ou Bibliografia</code>.</p> <p>Em <code>T\u00edtulo</code> deixaremos o valor padr\u00e3o. No campo <code>Tipo</code> deve estar <code>Sum\u00e1rio</code> e em <code>Para</code>, o valor deve ser <code>Documento inteiro</code>. Ao clicar em <code>OK</code>, o \u00edndice do sum\u00e1rio ser\u00e1 inserido autom\u00e1ticamente no local em que o cursor foi posicionando no documento.</p> <p></p> <p>Quando o sum\u00e1rio \u00e9 inserido, cada entrada gerada vincula-se com estilos pr\u00e9-definidos. Logo, precisaremos ajustar a formata\u00e7\u00e3o destes estilos para atender os crit\u00e9rios da ABNT, que orienta a apresenta\u00e7\u00e3o de cada entrada no mesmo formato em que aparece no corpo do texto. O que temos de momento \u00e9 algo semelhante a imagem abaixo (ir\u00e1 depender dos t\u00edtulos definidos em seu documento).</p> <p></p> <p>Para ajustarmos a formata\u00e7\u00e3o das entradas do sum\u00e1rio devemos inicialmente saber quais estilos s\u00e3o utilizados. Para isso, ser\u00e1 preciso clicar com o bot\u00e3o direito do mouse sobre qualquer parte do sum\u00e1rio e escolher a op\u00e7\u00e3o <code>Editar \u00cdndice</code>. Na tela apresentada, escolhemos a aba <code>Estilos</code>.</p> <p></p> <p>Perceba que, no lado esquerdo da tela, temos cada n\u00edvel e o respectivo estilo entre <code>[]</code>. J\u00e1 no lado direito s\u00e3o listados todos os estilos de par\u00e1grafo dispon\u00edveis para que seja poss\u00edvel vincular o n\u00edvel ao estilo desejado.</p> <p>Nossa op\u00e7\u00e3o ser\u00e1, novamente, editar os estilos padr\u00e3o (<code>T\u00edtulo de sum\u00e1rio</code>, <code>Sum\u00e1rio 1</code>, <code>Sum\u00e1rio 2</code>, etc), adequando-os \u00e0quilo que precisamos. O passo-a-passo para realizar o ajuste \u00e9 id\u00eantico a edi\u00e7\u00e3o de qualquer outro estilo de par\u00e1grafo.</p> <p>Al\u00e9m dos estilos, precisamos ajustar a constru\u00e7\u00e3o das entradas, especificamente a <code>parada de tabula\u00e7\u00e3o</code>. Voc\u00ea deve ter percebido que o espa\u00e7o entre o n\u00famero da p\u00e1gina e o texto do cap\u00edtulo est\u00e1 sendo preenchido com <code>.</code>, sendo que o correto \u00e9 <code>espa\u00e7o</code>. Ent\u00e3o, para este ajuste, devemos acessar a aba <code>Entradas</code>, e, para cada n\u00edvel desejado, alterar o caractere da <code>parada de tabula\u00e7\u00e3o</code>. </p> <p>Dica</p> <p>Clicar primeiro sobre o n\u00famero do n\u00edvel, ap\u00f3s no \"T\" e, por fim, informar o caractere de preenchimento correto. </p> <p></p>"},{"location":"informatica/editores-texto/abnt/#legendas","title":"Legendas","text":"<p>Legendas s\u00e3o aplicadas a tabelas, quadros e ilustra\u00e7\u00f5es. Compreendem a descri\u00e7\u00e3o do item, de forma objetiva, bem como indicam a sequ\u00eancia do elemento dentro do texto. Segundo a norma, devem estar em tamanho de fonte <code>10</code>, entre linhas simples, caracteres em mai\u00fasculo.</p> <ul> <li><code>Quadros</code>:  apresenta\u00e7\u00e3o tabular de dados, com moldura em torno (borda externa). Utilizado para apresentar conte\u00fado te\u00f3rico e dados num\u00e9ricos sem tratamento estat\u00edstico. </li> <li> <p><code>Tabelas</code>: apresenta\u00e7\u00e3o tabular de dados num\u00e9ricos com tratamento estat\u00edstico.</p> </li> <li> <p><code>Ilustra\u00e7\u00f5es</code>: S\u00e3o imagens, figuras, gr\u00e1ficos, diagramas, entre outros.</p> </li> </ul> <p>A inser\u00e7\u00e3o de legendas segue o mesma estrat\u00e9gia para todos os tipos citados. Por conta disso, iremos utilizar tabelas e imagens como estudo de caso. </p> <p>Inserir tabelas no Writer pode ser feito atrav\u00e9s do menu <code>Tabela -&gt; Inserir Tabela</code>.</p> <p></p> <p>O campo <code>nome</code> \u00e9 utilizado para identificar o objeto internamente  e n\u00e3o ser\u00e1 apresentado no texto. Em <code>Op\u00e7\u00f5es</code>, \u00e9 \u00fatil marcar <code>T\u00edtulo</code> e, ap\u00f3s, <code>Repetir linhas de t\u00edtulo nas novas p\u00e1ginas</code>. Tal configura\u00e7\u00e3o aplica-se quando o conte\u00fado da tabela excede o espa\u00e7o dispon\u00edvel da p\u00e1gina e gera uma quebra. Neste caso, as primeiras <code>n</code> linhas da tabela ser\u00e3o repetidas na pr\u00f3xima p\u00e1gina. Tamb\u00e9m \u00e9 poss\u00edvel marcar um estilo predefinido de estilo para tabelas, caso necess\u00e1rio.</p> <p>Uma vez inserida no texto, j\u00e1 podemos adicionar a legenda para nossa tabela, clicando com o bot\u00e3o direito sobre qualquer c\u00e9lula da mesma, op\u00e7\u00e3o <code>Inserir Legenda</code>. O procedimento \u00e9 exatamente o mesmo para outros tipos de elementos, como quadros, imagens, etc. A tela a seguir ser\u00e1 apresentada:</p> <p></p> <p>Em <code>Legenda</code>, informamos o texto que ir\u00e1 aparecer no documento. Em <code>Categoria</code>, informamos qual \u00e9 o \"tipo\" do objeto (se n\u00e3o houver na lista, \u00e9 poss\u00edvel informar um novo). A <code>Numera\u00e7\u00e3o</code> corresponde a configura\u00e7\u00e3o de como a sequ\u00eancia ser\u00e1 apresentada (segundo a norma, utilizar n\u00fameros ar\u00e1bicos). O caractere que ir\u00e1 separar o n\u00famero do texto da legenda deve ser especificado em <code>Separador</code>. Aqui utilizamos o tra\u00e7o (-). Por fim, em <code>Posi\u00e7\u00e3o</code>, informar <code>em cima</code>.</p> <p>Podemos repetir este procedimento para todo objeto que requer legenda no documento. Contudo, \u00e9 mais pr\u00e1tico configurar op\u00e7\u00f5es de inser\u00e7\u00e3o autom\u00e1tica de legendas. Conseguimos isso por meio do bot\u00e3o <code>Autom\u00e1tico</code>. Na tela apresentada, marcamos para quais objetos desejos que o Writer insira as legendas automaticamente, assim como a configura\u00e7\u00e3o esperada.</p> <p></p> <p>Quanto \u00e0 formata\u00e7\u00e3o do texto legenda, este deve ser realizado por meio do estilo correspondente. Editar o estilo a partir do texto \u00e9 simples. Basta clicar sobre o texto com o bot\u00e3o direito do mouse, escolher a op\u00e7\u00e3o <code>Par\u00e1grafo -&gt; Editar Estilo</code>. A norma recomenda que a fonte seja <code>Arial</code> ou <code>Times New Roman</code>, tamanho <code>10</code>, <code>negrito</code>, caracteres em mai\u00fasculo.</p> <p>Quando temos legendas inseridas em nosso documento, podemos solicitar ao writer que insira o \u00edndice autom\u00e1tico, se assim desejarmos, na folha correspondente dos elementos pr\u00e9-textuais. O processo \u00e9 id\u00eantico \u00e0 inser\u00e7\u00e3o do sum\u00e1rio, com a simples diferen\u00e7a de que devemos alterar o tipo de \u00edndice a ser inserido. Os campos importantes s\u00e3o <code>T\u00edtulo</code>, <code>Tipo</code> e <code>Categoria</code>, que devem estar alinhados com os objetos que voc\u00ea deseja listar no \u00edndice. J\u00e1 a formata\u00e7\u00e3o do \u00edndice deve ser feita pelos estilos correspondentes, tal qual explicamos com rela\u00e7\u00e3o ao sum\u00e1rio.</p> <p></p>"},{"location":"informatica/editores-texto/abnt/#entradas-bibliograficas-e-bibliografia","title":"Entradas bibliogr\u00e1ficas e bibliografia","text":"<p>Quando elaboramos documentos acad\u00eamicos/cient\u00edficos, consultamos diferentes fontes para endossar nossas afirma\u00e7\u00f5es. Livros, revistas cient\u00edficas, web sites, documentos digitais s\u00e3o exemplos de fontes que podemos utilizar. Todos estes recursos precisam ser citados no texto e jamais podemos utilizar uma afirma\u00e7\u00e3o alheia como se fosse nossa. Tal pr\u00e1tica constitui crime de pl\u00e1gio e \u00e9 repudiada por qualquer acad\u00eamico s\u00e9rio.</p> <p>Manter controle das cita\u00e7\u00f5es n\u00e3o \u00e9 tarefa simples, especialmente quando o documento faz uso de dezenas ou at\u00e9 centenas delas. Al\u00e9m disso, a norma ABNT especifica detalhadamente como devemos citar e apresentar a bibliografia que utilizamos.</p> <p>Para nos auxiliar neste tarefa, o LibreOffice Writer oferece ferramentas espec\u00edficas, voltadas ao gerenciamento de bibliografia de documentos. Trabalhar com refer\u00eancias bibliogr\u00e1ficas requer a compreens\u00e3o dos conceitos de <code>banco de dados bibliogr\u00e1fico</code>, <code>entrada bibliogr\u00e1fica</code> e <code>bibliografia</code>.</p> <p>O <code>banco de dados bibliogr\u00e1fico</code> constitui o reposit\u00f3rio de todas as refer\u00eancias j\u00e1 cadastradas no LibreOffice Writer. Cada registro cont\u00e9m os detalhes da obra, como autores, t\u00edtulo, ano de publica\u00e7\u00e3o, entre outros campos. </p> <p>Logo, o primeiro do processo do processo ser\u00e1 cadastrar a obra neste banco de dados. Para isso, devemos acessar o menu <code>Ferramentas -&gt; Banco de Dados Bibliogr\u00e1fico</code>.</p> <p>Na tela apresentada, iremos cadastrar os detalhes de todas as obras que precisamos citar no documento. O campo <code>Nome abreviado</code> merece especial aten\u00e7\u00e3o, pois ele ser\u00e1 inserido nas cita\u00e7\u00f5es. Ent\u00e3o, \u00e9 conveniente informar de acordo com a norma, a qual define como sendo o <code>SOBRENOME, ano de publica\u00e7\u00e3o</code>.</p> <p></p> <p>Ap\u00f3s inclu\u00edda a bibliografia, podemos cit\u00e1-la no texto a partir do menu <code>Inserir -&gt; Sum\u00e1rios e \u00cdndices -&gt; Entrada Bibliogr\u00e1fica</code>. O pr\u00f3ximo passo ser\u00e1 escolher qual das refer\u00eancias j\u00e1 cadastradas no banco de dados bibliogr\u00e1ficos ser\u00e1 utilizada na cita\u00e7\u00e3o. Faremos isso para toda e qualquer cita\u00e7\u00e3o existente.</p> <p></p> <p>Por fim, iremos adicionar a bibliografia ao documento. Faremos tal processo por meio do menu <code>Inserir -&gt; Sum\u00e1rios e \u00cdndices -&gt; Sum\u00e1rio, \u00edndice ou bibliografia</code>. Lembre-se de deixar o cursor do mouse na posi\u00e7\u00e3o correta do documento antes de inserir o \u00edndice.</p> <p>A tela de configura\u00e7\u00e3o \u00e9 a mesma que utilizamos para inserir os demais \u00edndices, com exce\u00e7\u00e3o dos campos de configura\u00e7\u00e3o espec\u00edfica para bibliografia. <code>Entrada num\u00e9rica</code>, por exemplo, \u00e9 o local onde alteramos a forma das cita\u00e7\u00f5es (n\u00fameros ou nome abreviado). Em <code>Colchetes</code>, especificamos o tipo de caractere que ir\u00e1 envolver a cita\u00e7\u00e3o no texto.</p> <p></p> <p>Outra importante configura\u00e7\u00e3o refere-se a definir como cada entrada de bibliografia ser\u00e1 apresentada no texto. Perceba que, na coluna da esquerda, est\u00e3o todos os tipos de obras, sendo que para cada uma delas podemos especificar o formato de constru\u00e7\u00e3o da refer\u00eancia, modificando a composi\u00e7\u00e3o e ordem dos campos em <code>Estrutura e Formata\u00e7\u00e3o</code>. A ABNT especifica regras para referenciar cada tipo de obra. Logo, voc\u00ea dever\u00e1 compor a entrada com base na norma.</p> <p></p>"},{"location":"informatica/editores-texto/abnt/#elementos-pos-textuais","title":"Elementos p\u00f3s-textuais","text":"<p>Os elementos p\u00f3s-textuais compreendem as <code>refer\u00eancias bibliogr\u00e1fias</code>, <code>ap\u00eandices</code> e <code>anexos</code>. Quanto \u00e0s refer\u00eancias, j\u00e1 comentamos sobre como inser\u00ed-las de forma autom\u00e1tica no documento. J\u00e1  <code>ap\u00eandices</code> e <code>anexos</code> seguem o padr\u00e3o de t\u00edtulos dos elementos textuais de primeiro n\u00edvel.</p>"},{"location":"informatica/editores-texto/abnt/#referencias","title":"Refer\u00eancias","text":"<p>BRITO, G. F.; CHOI, V. P.; ALMEIDA, A. Manual ABNT: Regras Gerais de Estilo e Formata\u00e7\u00e3o de Trabalhos Acad\u00eamicos (4\u00aa edi\u00e7\u00e3o revisada e ampliada).  2014. Dispon\u00edvel em: &lt;http://biblioteca.fecap.br/wp-content/uploads/2016/03/Manual-ABNT_-regras-gerais-de-estilo-e-formata\u00e7\u00e3o-de-trabalhos-acad\u00eamicos.pdf&gt;. Acesso em: 5 jun. 2021.</p>"},{"location":"informatica/editores-texto/estilos/","title":"Trabalhando com estilos","text":"<p>Certamente um dos recursos mais \u00fateis e importantes do Writer assim como de outros editores de texto s\u00e3o os estilos. Os estilos s\u00e3o recursos b\u00e1sicos, que permitem a formata\u00e7\u00e3o do texto de forma simples e consistente. Uma vez aplicado o estilo, tudo grupo de formata\u00e7\u00f5es associado \u00e9 aplicado  de uma \u00fanica vez. Da mesma forma, altera\u00e7\u00f5es no estilo t\u00eam impacto direto em todos os locais em que o estilo foi aplicado no documento, tornando o processo de modifica\u00e7\u00f5es de formato muito mais simples. Al\u00e9m disso, os estilos s\u00e3o utilizados para automatizar a gera\u00e7\u00e3o de tabelas de conte\u00fado, como sum\u00e1rios, lista de figuras, lista de tabelas.</p>"},{"location":"informatica/editores-texto/estilos/#trabalhando-com-estilos","title":"Trabalhando com estilos","text":"<p>Os estilos s\u00e3o particularmente \u00fateis na escrita de documentos com muitas p\u00e1ginas e/ou baseados em algum modelo. Alguns usu\u00e1rios aplicam formata\u00e7\u00e3o de par\u00e1grafo para cada trecho do documento que precisa respeitar a mesma est\u00e9tica. Embora produza o resultado esperado, \u00e9 mais demorado e propenso a erros. Imagine que voc\u00ea tenha formatado um documento de 200 p\u00e1ginas e na \u00faltima percebeu que o tamanho do corpo do texto deveria ser 11 e n\u00e3o 12, como est\u00e1. O que fazer?</p> <p>Sem utilizar estilos, a \u00fanica op\u00e7\u00e3o \u00e9 aplicar a formata\u00e7\u00e3o novamente em todos os trechos necess\u00e1rios. J\u00e1 se utilizarmos estilos, basta editar a configura\u00e7\u00e3o do estilo e aplicar a altera\u00e7\u00e3o. Automaticamente todos os trechos associado \u00e0quele estilo ser\u00e1 atualizados. Da\u00ed a import\u00e2ncia de sabermos como utilizar este importante recurso.</p> <p>O Writer oferece estilos para caracteres, par\u00e1grafos, p\u00e1ginas, quadros, tabelas e listas. Para cada um deles pode-se configurar uma ampla quantidade de par\u00e2metros de formata\u00e7\u00e3o associados. Na sequ\u00eancia, as principais destas categorias de estilo ser\u00e3o descritas de forma detalhada.</p>"},{"location":"informatica/editores-texto/estilos/#estilos-de-paragrafo","title":"Estilos de Par\u00e1grafo","text":"<p>Estilos de par\u00e1grafo controlam todos os aspectos de apar\u00eancia de um par\u00e1grafo de texto, como alinhamento, paradas de tabula\u00e7\u00e3o, espa\u00e7amento entrelinhas, bordas, espa\u00e7amento antes e ap\u00f3s o par\u00e1grafo, recuo de primeira linha, entre outros.</p> <p>Para adicionar um novo estilo de par\u00e1grafo ao documento, o usu\u00e1rio deve acessar o Gerenciador de Estilos, o qual encontra-se no menu Estilos. Ao ativar o gerenciador, uma janela \u00e9 apresentada encaixada \u00e0 direita da tela de trabalho. Nela apresentam-se todas as categorias de estilo, bem como os estilos existentes para elas.</p> <p></p> <p>Para criar um estilo de par\u00e1grafo, devemos clicar com o bot\u00e3o direito no Gerenciador de Estilos, estando selecionado a op\u00e7\u00e3o Estilos de Par\u00e1grafo, op\u00e7\u00e3o Novo. Ao concluir o procedimento, a janela de configura\u00e7\u00e3o do novo estilo ser\u00e1 exibida. Voc\u00ea ir\u00e1 perceber que o n\u00famero de configura\u00e7\u00f5es \u00e9 consider\u00e1vel. Iremos tentar explorar as principais na sequ\u00eancia.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-organizador","title":"Aba Organizador","text":"<p>Permite configurar o nome do novo estilo, que \u00e9 uma informa\u00e7\u00e3o obrigat\u00f3ria. Este nome deve ser suficientemente auto-descritivo, de modo que possa indicar claramente sua aplicabilidade no documento. A configura\u00e7\u00e3o Auto atualizar deve ser utilizada se h\u00e1 interesse de que, quando aplicada uma formata\u00e7\u00e3o direta ao par\u00e1grafo, todos os demais par\u00e1grafos associados ao estilo recebam tal formata\u00e7\u00e3o de forma autom\u00e1tica.</p> <p>Pr\u00f3ximo estilo refere-se ao pr\u00f3ximo estilo de par\u00e1grafo aplicado assim que o usu\u00e1rio pressionar a tecla Enter estando em um par\u00e1grafo do estilo atual. \u00c9 uma configura\u00e7\u00e3o muito \u00fatil para automatizar o fluxo de estilos de um documento. H\u00e1 tamb\u00e9m a possibilidade de herdar propriedades de outros estilos preexistentes e de se associar o novo estilo a uma das categorias dispon\u00edveis.</p>"},{"location":"informatica/editores-texto/estilos/#aba-recuos-e-espacamento","title":"Aba Recuos e Espa\u00e7amento","text":"<p>Aqui configuramos o distanciamento (recuo) do par\u00e1grafo em rela\u00e7\u00e3o \u00e0s margens esquerda e direita, bem como o recuo de primeira linha que deve ser aplicado. \u00c9 poss\u00edvel aplicar medidas utilizando unidades como pontos (pt), cent\u00edmetros (cm), mil\u00edmetros (mm), metros (m), entre outras. Assim que o campo perde o foco, a ferramenta automaticamente converte a medida informada para cent\u00edmetros.</p> <p>Outro recurso \u00e9 o espa\u00e7amentos antes e ap\u00f3s o par\u00e1grafo. Caso este distanciamento deva ocorrer apenas quando o pr\u00f3ximo par\u00e1grafo for de um estilo diferente, ent\u00e3o deve-se marcar a op\u00e7\u00e3o N\u00e3o adicionar espa\u00e7os entre os par\u00e1grafos do mesmo estilo. O espa\u00e7o entre as linhas do par\u00e1grafo \u00e9 outra configura\u00e7\u00e3o dispon\u00edvel, que pode ser um dos valores predefinidos, como simples, 1.5 linhas, duplo, proporcional (100% equivale ao espa\u00e7amento simples), entre outros.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-alinhamento","title":"Aba Alinhamento","text":"<p>Especifica o alinhamento do par\u00e1grafo quando aplicado o estilo. Os alinhamentos dispon\u00edveis s\u00e3o esquerda, direita, centralizado e justificar. \u00c9 poss\u00edvel definir tamb\u00e9m um alinhamento espec\u00edfico para a \u00faltima linha do par\u00e1grafo, que pode diferir das anteriores. Pode-se tamb\u00e9m adicionar outras configura\u00e7\u00f5es de alinhamento relacionadas a idiomas asi\u00e1ticos, caracteres subdimensionados e superdimensionados e de dire\u00e7\u00e3o de entrada.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-fonte","title":"Aba Fonte","text":"<p>As op\u00e7\u00f5es de formata\u00e7\u00e3o de fonte compreendem a fam\u00edlia, estilo, tamanho (em pontos) e idioma.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-efeitos-da-fonte","title":"Aba Efeitos da Fonte","text":"<p>Efeitos da fonte, por sua vez, apresenta configura\u00e7\u00f5es relacionadas a efeitos, como cor, relevo, tachado, sublinhado, sobre linhas, sombra e contorno. \u00c9 poss\u00edvel, por exemplo, definir que todas as letras ser\u00e3o convertidas para mai\u00fasculo, min\u00fasculo ou mesmo para t\u00edtulo, onde a inicial de cada palavra \u00e9 posta em mai\u00fasculo e as demais letras em min\u00fasculo. </p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-posicao","title":"Aba Posi\u00e7\u00e3o","text":"<p>Configurar a posi\u00e7\u00e3o dos caracteres do par\u00e1grafo refere-se \u00e0 mudan\u00e7a para sobrescrita, subscrita ou posi\u00e7\u00e3o normal de escrita. Quando informado sobrescrito ou subscrito, pode-se informar o percentual de deslocamento para cima ou para baixo em rela\u00e7\u00e3o a linha base. Outra configura\u00e7\u00e3o interessante \u00e9 a possibilidade de rotacionar e/ou dimensionar caracteres de diversas formas.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-estruturas-de-topicos","title":"Aba Estruturas de T\u00f3picos","text":"<p>A configura\u00e7\u00e3o de estrutura de t\u00f3picos \u00e9 um recurso de grande valia para gera\u00e7\u00e3o de sum\u00e1rio autom\u00e1tico, por exemplo. Isso porque todo estilo de par\u00e1grafo est\u00e1 vinculado a um n\u00edvel de estrutura espec\u00edfico do texto, que ao todo s\u00e3o 11. Dentre estes 11 n\u00edveis consta o Corpo do Texto, que refere-se ao conte\u00fado escrito e que n\u00e3o tem rela\u00e7\u00e3o com a hierarquia de t\u00edtulos do documento. Os demais 10 n\u00edveis, nomeados de N\u00edvel 1 a N\u00edvel 10, compreendem toda hierarquia de estrutura de t\u00edtulos. Deste modo, se um determinado estilo for vinculado ao N\u00edvel 2, ele automaticamente indicar\u00e1 que o conte\u00fado do par\u00e1grafo corresponde a um t\u00edtulo de n\u00edvel 2 no documento.</p> <p>Na configura\u00e7\u00e3o de Numera\u00e7\u00e3o especificamos qual \u00e9 o estilo de lista utilizado para numerar o par\u00e1grafo. Tamb\u00e9m \u00e9 poss\u00edvel habilitar e configurar a numera\u00e7\u00e3o das linhas do par\u00e1grafo, recurso muito interessante para reda\u00e7\u00e3o de atas, por exemplo.</p> <p></p> <p>No caso da gera\u00e7\u00e3o de sum\u00e1rio autom\u00e1tico, cria-se um estilo para cada um dos 10 n\u00edveis da estrutura de t\u00f3picos, associando-os com um estilo de lista espec\u00edfico. Feito isso, basta configurar o documento para fazer uso dos estilos criados para numerar os diferentes cap\u00edtulos. Tal configura\u00e7\u00e3o \u00e9 feita por meio do menu Ferramentas-&gt; Numera\u00e7\u00e3o de Cap\u00edtulos, o qual d\u00e1 acesso \u00e0 janela de configura\u00e7\u00f5es.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#estilos-de-caracteres","title":"Estilos de Caracteres","text":"<p>Estilos de caractere permitem definir formata\u00e7\u00e3o espec\u00edfica para um \u00fanico caractere ou palavra em meio a um par\u00e1grafo. Tal qual ocorre com os estilos de par\u00e1grafo, a cria\u00e7\u00e3o de um estilo de caractere \u00e9 feito clicando-se com o bot\u00e3o direito sobre a \u00e1rea branco do Gerenciador de Estilos, naturalmente estando agora na categoria Estilos de Caractere, selecionando a op\u00e7\u00e3o Novo.</p> <p>As principais op\u00e7\u00f5es de configura\u00e7\u00e3o de estilos de caractere s\u00e3o oferecidas pelas abas Organizador, Fonte, Efeito de Fonte e Posi\u00e7\u00e3o, todas elas j\u00e1 abordadas em detalhes.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#estilos-de-pagina","title":"Estilos de P\u00e1gina","text":"<p>Assim como par\u00e1grafos e caracteres, as p\u00e1ginas de um documento tamb\u00e9m podem receber estilos de formata\u00e7\u00e3o. Normalmente os estilos de p\u00e1gina s\u00e3o \u00fateis para configurar margens, orienta\u00e7\u00e3o, bordas e a apar\u00eancia do cabe\u00e7alho, rodap\u00e9 e notas de rodap\u00e9. O procedimento utilizado para criar um novo estilo de p\u00e1gina segue o mesmo procedimento dos estilos de caractere e par\u00e1grafo. H\u00e1, contudo, altera\u00e7\u00f5es substanciais nas op\u00e7\u00f5es de formata\u00e7\u00e3o que podem ser configuradas, conforme podemos ver na tela a seguir.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-pagina","title":"Aba P\u00e1gina","text":"<p>As configura\u00e7\u00f5es de p\u00e1gina v\u00e3o desde aspectos b\u00e1sicos, como formato do papel, margens e orienta\u00e7\u00e3o a configura\u00e7\u00f5es mais avan\u00e7adas de leiaute, como estilos vinculados somente \u00e0s p\u00e1ginas da direita ou da esquerda e o tipo de numera\u00e7\u00e3o a ser utilizado. Um mesmo documento pode apresentar diversos estilos de p\u00e1gina vinculados, em primeiro momento, pela possibilidade de um estilo de p\u00e1gina vincular-se a um pr\u00f3ximo estilo (Aba Organizador) e, em segundo momento, pela possibilidade de sec\u00e7\u00e3o do documento em diferentes partes l\u00f3gicas.</p> <p>Este processo de seccionamento \u00e9 feito pelo menu Inserir -&gt; Quebra Manual. Dentre as op\u00e7\u00f5es oferecidas (quebra de linha, coluna e p\u00e1gina), a quebra de p\u00e1gina permite, a partir da posi\u00e7\u00e3o do cursor, modificar o fluxo de estilos de p\u00e1gina aplicados. As quebras de p\u00e1gina s\u00e3o necess\u00e1rias pois representam o \u00fanico meio de alterar os fluxos de estilo sem modificar o documento integralmente, afinal inicialmente o documento encontra-se integralmente dentro de uma \u00fanica se\u00e7\u00e3o de conte\u00fado. </p> <p></p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-area","title":"Aba \u00c1rea","text":"<p>Permite configurar o preenchimento de fundo da p\u00e1gina. Comumente nenhum preenchimento \u00e9 utilizado, mas a ferramenta Writer permite utilizar preenchimentos de diferentes categorias, como Cor, Gradiente, Bitmap,  Padronagem e Hachurado. Para ilustrar, imagem a seguir apresenta a op\u00e7\u00e3o preenchimento de \u00e1rea por hachuras.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-transparencia","title":"Aba Transpar\u00eancia","text":"<p>Sendo poss\u00edvel aplicar diferentes tipos de preenchimento \u00e0 \u00e1rea da p\u00e1gina, podemos tamb\u00e9m aplicar diferentes estrat\u00e9gias de transpar\u00eancia, como gradiente, padr\u00e3o ou simplesmente nenhuma. Importante considerar que a transpar\u00eancia tem por efeito tornar gradualmente vis\u00edvel aquilo que encontra-se atr\u00e1s do preenchimento e que a escala de valores inicia em 0%, indicando total opacidade at\u00e9 100%, conferindo total transpar\u00eancia \u00e0 \u00e1rea.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-cabecalho-e-aba-rodape","title":"Aba Cabe\u00e7alho e Aba Rodap\u00e9","text":"<p>Cabe\u00e7alhos e rodap\u00e9s s\u00e3o \u00e1reas nas margens superior e inferior das p\u00e1ginas para adicionar textos ou figuras. Os cabe\u00e7alhos e rodap\u00e9s s\u00e3o adicionados ao estilo de p\u00e1gina atual. Todas as p\u00e1ginas que usarem o mesmo estilo receber\u00e3o automaticamente o cabe\u00e7alho ou rodap\u00e9 adicionado. \u00c9 poss\u00edvel inserir campos, tais como n\u00fameros de p\u00e1ginas e t\u00edtulos de cap\u00edtulos, nos cabe\u00e7alhos e rodap\u00e9s de um documento de texto.</p> <p>Quando configuramos cabe\u00e7alho e rodap\u00e9 no estilo de p\u00e1gina, estamos informando a apar\u00eancia e formato que tais estruturas ter\u00e3o nas p\u00e1ginas onde o estilo em quest\u00e3o for aplicado. Cabe\u00e7alho e rodap\u00e9 s\u00e3o estruturas opcionais, podendo ser exibidas ou n\u00e3o no documento.</p> <p>Os principais atributos de formata\u00e7\u00e3o relacionados aos cabe\u00e7alhos s\u00e3o a repeti\u00e7\u00e3o do conte\u00fado, tanto em p\u00e1ginas da esquerda quanto da direita e se a primeira p\u00e1gina ter\u00e1 o mesmo conte\u00fado que as demais. Adicionalmente tamb\u00e9m \u00e9 poss\u00edvel especificar as margens do cabe\u00e7alho (esquerda e direita). Para rodap\u00e9, os mesmos atributos de formata\u00e7\u00e3o de cabe\u00e7alho s\u00e3o aplicados.</p> <p></p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-bordas","title":"Aba Bordas","text":"<p>Bordas s\u00e3o contornos aplicados a diferentes objetos, dentre eles, \u00e0s p\u00e1ginas. Na configura\u00e7\u00e3o de bordas pode-se especificar quais dos lados a borda estar\u00e1 ativa. Quando ativa, \u00e9 poss\u00edvel tamb\u00e9m determinar o tipo de linha, espessura, cor, dist\u00e2ncia em rela\u00e7\u00e3o ao conte\u00fado e efeito de sombra. Todas as op\u00e7\u00f5es dispon\u00edveis s\u00e3o apresentadas na aba Bordas.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-colunas","title":"Aba Colunas","text":"<p>O espa\u00e7o contido entre as margens, que \u00e9 destinado ao conte\u00fado do documento, a depender do estilo da p\u00e1gina, pode ser subdividido em colunas, na quantidade que o usu\u00e1rio desejar. Quando a quantidade de colunas for superior a 1 (um), torna-se poss\u00edvel configurar a largura de cada uma das colunas, espa\u00e7amento entre as mesmas e eventualmente as caracter\u00edsticas da linha que as separa.</p> <p></p>"},{"location":"informatica/editores-texto/estilos/#aba-notas-de-rodape","title":"Aba Notas de Rodap\u00e9","text":"<p>Por vezes, na constru\u00e7\u00e3o de um documento de texto, torna-se conveniente adicionar uma anota\u00e7\u00e3o explicativa ao p\u00e9 da p\u00e1gina. Comumente tal anota\u00e7\u00e3o est\u00e1 diretamente vinculada a uma palavra ou trecho de par\u00e1grafo da p\u00e1gina em que se encontra. A este recurso tipogr\u00e1fico chamamos de nota de rodap\u00e9. No Writer, as configura\u00e7\u00f5es de formata\u00e7\u00e3o das notas de rodap\u00e9 s\u00e3o feitas por meio dos estilos de p\u00e1gina.</p> <p>As op\u00e7\u00f5es de formata\u00e7\u00e3o oferecidas permitem controlar a \u00e1rea reservada para as notas e a configura\u00e7\u00e3o da linha separadora, que estabelece a divisa entre o texto e as suas respectivas notas. Com rela\u00e7\u00e3o \u00e0 linha separadora, \u00e9 poss\u00edvel especificar a posi\u00e7\u00e3o horizontal da mesma, sua espessura, cor, comprimento e distanciamento em rela\u00e7\u00e3o a primeira nota. </p> <p></p>"},{"location":"informatica/editores-texto/estilos/#referencias","title":"Refer\u00eancias","text":"<p>The Document Foundation. Ajuda do LibreOffice 7.1. Dispon\u00edvel em https://help.libreoffice.org/latest/pt-BR/text/shared/05/new_help.html?&amp;DbPAR=WRITER. Acesso em 21 mai. 2021.</p>"},{"location":"informatica/editores-texto/introducao/","title":"Writer","text":"<p>Afirmar que a tecnologia transformou drasticamente o mundo nas \u00faltimas d\u00e9cadas certamente n\u00e3o tr\u00e1s espanto a ningu\u00e9m, afinal todos s\u00e3o testemunhas oculares das transforma\u00e7\u00f5es que dia ap\u00f3s dia ocorrem na sociedade em fun\u00e7\u00e3o dela. Dentre as diversas \u00e1reas que popularmente chama-se \u201ctecnologia\u201d, a Inform\u00e1tica certamente ocupa lugar de destaque, haja vista que solu\u00e7\u00f5es de hardware e software t\u00eam contribu\u00eddo significativamente para revolu\u00e7\u00f5es em diversas \u00e1reas, como comunica\u00e7\u00e3o, rela\u00e7\u00f5es de consumo, educa\u00e7\u00e3o, medicina, entre outros.</p> <p>Um dos usos mais t\u00edpicos do computador compreende a edi\u00e7\u00e3o e produ\u00e7\u00e3o de documentos escritos e planilhas eletr\u00f4nicas. Estes recursos, hoje t\u00e3o comuns, foram importantes alicerces na populariza\u00e7\u00e3o do uso da arquitetura PC (Personal Computer) em empresas e, tempos ap\u00f3s, nos ambientes dom\u00e9sticos. Logo, ter dom\u00ednio na manipula\u00e7\u00e3o de tais softwares representa uma das muitas habilidades exigidas pelo mercado de trabalho atual.</p> <p>Vamos come\u00e7ar falando de editores de texto, softwares especializados na produ\u00e7\u00e3o de documentos textuais com amplos recursos para edi\u00e7\u00e3o e diagrama\u00e7\u00e3o. Est\u00e3o presentes no dia-a-dia de boa parte dos usu\u00e1rios de computador, seja para escrever aquele relat\u00f3rio da faculdade, fazer um curr\u00edculo caprichado ou mesmo um cart\u00e3o de Dia das M\u00e3es. No mundo do trabalho, \u00e9 ferramenta essencial para produ\u00e7\u00e3o dos mais variados tipos de documentos que transmitem informa\u00e7\u00f5es e formalizam etapas de processos.</p> <p>\u00c9 comum encontrar editores de texto como sendo parte de pacotes para escrit\u00f3rio. Um dos mais populares \u00e9 o Microsoft Office, software propriet\u00e1rio da Microsoft, cujo editor de texto chama-se Microsoft Word. Para fazer uso deste pacote de softwares o usu\u00e1rio deve ter em m\u00e3os uma licen\u00e7a.</p> <p>Para aqueles que n\u00e3o disp\u00f5em de recursos ou mesmo preferem solu\u00e7\u00f5es livres, temos dispon\u00edvel a suite LibreOffice, mantida por uma comunidade de desenvolvedores e distribu\u00edda livremente, sem custos, a qualquer interessado.</p> <p>Outra alternativa interessante s\u00e3o as solu\u00e7\u00f5es em nuvem, como Google Docs. Para finalidades triviais de edi\u00e7\u00e3o, atendem perfeitamente as necessidades. E, quando associadas a recursos de colabora\u00e7\u00e3o e compartilhamento, tornam-se ferramentas extremamente poderosas.</p> <p>Para nossos estudos, utilizaremos o LibreOffice Writer, editor de texto dispon\u00edvel no pacote LibreOffice, vers\u00e3o 7.1, bem como o Google Docs, buscando realizar um contraponto dos recursos dispon\u00edveis.</p> <p>A Suite LibreOffice, da qual o software Writer faz parte, compreende um projeto iniciado em setembro de 2010, \u00e9poca em que um grupo de desenvolvedores volunt\u00e1rios da comunidade anunciou a cria\u00e7\u00e3o do The Document Foundation com vistas a dar continuidade ao desenvolvimento da suite de escrit\u00f3rio OpenOffice. Com o evento da aquisi\u00e7\u00e3o da Sun Microsystems pela empresa Oracle, o projeto OpenOffice foi entregue \u00e0 Funda\u00e7\u00e3o Apache, visto que at\u00e9 ent\u00e3o a Sun era respons\u00e1vel por manter o desenvolvimento ativo.</p> <p>O Writer apresenta uma grande quantidade de recursos para manipula\u00e7\u00e3o de texto e de objetos em documentos por meio da tecnologia WYSIWYG. A tecnologia WYSIWYG \u00e9 acr\u00f4nimo de What You See Is What You Get, ou seja, tecnologias de software onde o usu\u00e1rio tem feedback imediado do resultado final da formata\u00e7\u00e3o do documento, de tal modo que o visto na tela ser\u00e1 o resultado final quando impresso.</p> <p>Apresentamos tela inicial de trabalho do Writer na sequ\u00eancia. Na parte superior consta a barra de menus, com as op\u00e7\u00f5es Arquivo, Editar, Exibir, Inserir, Formatar, Estilos, Tabela, Formul\u00e1rio, Ferramentas, Janela e Ajuda. Logo abaixo \u00e0 barra de menus, encontram-se as abas para acesso r\u00e1pido \u00e0s ferramentas de edi\u00e7\u00e3o. Na aba Arquivo s\u00e3o oferecidos recursos de abertura de documentos locais e remotos, op\u00e7\u00f5es de salvamento e de exporta\u00e7\u00e3o em PDF.  Na aba In\u00edcio encontram-se ferramentas de formata\u00e7\u00e3o de fonte (cor, tipo, tamanho), tipos de listas, alinhamento de texto, entre outros. A aba Inserir, por sua vez, cont\u00e9m op\u00e7\u00f5es para adi\u00e7\u00e3o de objetos como figuras, tabelas, galeria, gr\u00e1ficos, s\u00edmbolos e refer\u00eancias cruzadas no documento. Na aba P\u00e1gina s\u00e3o oferecidas as op\u00e7\u00f5es que permitem configurar margens, tamanho do papel, divis\u00e3o em colunas e orienta\u00e7\u00e3o do documento. Na aba Refer\u00eancias encontram-se as op\u00e7\u00f5es para gest\u00e3o de bibliografia, notas de rodap\u00e9, notas de fim e gera\u00e7\u00e3o de sum\u00e1rio. A aba Revisar cont\u00e9m ferramentas de corre\u00e7\u00e3o ortogr\u00e1fica, dicion\u00e1rio de sin\u00f4nimos, contagem de palavras, anota\u00e7\u00f5es e gest\u00e3o de mudan\u00e7as. Por fim, na aba Exibir, est\u00e3o as op\u00e7\u00f5es relacionadas  \u00e0 exibi\u00e7\u00e3o de r\u00e9guas, zoom e visualiza\u00e7\u00e3o de impress\u00e3o.</p> <p></p>"},{"location":"programacao/linguagens/","title":"Linguagens de Programa\u00e7\u00e3o","text":"<p>A comunica\u00e7\u00e3o humana \u00e9 poss\u00edvel por meio de diferentes linguagens. No caso do computador, o mesmo se aplica, pois fazemos uso de uma linguagem de programa\u00e7\u00e3o para elaborar rotinas de computa\u00e7\u00e3o, ensinando o passo-a-passo para o computador.</p> <p>Importante</p> <p>Programar \u00e9 a arte de escrever sequ\u00eancias de instru\u00e7\u00f5es (comandos) para, computacionalmente, resolver problemas do mundo real por meio de uma linguagem de programa\u00e7\u00e3o.</p> <p>O programador converte problemas do mundo real em algoritmos atrav\u00e9s do processo de abstra\u00e7\u00e3o. O algoritmo representa a solu\u00e7\u00e3o computacional do problema, que ir\u00e1 se tornar operacional a partir do momento em que for codificado por meio de uma linguagem de programa\u00e7\u00e3o. S\u00f3 ent\u00e3o o usu\u00e1rio final ter\u00e1 condi\u00e7\u00f5es de utilizar o programa (que \u00e9 resultado da compila\u00e7\u00e3o ou interpreta\u00e7\u00e3o da codifica\u00e7\u00e3o) para atender suas necessidades.</p> <p>Do problema ao programa</p> <p>Problema &gt; Algoritmo &gt; C\u00f3digo-Fonte &gt; Programa</p> <p>As linguagens de programa\u00e7\u00e3o podem ser classificadas sob diferentes perspectivas. \u00c9 poss\u00edvel agrup\u00e1-las quanto \u00e0:</p> <ul> <li>Gera\u00e7\u00e3o</li> <li>Dom\u00ednio da Aplica\u00e7\u00e3o</li> <li>Implementa\u00e7\u00e3o</li> <li>Paradigma</li> </ul> <p>A classifica\u00e7\u00e3o acima, contudo, n\u00e3o \u00e9 consenso. De qualquer forma, vamos tentar explorar as linguagens de programa\u00e7\u00e3o a partir da \u00f3tica das gera\u00e7\u00f5es e paradigmas.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagens-de-maquina","title":"Linguagens de M\u00e1quina","text":"<p>Interpretada diretamente pelo hardware. \u00c9 a linguagem que o processador reconhece. Compiladores, interpretadores e montadores convertem linguagens de mais alto n\u00edvel para linguagem de m\u00e1quina. Representa a 1\u00ba gera\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o.</p> <p>C\u00f3digo em linguagem de m\u00e1quina \u00e9 normalmente representado em hexadecimal para tornar a leitura mais simples. Contudo, sua codifica\u00e7\u00e3o original \u00e9 bin\u00e1ria. Programar neste n\u00edvel \u00e9 complexo e exige do profissional profundo conhecimento da arquitetura do hardware em que o programa ir\u00e1 executar. Este tipo de c\u00f3digo s\u00f3 \u00e9 port\u00e1vel para arquiteturas id\u00eanticas, uma vez que \u00e9 altamente dependente do hardware que executa.</p> <pre><code>8B542408 83FA0077 06B80000 0000C383\nFA027706 B8010000 00C353BB 01000000\nB9010000 008D0419 83FA0376 078BD989\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagem-assembly","title":"Linguagem Assembly","text":"<p>A interpreta\u00e7\u00e3o de c\u00f3digo de m\u00e1quina por seres humanos \u00e9 extremamente dif\u00edcil. Reconhecer a funcionalidade do c\u00f3digo a partir de sequ\u00eancias de c\u00f3digos hexadecimais \u00e9 praticamente uma odiss\u00e9ia. Isso porque o c\u00f3digo de m\u00e1quina n\u00e3o se preocupa com quest\u00f5es de legibilidade,  afinal o processador n\u00e3o precisa desta feature. </p> <p>A fim de tornar a programa\u00e7\u00e3o uma atividade mais amig\u00e1vel para seres humanos, desenvolveu-se uma linguagem cuja sintaxe era mais pr\u00f3xima da escrita em ingl\u00eas, com as devidas restri\u00e7\u00f5es para tornar o c\u00f3digo n\u00e3o amb\u00edguo. Al\u00e9m de facilitar a compreens\u00e3o do algoritmo, a linguagem Assembly trouxe recursos de abstra\u00e7\u00e3o que permitiram manter a complexidade do programa sob controle (at\u00e9 certo ponto, \u00e9 claro).</p> <p>A Linguagem Assembly foi a primeira tentativa de adicionar abstra\u00e7\u00f5es (s\u00edmbolos chamado de mnem\u00f4nicos) sobre a linguagem de m\u00e1quina na esperan\u00e7a de que a programa\u00e7\u00e3o de software n\u00e3o fosse equipar\u00e1vel a um dos  Doze Trabalhos de H\u00e9rcules. Ela representa a 2\u00aa gera\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o.</p> <p>Nota</p> <p>Perceba que tornou-se necess\u00e1rio \"passar\" o c\u00f3digo-fonte para um software chamado Assembler (montador) para gerar o c\u00f3digo em linguagem de m\u00e1quina (execut\u00e1vel).</p> <p><pre><code>;---------------------------------------------------------------------;\n\nSTART:\n;---------------------------------------------------------------------;\n;    TEST FOR PRESENCE OF CALCULATOR                      ;\n;---------------------------------------------------------------------;\n           SUB     AX,AX\n           MOV     ES,AX\n           SUB     BH,BH\n           MOV     BL,INT_NUMBER\n           SHL     BX,1\n           SHL     BX,1\n           MOV     DI,ES:[BX]\n           MOV     ES,ES:[BX+L\u00f3gica2]\n           ADD     DI,4\n           LEA     SI,TAG\n           MOV     CX,TAG_LEN\n     REPE  CMPSB\n           JE      CALL_CALC\n           MOV     BX,SCREEN_HANDLE\n           MOV     CX,MESSAGE_LEN\n           LEA     DX,MESSAGE\n           MOV     AH,40h\n           INT     21h\n           JMP     SHORT CALC_EXIT\n;---------------------------------------------------------------------;\n;    CALL CALCULATOR                              ;\n;---------------------------------------------------------------------;\nCALL_CALC:\n           MOV     AL,INT_NUMBER\n           MOV     BYTE PTR INT_CODE,AL\n           DB      0CDh      ; INT\n</code></pre> C\u00f3digo-fonte extra\u00eddo de https://assembly.happycodings.com/code13.html.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagens-de-alto-nvel","title":"Linguagens de Alto N\u0131\u0301vel","text":"<p>A escrita do algoritmo \u00e9 feita utilizando-se um conjunto de comandos (palavras reservadas) em ingl\u00eas que determinam as a\u00e7\u00f5es que o computador deve realizar. Se na linguagem Assembly, os comandos representam \"apelidos\" para instru\u00e7\u00e3o de m\u00e1quina, nas linguagens de alto n\u00edvel, os comandos representam a\u00e7\u00f5es abstratas. Tais linguagens abrangem diferentes paradigmas, como estruturado, orientado a objetos, funcional e l\u00f3gico, por exemplo. </p> <p>Ao utilizar linguagens de alto n\u00edvel, o programador aumenta significativamente a portabilidade de seu c\u00f3digo dentre as diferentes arquiteturas de m\u00e1quina existentes, diferentemente da linguagem assembly ou de m\u00e1quina, que s\u00e3o altamente acopladas ao conjunto de instru\u00e7\u00f5es da CPU.</p> <p>Em termos de gera\u00e7\u00e3o, as linguagens de alto n\u00edvel podem enquadrar-se como sendo de 3\u00aa, 4\u00aa ou 5\u00aa gera\u00e7\u00e3o.</p> <p>Veja abaixo um trecho de c\u00f3digo escrito na linguagem C++.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint saldo;//vari\u00e1vel global\n\nint main(){\n    int parcela1, parcela2;//vari\u00e1veis locais\n    parcela1 =10, parcela2 = 12;\n    saldo = parcela1 + parcela2;\n\n    {//in\u00edcio de bloco\n        cout&lt;&lt; saldo &lt;&lt; endl;\n        int saldo = 14; //variavel local\n        cout&lt;&lt; saldo &lt;&lt; endl;\n    }//fim de bloco\n    cout&lt;&lt; saldo &lt;&lt; endl ;\n    return 0;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagens-de-sistema","title":"Linguagens de Sistema","text":"<p>S\u00e3o linguagens de alto n\u00edvel utilizadas para programa\u00e7\u00e3o de sistemas. Caracterizam-se por oferecer acesso facilitado ao hardware, ao mesmo tempo que oferecem recursos t\u00edpicos de linguagens de pr\u00f3posito geral, como estruturas de sele\u00e7\u00e3o, la\u00e7os de repeti\u00e7\u00e3o e blocos, por exemplo. Uma destas linguagens chama-se Rust.</p> <pre><code>fn main() {    \n    println!(\"Hello World!\");\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagens-de-dominio-especifico","title":"Linguagens de Dom\u00ednio Espec\u00edfico","text":"<p>De alto n\u0131\u0301vel, aplicada a um contexto espec\u00edfico, com expressividade limitada. Express\u00f5es regulares s\u00e3o exemplos desta categoria. Saiba mais sobre DSL.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagens-visuais","title":"Linguagens Visuais","text":"<p>Toda linguagem que n\u00e3o \u00e9 baseada em texto. Exemplos deste tipo de linguagem s\u00e3o o Scratch e o Blockly.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/linguagens/#linguagens-esotericas","title":"Linguagens Esot\u00e9ricas","text":"<p>Linguagens que n\u00e3o tem prop\u00f3sito de uso, especificamente. Neste link voc\u00ea encontrar\u00e1 algumas delas.</p> <p>Ficou curioso sobre a classifica\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o? Que tal ler o conte\u00fado deste link para come\u00e7ar :)</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/paradigmas/","title":"Paradigmas de Programa\u00e7\u00e3o","text":"<p>Quando desenvolvemos software, precisamos representar fatos do mundo por meio de uma linguagem formal. Neste processo criativo, de abstra\u00e7\u00e3o, aplicamos estrat\u00e9gias, caminhos, formas espec\u00edficas de expressar, de codificar. A isso chamados paradigma de programa\u00e7\u00e3o.</p> <p>As in\u00fameras linguagens de programa\u00e7\u00e3o que podem ser utilizadas na codifica\u00e7\u00e3o facilitam o uso de um ou mais paradigmas em detrimento de outros. Contudo, n\u00e3o podemos imaginar que a linguagem seja a concretiza\u00e7\u00e3o do paradigma, haja vista que \u00e9 algo abstrato. O que ocorre \u00e9 que, pela facilidade em expressarmos o paradigma \\(Y\\) por meio de um linguagem \\(X\\), a classificamos como sendo do tipo \\(Y\\). Por exemplo, sabemos que a linguagem Java facilita a codifica\u00e7\u00e3o utilizando o paradigma da Orienta\u00e7\u00e3o a Objetos, ent\u00e3o costumamos dizer que Java \u00e9 uma linguagem orientada a objetos.</p> <p>Na sequ\u00eancia iremos abordar os principais paradigmas de programa\u00e7\u00e3o. Importante ressaltar que uma \u00fanica linguagem de programa\u00e7\u00e3o pode expressar v\u00e1rios paradigmas, embora um deles seja, por vezes, mais evidente no c\u00f3digo do que outros.</p>"},{"location":"programacao/paradigmas/#imperativo","title":"Imperativo","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#declarativo","title":"Declarativo","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#estruturado","title":"Estruturado","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#procedural","title":"Procedural","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#funcional","title":"Funcional","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#orientado-a-objetos","title":"Orientado a Objetos","text":"<p>Neste paradigma, a programa\u00e7\u00e3o \u00e9 realizada por meio da defini\u00e7\u00e3o de objetos que trocam mensagens entre si. Estes objetos t\u00eam estado e comportamento encapsulados, ocultando do mundo exterior seus detalhes internos de opera\u00e7\u00e3o. Para criar objetos, podemos fazer uso de <code>classes</code> ou <code>prot\u00f3tipos</code>, a depender do que a linguagem de programa\u00e7\u00e3o proporciona.</p> <p>O comportamento do software \u00e9 gerado pela intera\u00e7\u00e3o entre os objetos que o comp\u00f5em, atrav\u00e9s da troca de mensagens em que um objeto emissor dispara no receptor a execu\u00e7\u00e3o de uma opera\u00e7\u00e3o espec\u00edfica, a qual chamamos de <code>m\u00e9todo</code>. </p> <p>Estes objetos t\u00eam <code>atributos</code> e <code>comportamentos</code> definidos a partir de suas <code>classes</code> ou <code>prot\u00f3tipos</code>. Entendemos por <code>atributos</code> as propriedades do objeto sobre as quais armazenamos dados. J\u00e1 os <code>comportamentos</code> referem-se \u00e0s a\u00e7\u00f5es que o objeto realizada. Todas as altera\u00e7\u00f5es de <code>estado</code> (fotografia dos valores de atributo em um dado momento) s\u00e3o feitas exclusivamente pelos m\u00e9todos, a partir da recep\u00e7\u00e3o de mensagens.</p> <p>Vamos imaginar, por exemplo, a representa\u00e7\u00e3o de um simples ret\u00e2ngulo atrav\u00e9s do paradigma da orienta\u00e7\u00e3o a objetos. Iremos considerar utilizar orienta\u00e7\u00e3o a objetos baseada em <code>classes</code> neste momento. Observe o diagrama:</p> classDiagram      class Retangulo{         -float altura         -float largura         +obterArea() float          +definirDimensao(float altura, float largura) void     }  <p>Chamamos nossa classe de Retangulo, visto que ela ir\u00e1 representar qualquer ret\u00e2ngulo em nossa codifica\u00e7\u00e3o. Os atributos estabelecidos foram <code>altura</code> e <code>largura</code>, ou seja, s\u00e3o as propriedades que desejamos armazenar valor. Considerando uma linguagem de programa\u00e7\u00e3o fortemente tipada, estabelecemos que ambos os atributos s\u00e3o do tipo <code>float</code> (real de precis\u00e3o simples). J\u00e1 os comportamentos s\u00e3o dois, representados pelos m\u00e9todos <code>obterArea</code> e <code>definirDimensao</code>. Percebeu os s\u00edmbolos de \\(+\\) e \\(-\\) em frente aos atributos e m\u00e9todos? Bem, eles estabelecem a visibilidade e, de momento, basta saber que \\(+\\) indica <code>acesso p\u00fablico</code> e \\(-\\), <code>acesso privado</code>.</p> C++JavaPython <pre><code>class Retangulo\n{\n    private:\n        float largura, altura;\n\n    public:\n        float obterArea()\n        {\n            return this-&gt;altura * this-&gt;altura;\n        }\n        void definirDimensao(float altura, float largura)\n        {\n            this-&gt;altura = altura;\n            this-&gt;largura = largura;\n        }\n};\n</code></pre> <pre><code>class Retangulo {\n    private float largura, altura;\n\n    public float obterArea() {\n        return this.altura * this.altura;\n    }\n\n    public void definirDimensao(float altura, float largura) {\n        this.altura = altura;\n        this.largura = largura;\n    }\n};\n</code></pre> <pre><code>class Retangulo:\n    def __init__(self):\n        self.__largura=0\n        self.__altura=0\n\n    def obterArea(self):\n        return self.__altura * self.__altura\n\n    def definirDimensao(self, altura, largura):\n        self.__altura = altura\n        self.__largura = largura\n</code></pre> <p>Perceba que as implementa\u00e7\u00f5es da classe Retangulo, embora feitas em tr\u00eas linguagens de programa\u00e7\u00e3o diferentes, apresentam semelhan\u00e7a na forma de codificar. Atributos s\u00e3o definidos tal qual o s\u00e3o vari\u00e1veis comuns e m\u00e9todos como sendo fun\u00e7\u00f5es. A diferen\u00e7a \u00e9 que as defini\u00e7\u00f5es ficam restritas ao <code>escopo da classe</code> e funcionam como um molde para a cria\u00e7\u00e3o dos objetos.</p> <p>A defini\u00e7\u00e3o da classe implica na disponibilidade de um novo <code>tipo abstrato de dados</code> (TAD) no c\u00f3digo. Com este novo tipo podemos criar vari\u00e1veis e nelas, instanciar objetos. Veremos isso com mais detalhes quando tratarmos dos aspectos espec\u00edficos de implementa\u00e7\u00e3o. Esses objetos criados trocam mensagens entre si durante a execu\u00e7\u00e3o do software, produzindo o resultado almejado pelo desenvolvedor.</p> <p>Saiba mais sobre este paradigma na se\u00e7\u00e3o de Programa\u00e7\u00e3o Orientada a Objetos.</p>"},{"location":"programacao/paradigmas/#orientado-a-eventos","title":"Orientado a Eventos","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#logico","title":"L\u00f3gico","text":"<p>...continua</p>"},{"location":"programacao/paradigmas/#orientado-a-aspectos","title":"Orientado a Aspectos","text":"<p>...continua</p>"},{"location":"programacao/android/activities/","title":"Desenvolvimento Android - Activities","text":"<p>Uma Activity \u00e9 um componente fundamental do desenvolvimento de aplicativos Android, representando uma \u00fanica tela com uma interface de usu\u00e1rio. Elas s\u00e3o os blocos de constru\u00e7\u00e3o principais com os quais os usu\u00e1rios interagem em um aplicativo Android. O ciclo de vida de uma Activity descreve como ela passa por diferentes estados, desde sua cria\u00e7\u00e3o at\u00e9 sua destrui\u00e7\u00e3o.</p>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/activities/#ciclo-de-vida-de-uma-activity","title":"Ciclo de Vida de uma Activity","text":"<p>O ciclo de vida de uma Activity \u00e9 gerenciado pelo sistema operacional Android e \u00e9 composto por uma s\u00e9rie de estados, que s\u00e3o eventos que ocorrem durante a execu\u00e7\u00e3o da Activity. Aqui est\u00e3o os principais estados do ciclo de vida de uma Activity:</p> <ol> <li>Created (Criado): A Activity \u00e9 criada, mas ainda n\u00e3o \u00e9 vis\u00edvel ao usu\u00e1rio.</li> <li>Started (Iniciado): A Activity se torna vis\u00edvel ao usu\u00e1rio, mas ainda n\u00e3o est\u00e1 interagindo ativamente com ele.</li> <li>Resumed (Resumido): A Activity est\u00e1 em primeiro plano e est\u00e1 interagindo ativamente com o usu\u00e1rio.</li> <li>Paused (Pausado): A Activity perde o foco, mas ainda \u00e9 vis\u00edvel ao usu\u00e1rio. Nesse estado, ela ainda est\u00e1 vis\u00edvel, mas n\u00e3o est\u00e1 interagindo ativamente com o usu\u00e1rio.</li> <li>Stopped (Parado): A Activity n\u00e3o est\u00e1 mais vis\u00edvel ao usu\u00e1rio e pode ser destru\u00edda pelo sistema se a mem\u00f3ria estiver baixa.</li> <li>Destroyed (Destru\u00eddo): A Activity \u00e9 destru\u00edda e removida da mem\u00f3ria.</li> </ol> <p></p>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/activities/#principais-metodos-do-ciclo-de-vida","title":"Principais M\u00e9todos do Ciclo de Vida","text":"<p>Cada estado do ciclo de vida \u00e9 associado a m\u00e9todos espec\u00edficos que s\u00e3o chamados automaticamente pelo sistema Android. Aqui est\u00e3o os principais m\u00e9todos do ciclo de vida de uma Activity:</p> <ul> <li><code>onCreate()</code>: Chamado quando a Activity est\u00e1 sendo criada.</li> <li><code>onStart()</code>: Chamado quando a Activity est\u00e1 prestes a se tornar vis\u00edvel.</li> <li><code>onResume()</code>: Chamado quando a Activity est\u00e1 em primeiro plano e interagindo com o usu\u00e1rio.</li> <li><code>onPause()</code>: Chamado quando a Activity est\u00e1 prestes a perder o foco, geralmente quando outra Activity \u00e9 iniciada.</li> <li><code>onStop()</code>: Chamado quando a Activity n\u00e3o \u00e9 mais vis\u00edvel ao usu\u00e1rio.</li> <li><code>onDestroy()</code>: Chamado antes da Activity ser destru\u00edda.</li> </ul> <pre><code>import android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\n\nclass MinhaActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_minha)\n\n        // Seu c\u00f3digo de inicializa\u00e7\u00e3o aqui\n    }\n\n    override fun onStart() {\n        super.onStart()\n        // A Activity est\u00e1 prestes a se tornar vis\u00edvel\n    }\n\n    override fun onResume() {\n        super.onResume()\n        //Est\u00e1 plano e interagindo com o usu\u00e1rio\n    }\n\n    override fun onPause() {\n        super.onPause()\n        // Est\u00e1 prestes a perder o foco\n    }\n\n    override fun onStop() {\n        super.onStop()\n        // N\u00e3o \u00e9 mais vis\u00edvel ao usu\u00e1rio\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        // Est\u00e1 prestes a ser destru\u00edda\n    }\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/activities/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Documenta\u00e7\u00e3o oficial do Android: Activities</li> <li>Documenta\u00e7\u00e3o oficial do Android: Ciclo de Vida de uma Activity</li> </ul>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/","title":"Desenvolvimento Android - Intents","text":"<p>Intents s\u00e3o uma parte essencial do desenvolvimento de aplicativos Android, assim como as activites.Permitem que os desenvolvedores criem intera\u00e7\u00f5es entre diferentes componentes do sistema, como Activities, Services, Broadcast Receivers e Content Providers. Elas s\u00e3o uma forma flex\u00edvel e poderosa de realizar opera\u00e7\u00f5es em um aplicativo Android, incluindo navega\u00e7\u00e3o entre telas, compartilhamento de dados, execu\u00e7\u00e3o de a\u00e7\u00f5es espec\u00edficas e muito mais.</p>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#funcionalidades-principais","title":"Funcionalidades Principais","text":"<p>As Intents no Android oferecem v\u00e1rias funcionalidades principais:</p> <ol> <li> <p>Iniciar Componentes: Uma das principais funcionalidades das Intents \u00e9 iniciar componentes do Android, como Activities, Services, Broadcast Receivers e Content Providers. </p> </li> <li> <p>Comunicar Dados: As Intents podem ser usadas para transmitir dados entre componentes do Android. Os desenvolvedores podem enviar dados, como strings, n\u00fameros, objetos Parcelable ou Serializable, e at\u00e9 mesmo arquivos, entre diferentes partes do aplicativo.</p> </li> <li> <p>Realizar A\u00e7\u00f5es Expl\u00edcitas e Impl\u00edcitas: As Intents podem ser expl\u00edcitas ou impl\u00edcitas. Uma Intent expl\u00edcita especifica um componente de destino espec\u00edfico dentro do aplicativo usando o nome da classe. Por outro lado, uma Intent impl\u00edcita especifica uma a\u00e7\u00e3o geral e permite que o sistema Android escolha o componente apropriado para manipular a a\u00e7\u00e3o.</p> </li> <li> <p>Responder a Inten\u00e7\u00f5es Externas: Os aplicativos Android podem se registrar para responder a Inten\u00e7\u00f5es externas, como abrir um tipo espec\u00edfico de arquivo ou lidar com solicita\u00e7\u00f5es de compartilhamento de conte\u00fado de outros aplicativos. Isso permite uma integra\u00e7\u00e3o eficaz entre diferentes aplicativos no dispositivo.</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#componentes-de-uma-intent","title":"Componentes de uma Intent","text":"<p>Uma Intent no Android \u00e9 composta por v\u00e1rias partes:</p> <ul> <li>A\u00e7\u00e3o (Action): Define a a\u00e7\u00e3o a ser executada, como \"ACTION_VIEW\" para visualizar dados, \"ACTION_SEND\" para enviar dados ou \"ACTION_DIAL\" para fazer uma chamada telef\u00f4nica.</li> <li>Categoria (Category): Define a categoria da Intent, como \"CATEGORY_LAUNCHER\" para uma Activity de lan\u00e7amento ou \"CATEGORY_DEFAULT\" para uma a\u00e7\u00e3o padr\u00e3o.</li> <li>Componente (Component): Especifica o componente de destino para a Intent, como uma Activity, Service ou Broadcast Receiver.</li> <li>Dados (Data): Representa os dados associados \u00e0 Intent, como um URI para visualizar uma p\u00e1gina da web ou um arquivo para enviar.</li> </ul>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#exemplos-de-uso","title":"Exemplos de Uso","text":"<p>As Intents s\u00e3o amplamente utilizadas em aplicativos Android para uma variedade de prop\u00f3sitos. Aqui est\u00e3o alguns exemplos comuns de como as Intents podem ser usadas:</p> <ul> <li>Navega\u00e7\u00e3o entre telas: Abrir uma nova Activity para apresentar uma nova tela ao usu\u00e1rio.</li> <li>Compartilhamento de conte\u00fado: Enviar texto, imagens ou arquivos para outros aplicativos.</li> <li>Iniciar servi\u00e7os em segundo plano: Iniciar um Service para executar opera\u00e7\u00f5es em segundo plano, como baixar arquivos ou processar dados.</li> <li>Receber transmiss\u00f5es: Registrar Broadcast Receivers para responder a eventos do sistema ou de outros aplicativos.</li> </ul> <pre><code>package com.example.projetoupf\n\nimport android.app.Activity\nimport android.content.Intent\nimport android.graphics.Bitmap\nimport android.net.Uri\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.provider.AlarmClock\nimport android.provider.MediaStore\nimport android.widget.ImageView\nimport android.widget.RadioGroup\nimport androidx.appcompat.app.AlertDialog\n\nclass CallActivities : AppCompatActivity() {\n    private val REQUEST_IMAGE_CAPTURE = 1\n    private lateinit var rbgChoices: RadioGroup\n    private lateinit var imgViewer: ImageView\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_call_activities)\n        rbgChoices = findViewById(R.id.rg_choices)\n        imgViewer = findViewById(R.id.img_viewer)\n        rbgChoices.setOnCheckedChangeListener { _: RadioGroup, i: Int -&gt;\n            when (i) {\n                R.id.rb_create_alarm -&gt; startClock()\n                R.id.rb_abrir_navegador -&gt; startNavigator()\n                R.id.rb_enviar_email -&gt; startEmail()\n                R.id.rb_dial -&gt; startDial()\n                R.id.rb_share_text -&gt; shareText()\n                R.id.rb_camera -&gt; startCamera()\n            }\n\n        }\n\n\n    }\n\n    private fun startCamera() {\n\n\n        val takePictureIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\n        if (takePictureIntent.resolveActivity(packageManager) != null) {\n            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE)\n        }\n    }\n\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (requestCode == REQUEST_IMAGE_CAPTURE &amp;&amp; resultCode == Activity.RESULT_OK) {\n\n            val imagemCapturada = data?.extras?.get(\"data\") as? Bitmap\n            imgViewer.setImageBitmap(imagemCapturada)\n\n        }\n\n    }\n\n\n    private fun shareText() {\n        val intent = Intent(Intent.ACTION_SEND)\n        intent.type = \"text/plain\"\n        intent.putExtra(Intent.EXTRA_TEXT, \"Texto para compartilhar\")\n        startOrNotifyIntent(Intent.createChooser(intent, \"Compartilhar via...\"))\n\n    }\n\n    private fun startEmail() {\n        val intent = Intent(Intent.ACTION_SEND)\n        intent.type = \"text/plain\"\n        intent.putExtra(Intent.EXTRA_EMAIL, arrayOf(\"email@example.com\"))\n        intent.putExtra(Intent.EXTRA_SUBJECT, \"Assunto do Email\")\n        intent.putExtra(Intent.EXTRA_TEXT, \"Corpo do Email\")\n        startActivity(Intent.createChooser(intent, \"Enviar email...\"))\n        startOrNotifyIntent(intent)\n\n    }\n\n    private fun startDial() {\n        val intent = Intent(Intent.ACTION_DIAL).apply {\n            data = Uri.parse(\"tel:123456789\")\n        }\n        startOrNotifyIntent(intent)\n\n    }\n\n    private fun startNavigator() {\n        val intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"https://www.google.com\"))\n        startOrNotifyIntent(intent)\n    }\n\n    private fun startOrNotifyIntent(intent: Intent) {\n        if (intent.resolveActivity(packageManager) != null) {\n            startActivity(intent)\n        } else {\n            val alert = AlertDialog.Builder(this)\n            alert.setTitle(\"Aten\u00e7\u00e3o\")\n            alert.setMessage(\"Nenhum aplicativo pode responder sua requisi\u00e7\u00e3o\")\n\n        }\n    }\n\n    private fun startClock() {\n        val intent = Intent(AlarmClock.ACTION_SET_ALARM).apply {\n            putExtra(AlarmClock.EXTRA_MESSAGE, \"Hora de Acordar\")\n            putExtra(AlarmClock.EXTRA_HOUR, 8)\n            putExtra(AlarmClock.EXTRA_MINUTES, 30)\n        }\n        startOrNotifyIntent(intent)\n\n\n    }\n\n\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#enviar-dados-de-uma-activity-para-outra-via-intent","title":"Enviar dados de uma Activity para outra via Intent","text":"<p>Para enviar dados a outra Activity \u00e9 necess\u00e1rio criar a intent e adicionar os dados para serem enviados atrav\u00e9s do m\u00e9todo  <code>putExtra()</code>. \u00c9 poss\u00edvel enviar tipos primitivos e objetos, desde que sejam serializ\u00e1veis.</p> <p>Ap\u00f3s, basta usar o m\u00e9todo <code>startActivity()</code> para iniciar a Activity destino, passando o intent que cont\u00e9m os dados como par\u00e2metro.</p> <pre><code>val intent = Intent(this, OutraActivity::class.java)\nintent.putExtra(\"nome\", \"John\")\nintent.putExtra(\"idade\", 30)\nstartActivity(intent)\n</code></pre> <p>Na activity destino, voc\u00ea precisa obter o Intent que iniciou a Activity. Isso geralmente \u00e9 feito no m\u00e9todo <code>onCreate()</code> usando o atributo <code>intent</code>.</p> <p>A partir do objeto intent, utilizamos os m\u00e9todos <code>getStringExtra()</code>, <code>getIntExtra()</code>, etc., para extrair os dados do Intent, com base nas chaves que fornecemos no momento do envio.</p> <pre><code>val nome = intent.getStringExtra(\"nome\")\nval idade = intent.getIntExtra(\"idade\", 0)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#recuperando-valores-retornados-de-uma-activity","title":"Recuperando valores retornados de uma activity","text":"<p>O m\u00e9todo <code>onActivityResult()</code> \u00e9 utilizado na captura de retornos de outras Activities em aplicativos Android. Vamos ao passo-a-passo:</p>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#passo-1-iniciar-uma-activity-com-startactivityforresult","title":"Passo 1: Iniciar uma Activity com <code>startActivityForResult()</code>","text":"<p>Para capturar um retorno de outra Activity, devemos iniciar a Activity usando o m\u00e9todo <code>startActivityForResult()</code> em vez do <code>startActivity()</code>. Isso permite que a Activity de destino envie dados de volta para a Activity de origem.</p> <pre><code>val intent = Intent(this, OutraActity::class.java)\nstartActivityForResult(intent, REQUEST_CODE)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#passo-2-implementar-o-metodo-onactivityresult","title":"Passo 2: Implementar o M\u00e9todo <code>onActivityResult()</code>","text":"<p>Na Activity de origem, precisamos implementar o m\u00e9todo <code>onActivityResult()</code>. Este m\u00e9todo ser\u00e1 chamado automaticamente quando a Activity de destino for encerrada e retornar um resultado.</p> <pre><code>override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n    super.onActivityResult(requestCode, resultCode, data)\n\n    if (requestCode == REQUEST_CODE) {\n        if (resultCode == Activity.RESULT_OK) {\n            //obtendo o retorno\n            val retorno = data?.getStringExtra(\"chave_retorno\")\n\n        } else if (resultCode == Activity.RESULT_CANCELED) {\n            //tratamento para quando a activity foi cancelada\n        }\n    }\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#passo-3-enviar-dados-de-retorno-da-activity-destino","title":"Passo 3: Enviar Dados de Retorno da Activity Destino","text":"<p>Na Activity de destino, quando estiver pronta para enviar os dados de retorno, devemos usar o m\u00e9todo <code>setResult()</code> antes de encerrar a Activity.</p> <p>Exemplo em Kotlin para enviar dados de retorno da Activity de destino: <pre><code>val intent = Intent()\nintent.putExtra(\"chave_retorno\", \"dados_de_retorno\")\nsetResult(Activity.RESULT_OK, intent)\nfinish()\n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#passo-4-lidar-com-resultados-e-excecoes","title":"Passo 4: Lidar com Resultados e Exce\u00e7\u00f5es","text":"<p>\u00c9 importante lidar com diferentes resultados e exce\u00e7\u00f5es ao receber dados de retorno de uma Activity. Logo, verificar se o resultado \u00e9 <code>RESULT_OK</code> ou <code>Activity.RESULT_CANCELED</code>, por exemplo, \u00e9 algo necess\u00e1rio.</p>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/android/intents/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Documenta\u00e7\u00e3o oficial do Android: Intents and Intent Filters</li> <li>Android Developers Blog: Understanding Android Intents</li> </ul>","tags":["Programa\u00e7\u00e3o","Android","Kotlin"]},{"location":"programacao/cpp/ambiente/","title":"Ambiente de Desenvolvimento","text":"<p>Para codificar em C++ \u00e9 preciso minimamente do compilador e de um editor de texto. A instala\u00e7\u00e3o do compilador apresenta diferen\u00e7as de acordo com a plataforma. J\u00e1 o editor de texto pode ser qualquer um dispon\u00edvel no mercado.</p> <p>Quando falamos de codifica\u00e7\u00e3o profissional de software, os editores de texto s\u00e3o substitu\u00eddos por IDEs (Integrated Development Environment) com a finalidade de aumentar a produtividade e a qualidade do c\u00f3digo-fonte. As IDEs agregam diversos plugins que auxiliam o desenvolvedor na tarefa de codifica\u00e7\u00e3o.</p> <p>Na sequ\u00eancia apresento a configura\u00e7\u00e3o do ambiente m\u00ednimo para desenvolvimento em C++ nas plataformas Linux (Debian based) e Windows.</p>","tags":["Programa\u00e7\u00e3o","POO","L\u00f3gica"]},{"location":"programacao/cpp/ambiente/#plataforma-linux","title":"Plataforma Linux","text":"<p>Normalmente as distribui\u00e7\u00f5es Linux j\u00e1 possuem o compilador g++ instalado. Para verificar se o compilador est\u00e1 corretamente instalado, podemos abrir o terminal e executar o comando abaixo, que solicita a vers\u00e3o do mesmo.</p> <pre><code>g++ --version\n</code></pre> <p>Uma vez instalado, esperamos que a sa\u00edda seja semelhante ao trecho abaixo:</p> <p><pre><code>g++ (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\nCopyright (C) 2017 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\nCaso o compilador n\u00e3o esteja instalado no sistema, ser\u00e1 preciso utilizar a ferramenta de gest\u00e3o de pacotes da distribui\u00e7\u00e3o para instala\u00e7\u00e3o. Em distribui\u00e7\u00f5es baseadas no Debian (Ubuntu, por exemplo), o comando apt-get install realiza a instala\u00e7\u00e3o do compilador via terminal. A checagem da instala\u00e7\u00e3o pode ser realizada utilizando o comando g++ --version, conforme demonstrando anteriormente.\n</code></pre> Caso o compilador n\u00e3o esteja dispon\u00edvel no sistema, ser\u00e1 preciso utilizar a ferramenta de gest\u00e3o de pacotes da distribui\u00e7\u00e3o para instala\u00e7\u00e3o. Em distribui\u00e7\u00f5es baseadas no Debian (Ubuntu, por exemplo), o comando <code>sudo apt-get install g++</code> realiza a instala\u00e7\u00e3o do compilador via terminal. A checagem da instala\u00e7\u00e3o pode ser realizada utilizando o comando <code>g++ --version</code>, conforme demonstrando anteriormente.</p>","tags":["Programa\u00e7\u00e3o","POO","L\u00f3gica"]},{"location":"programacao/cpp/ambiente/#windows-plataforma-windows","title":"Windows Plataforma Windows","text":"<p>Assim como na plataforma Linux, no Windows temos diferentes op\u00e7\u00f5es de editores e IDEs para desenvolvimento em C++. Uma destas solu\u00e7\u00f5es \u00e9 o DevC++, uma ferramenta gratuita e com bons recursos para quem est\u00e1 iniciando na linguagem. Outras op\u00e7\u00f5es tamb\u00e9m podem ser consideradas, como Code::Blocks,  Netbeans, Eclipse, Clion e Visual Studio Code. Basicamente, a diferen\u00e7a entre uma IDE e outra refere-se ao conjunto de ferramentas e recursos oferecidos pelas mesmas.</p> <p>Interessante observar que boa parte destas ferramentas vem com o compilador integrado, o que facilita o processo de instala\u00e7\u00e3o. Dos listados abaixo, a exce\u00e7\u00e3o fica para o Visual Studio Code.</p> <ol> <li>DevC++</li> <li>Visual Studio</li> <li>Visual Studio Code</li> <li>NetBeans</li> <li>Eclipse</li> <li>CLion</li> <li>CodeBlocks</li> </ol> <p>Dentre as ferramentas que citei, tenho prefer\u00eancia pelo Visual Studio Code.  O processo de instala\u00e7\u00e3o do editor \u00e9 simples, compreendendo o download do arquivo de pacote (.deb ou .rpm) ou do instalador (conforme sistema operacional escolhido).</p> <p>O VS Code, como tamb\u00e9m \u00e9 conhecido, \u00e9 um editor avan\u00e7ado com suporte para in\u00fameras linguagens e tecnologias. Apresenta interface intuitiva, baixo consumo de mem\u00f3ria e terminal integrado. N\u00e3o posso deixar de comentar que a ferramenta \u00e9 gratuita, estando o usu\u00e1rio livre de qualquer cobran\u00e7a/restri\u00e7\u00e3o em rela\u00e7\u00e3o ao seu uso.</p> <p>A tela inicial do software cont\u00e9m \u00e0 esquerda o Explorer, no qual apresentam-se os arquivos e diret\u00f3rios do projeto, ferramenta de Busca, integra\u00e7\u00e3o com ferramenta de Versionamento de C\u00f3digo, Debug e Extens\u00f5es . A parte central da tela \u00e9 ocupada pelos diferentes arquivos em edi\u00e7\u00e3o e na parte inferior constam o Terminal Integrado, sa\u00edda de logs, erros, entre outros.</p> <p></p> <p>Programas escritos em C++ podem compreender um ou mais arquivos de c\u00f3digo-fonte. Ao conjunto de arquivos que formam o programa chamamos de projeto. No VS Code podemos mapear o projeto abrindo a pasta raiz que cont\u00e9m os arquivos. Ainda, para deixar o ambiente completo, podemos instalar uma extens\u00e3o espec\u00edfica para a linguagem C++, que ir\u00e1 nos auxiliar nas tarefas relacionadas \u00e0 codifica\u00e7\u00e3o. Existem in\u00fameras extens\u00f5es, mas recomendo a C/C++ for Visual Studio Code. \u00c9 poss\u00edvel instalar a extens\u00e3o diretamente pelo VS Code procurando pela mesma na tela Extensions (observe a imagem a seguir).</p> <p></p>","tags":["Programa\u00e7\u00e3o","POO","L\u00f3gica"]},{"location":"programacao/cpp/ambiente/#execucao","title":"Execu\u00e7\u00e3o","text":"<p>Com a extens\u00e3o C/C++ for Visual Studio Code instalada, o VS Code j\u00e1 tem condi\u00e7\u00f5es de compilar o c\u00f3digo-fonte e executar o programa gerado de forma integrada. O processo \u00e9 muito simples! Utilize o bot\u00e3o direito do mouse na tela de edi\u00e7\u00e3o do c\u00f3digo-fonte e escolha a op\u00e7\u00e3o Run Code.</p> <p></p> <p>Aten\u00e7\u00e3o</p> <p>Como o VS Code n\u00e3o possui compilador C++ integrado, \u00e9 preciso instalar separadamente. Neste endere\u00e7o voc\u00ea ir\u00e1 encontrar informa\u00e7\u00f5es de como realizar o procedimento.</p>","tags":["Programa\u00e7\u00e3o","POO","L\u00f3gica"]},{"location":"programacao/cpp/arranjos/","title":"Arranjos","text":"<p>Os tipos primitivos de dados, como <code>int</code>, <code>double</code> e <code>char</code>, permitem armazenar um valor singular, \u00fanico, na respectiva posi\u00e7\u00e3o de mem\u00f3ria. H\u00e1, contudo, situa\u00e7\u00f5es em que se faz necess\u00e1rio armazenar a partir de uma \u00fanica vari\u00e1vel um conjunto de valores. Tais estruturas recebem o nome de <code>arrays</code> (arranjos).</p> <p>Os <code>arrays</code>, junto a <code>enumerations</code>, <code>strings</code>, <code>ponteiros</code>, <code>ponteiros para membros</code>, <code>referencias</code> e <code>classes</code> s\u00e3o conhecidos como <code>tipos compostos</code> no C++. Os tipos compostos permitem combinar tipos e outros objetos para definir estruturas de armazenamento e manipula\u00e7\u00e3o de dados de alto n\u00edvel. </p> <p>Vamos ao exemplo: imagine que uma escola de programa\u00e7\u00e3o ofere\u00e7a um curso de Introdu\u00e7\u00e3o \u00e0 Linguagem C++, dividido em 10 m\u00f3dulos. Ao final de cada m\u00f3dulo, o estudante dever\u00e1 realizar uma avalia\u00e7\u00e3o. A nota final do curso ser\u00e1 obtida a partir da m\u00e9dia aritm\u00e9tica dentre todas as 10 avalia\u00e7\u00f5es realizadas pelo estudante. Em uma solu\u00e7\u00e3o utilizando apenas tipos primitivos, poder\u00edamos pensar em algo assim:</p> C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    float nt1, nt2, nt3, nt4, nt5, nt6, nt7, nt8, nt9, nt10;\n\n    cin &gt;&gt; nt1 &gt;&gt; nt2 &gt;&gt; nt3 &gt;&gt; nt4 &gt;&gt; nt5 &gt;&gt; nt6 &gt;&gt; nt7 &gt;&gt; nt8 &gt;&gt; nt9 &gt;&gt; nt10;\n\n    float nota_final = (nt1 + nt2 + nt3 + nt4 + nt5 + nt6 + nt7 + nt8 + nt9 + nt10) / 10;\n\n    cout &lt;&lt; \"NF: \" &lt;&lt; nota_final &lt;&lt; endl;\n}\n</code></pre> <p>Observe que criamos 10 vari\u00e1veis do tipo <code>float</code> para armazenar as notas. No c\u00f3digo, a grande quantidade de vari\u00e1veis prejudica a legibilidade e torna a resolu\u00e7\u00e3o do problema mais dif\u00edcil. Mas se pud\u00e9ssemos utilizar apenas uma vari\u00e1vel e, nesta, armazenar 10 notas? A\u00ed est\u00e1 o benef\u00edcio de se utilizar os <code>arrays</code>. Observe a solu\u00e7\u00e3o alternativa aplicando este conceito:</p> C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\n\n\nint main(){\n    float notas[10], nota_final=0;\n    for(int i=0;i&lt;10;i++){\n        cin &gt;&gt; notas[i];\n        nota_final+=notas[i];\n    }\n\n    nota_final/=10;\n    cout &lt;&lt; \"NF: \"&lt;&lt;nota_final &lt;&lt;endl;\n\n}\n</code></pre> <p>\u00c9 n\u00edtida  diferen\u00e7a: nosso c\u00f3digo ficou mais enxuto e leg\u00edvel. Al\u00e9m disso, adequ\u00e1-lo para receber 100 notas distintas seria algo muito simples, bem diferente do primeiro exemplo.</p> <p>Agora \u00e9 momento de esmiu\u00e7ar a declara\u00e7\u00e3o do <code>array</code> e as opera\u00e7\u00f5es de leitura e escrita realizadas. No C++, declaramos o arranjo adicionando a quantidade de posi\u00e7\u00f5es em cada dimens\u00e3o. Logo, no trecho  <code>float notas[10]</code>, a vari\u00e1vel <code>notas</code> ter\u00e1 uma \u00fanica dimens\u00e3o com <code>10</code> posi\u00e7\u00f5es. Entendeu a ideia: cada dimens\u00e3o \u00e9 especificada entre <code>[]</code> e podemos ter quantas dimens\u00f5es quisermos (at\u00e9 o limite da mem\u00f3ria dispon\u00edvel!).</p> <p>Ao declarar um <code>array</code> de <code>10</code> posi\u00e7\u00f5es do tipo <code>float</code> estamos solicitando a aloca\u00e7\u00e3o da quantidade de 40 bytes de mem\u00f3ria (cada float requer 4 bytes). Em qualquer opera\u00e7\u00e3o que demande a leitura ou escrita de algum valor na estrutura ser\u00e1 preciso especificar o <code>\u00edndice</code>, ou seja, a posi\u00e7\u00e3o  do <code>array</code> que dever\u00e1 ser considerada. </p> <p>Se temos um <code>array</code> chamado <code>val</code> de <code>10</code> posi\u00e7\u00f5es e gostar\u00edamos de escrever o valor <code>15</code> na 5\u00ba posi\u00e7\u00e3o, utilizar\u00edamos a instru\u00e7\u00e3o <code>val[4] = 15;</code>. Percebeu que a 5\u00ba posi\u00e7\u00e3o est\u00e1 no \u00edndice 4? Isso ocorre porque, no C++ e muitas outras linguagens, os \u00edndices come\u00e7am em <code>0</code>. Para ler o valor de uma determinada posi\u00e7\u00e3o, utilizamos a mesma sintaxe, especificando o respectivo \u00edndice.</p> <p>Quando pensamos em termos matem\u00e1ticos, costumamos chamar <code>arrays</code> de \u00fanica dimens\u00e3o de <code>vetores</code> e de duas dimens\u00f5es, <code>matrizes</code>. Aos demais, denominamos <code>arrays multidimensionais</code>. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/arranjos/#inicializacao-de-arrays","title":"Inicializa\u00e7\u00e3o de Arrays","text":"<p>Assim como vari\u00e1veis escalares, <code>arrays</code> tamb\u00e9m podem ser inicializados. Observe o programa de exemplo a seguir:</p> C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    float   notas[2][4] = {{0}, {0}}, \n            pesos[4] = {3.0, 2.0, 4.0, 1.0}, \n            media = 0;\n\n    for (int a = 0; a &lt; 2; a++)\n    {\n        cout &lt;&lt; \"ALUNO \" &lt;&lt; a + 1 &lt;&lt; endl;\n        media=0;\n        for (int n = 0; n &lt; 4; n++)\n        {\n            cout &lt;&lt; \"...NOTA \" &lt;&lt; n + 1 &lt;&lt; \": \";\n            cin &gt;&gt; notas[a][n];\n            media += notas[a][n]*pesos[n];\n        }\n        cout &lt;&lt;\"MEDIA: \"&lt;&lt; (media/10.0) &lt;&lt;endl;\n    }\n}\n</code></pre> <p>Perceba que a vari\u00e1vel <code>notas</code> \u00e9 uma <code>matriz</code>, uma vez que cont\u00e9m duas dimens\u00f5es. Inicializamos todas as posi\u00e7\u00f5es com zero. Perceba que, para cada dimens\u00e3o, devemos utilizar um par de <code>{}</code>. J\u00e1 o vetor <code>notas</code> foi inicializado com valores correspondentes aos pesos das avalia\u00e7\u00f5es. Observe tamb\u00e9m que a instru\u00e7\u00e3o <code>cin &gt;&gt; notas[a][n];</code> utiliza dois \u00edndices, uma para cada dimens\u00e3o. </p> <p>Podemos ilustrar a estrutura da matriz <code>notas</code> pela tabela abaixo, em termos dos 8 valores de notas. A primeira linha e primeira coluna s\u00e3o apenas cabe\u00e7alhos e servem apenas para facilitar a compreens\u00e3o. Ao ler a posi\u00e7\u00e3o <code>notas[1][3]</code> obter\u00edamos <code>7</code> com base nos dados apresentados.</p> Nota 1Nota 2Nota 3Nota 4Aluno 15696Aluno 2987.97","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/arranjos/#arrays-e-lacos-de-repeticao","title":"Arrays e La\u00e7os de Repeti\u00e7\u00e3o","text":"<p>\u00c9 extramente comum utilizarmos la\u00e7os de repeti\u00e7\u00e3o para percorrer <code>arrays</code>, mesmo em c\u00f3digos triviais. E o motivo \u00e9 \u00f3bvio: \u00e9 a forma mais simples de faz\u00ea-lo. Al\u00e9m de reduzir a quantidade de linhas de c\u00f3digo (instru\u00e7\u00f5es), o uso de la\u00e7os de repeti\u00e7\u00e3o facilita eventuais adapta\u00e7\u00f5es no c\u00f3digo, como mudan\u00e7a do tamanho do <code>array</code>, por exemplo.</p> <p>Mas aten\u00e7\u00e3o: a regra n\u00e3o vale para todos os casos, apenas para \u00e0queles em que o uso de la\u00e7os de repeti\u00e7\u00e3o trouxer algum benef\u00edcio.</p> <p>Interessante observar tamb\u00e9m que a quantidade de la\u00e7os utilizados corresponde ao n\u00famero de dimens\u00f5es na maioria dos casos. E os la\u00e7os s\u00e3o aninhados, ou seja, postos um dentro do outro.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/arranjos/#arrays-de-caracteres","title":"Arrays de Caracteres","text":"<p>O tipo <code>char</code> permite armazenar um caractere espec\u00edfico, como uma letra, s\u00edmbolo ou meta-caractere. Se observamos com aten\u00e7\u00e3o, um texto qualquer corresponde a um vetor de caracteres, onde cada \u00edndice armazena um caractere deste texto. Este forma de manipular texto \u00e9 justamente o que chamamos de <code>cstring</code> no C++, uma alus\u00e3o \u00e0 forma de representa\u00e7\u00e3o de texto t\u00edpica da linguagem C.</p> <p>Embora possamos utilizar <code>cstrings</code> no C++, devemos considerar o uso do tipo abstrato <code>string</code>, que nos oferece maior simplicidade de uso e recursos associados que um simples vetor de caracteres. Observe o exemplo a seguir:</p> C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;limits&gt;\nusing namespace std;\n\nint main()\n{\n    int idade;\n    char nome[200];\n    cout &lt;&lt; \"Nome: \";\n    cin.getline(nome, 200);\n    if (cin.fail()){\n        cin.clear();\n        cin.ignore( numeric_limits&lt;streamsize&gt;::max(), '\\n');\n    }\n    cout &lt;&lt; endl\n         &lt;&lt; \"Idade: \";\n    cin &gt;&gt; idade;\n    cout &lt;&lt; endl\n         &lt;&lt; nome &lt;&lt; \" tem \" &lt;&lt; idade &lt;&lt; \" anos.  \";\n}\n</code></pre> <p>A vari\u00e1vel <code>nome</code> foi declarada como sendo um <code>array</code> de 200 posi\u00e7\u00f5es. Isso significa que podemos armazenar, no m\u00e1ximo, 200 caracteres. O comando <code>cin.getline(nome, 200);</code> ir\u00e1 aguardar o usu\u00e1rio digitar um valor, para ent\u00e3o armazen\u00e1-lo no <code>array</code>, limitando a captura de 200 caracteres para n\u00e3o causar erro de <code>overflow</code>.</p> <p>Observe que logo ap\u00f3s a leitura via <code>cin</code> estamos realizando um teste l\u00f3gico, utilizando <code>cin.fail()</code>. Este teste ir\u00e1 retornar <code>verdadeiro</code> quando ocorrer algum problema de leitura, como exceder o n\u00famero m\u00e1ximo de 200 caracteres estabelecido. Ocorrendo tal situa\u00e7\u00e3o, limpamos o status via <code>cin.clear()</code> e, na sequencia, removemos todos os caracteres que permaneceram no <code>input stream</code> atrav\u00e9s do comando <code>cin.ignore( numeric_limits&lt;streamsize&gt;::max(), '\\n')</code>. Isso deve ser feito para garantir que o pr\u00f3ximo comando <code>cin</code> capture o valor informado, visto que mantido o status de erro, o valor seria desconsiderado.</p> <p>Outro ponto interessante sobre arrays de caracteres \u00e9 que eles devem ser finalizados atrav\u00e9s do meta-caractere <code>\\0</code>. Por exemplo, se quis\u00e9ssemos inicializar um array com o texto <code>Ol\u00e1, mundo!</code>, poder\u00edamos faz\u00ea-lo da seguinte forma:</p> C++ <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    char mensagem[] = {'O','l','a',' ', 'm','u','n','d','o','!','\\0'};\n    cout &lt;&lt; mensagem ;\n}\n</code></pre> <p>O tipo <code>string</code> diferencia-se de um simples array por ser uma <code>classe</code>, ou seja, um tipo abstrato de dados associado ao paradigma da orienta\u00e7\u00e3o a objetos. Contudo, podemos utilizar o tipo sem nos preocuparmos com estes detalhes. Veja como seria o c\u00f3digo para solicitarmos o nome e idade de uma pessoa. Atente-se ao fato de que n\u00e3o estamos informando limite de caracteres, justamente porque o tipo <code>string</code> \u00e9 dinamicamente expans\u00edvel.</p> C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int idade;\n    string nome;\n    cout &lt;&lt; \"Nome: \";\n    getline(cin,nome);    \n    cout &lt;&lt; endl\n         &lt;&lt; \"Idade: \";\n    cin &gt;&gt; idade;\n    cout &lt;&lt; endl\n         &lt;&lt; nome &lt;&lt; \" tem \" &lt;&lt; idade &lt;&lt; \" anos.  \";\n}\n</code></pre> <p>Al\u00e9m de ter tamanho din\u00e2mico, vari\u00e1veis do tipo <code>string</code> (objetos, no termo correto) permitem opera\u00e7\u00f5es interessantes, como compara\u00e7\u00f5es, indexa\u00e7\u00e3o, substring, entre outros. Observe o exemplo a seguir:</p> C++ <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    string mensagem=\"Consideramos estas verdades como evidentes por si mesmas, que todos os homens s\u00e3o criados iguais, dotados pelo Criador de certos direitos inalien\u00e1veis, que entre estes est\u00e3o a vida, a liberdade e a procura da felicidade.\";\n\n    cout &lt;&lt;\"Primeiro caractere: \" &lt;&lt; mensagem[0] &lt;&lt; endl;\n    cout &lt;&lt;\"Total de caracteres: \" &lt;&lt; mensagem.length() &lt;&lt;endl;\n    cout &lt;&lt;\"\u00cdndice em que se encontra 'inalien\u00e1veis': \" &lt;&lt; mensagem.find(\"inalien\u00e1veis\") &lt;&lt;endl;\n    cout &lt;&lt;\"A partir da posi\u00e7\u00e3o 123, 4 caracteres: \" &lt;&lt; mensagem.substr(123,4) &lt;&lt;endl;\n\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/compilacao/","title":"Compilando o Primeiro Programa","text":"<p>Ap\u00f3s escrito o c\u00f3digo-fonte de um programa, precisamos convert\u00ea-lo em c\u00f3digo de m\u00e1quina, para que o processador tenha condi\u00e7\u00f5es de execut\u00e1-lo. Esse processo de \"tradu\u00e7\u00e3o\" pode ser realizado de duas formas diferentes: compila\u00e7\u00e3o e interpreta\u00e7\u00e3o.</p> <p>A compila\u00e7\u00e3o \u00e9 o processo em que submetemos o c\u00f3digo-fonte do programa a um software chamado compilador. O compilador deve estar dispon\u00edvel no sistema e corretamente configurado. No processo, o compilador realiza verifica\u00e7\u00f5es sint\u00e1ticas (uso correto da sintaxe da linguagem) e sem\u00e2nticas (interpreta\u00e7\u00e3o do significado de instru\u00e7\u00f5es para detectar erros). N\u00e3o havendo erros, o c\u00f3digo de alto n\u00edvel \u00e9 traduzido para c\u00f3digo de baixo n\u00edvel (m\u00e1quina) direcionado \u00e0 plataforma (sistema operacional + arquitetura de m\u00e1quina) alvo. \u00c9 criado ent\u00e3o um execut\u00e1vel.</p> <p>A compila\u00e7\u00e3o ocorre apenas uma vez, sendo que o produto final \u00e9 o programa que o usu\u00e1rio ir\u00e1 utilizar. Podemos citar as seguintes vantagens do processo:</p> <ul> <li>N\u00e3o h\u00e1 custo de tradu\u00e7\u00e3o em tempo de execu\u00e7\u00e3o</li> <li>O c\u00f3digo-fonte \u00e9 preservado, n\u00e3o sendo distribu\u00eddo para o cliente</li> <li>Possibilidade de otimiza\u00e7\u00f5es aprimoradas, visto que um maior tempo de compila\u00e7\u00e3o \u00e9 aceit\u00e1vel</li> </ul> <p>Contudo tamb\u00e9m existem desvantagens, como:</p> <ul> <li>Dificuldade no diagn\u00f3stico de erros</li> <li>Testar o software torna-se mais oneroso, porque requer v\u00e1rios ciclos de compila\u00e7\u00e3o</li> <li>Algumas valida\u00e7\u00f5es s\u00e3o dif\u00edceis de executar em tempo de compila\u00e7\u00e3o</li> <li>Construir bons compiladores \u00e9 algo muito complexo</li> </ul> <p>J\u00e1 a interpreta\u00e7\u00e3o \u00e9 o processo em que o c\u00f3d igo-fonte \u00e9 traduzido a cada execu\u00e7\u00e3o (on the fly). O interpretador \u00e9 o software que realiza tal tarefa e ele sempre trabalha com dois elementos: programa e o c\u00f3digo-fonte. O c\u00f3digo \u00e9 gerado sob demanda, seguindo o fluxo de execu\u00e7\u00e3o do algoritmo. Existem interpretadores que otimizam o processo, mantendo trechos de c\u00f3digo frequentemente acessados j\u00e1 compilados.</p> <p>A interpreta\u00e7\u00e3o tem benef\u00edcios interessantes. Podemos citar, por exemplo:</p> <ul> <li>Facilidade em debugar o c\u00f3digo</li> <li>Interpretadores s\u00e3o mais simples de desenvolver, se comparados \u00e0 compiladores</li> <li>Testar o software torna-se mais simples</li> <li>O interpretador pode ser incorporado ao software para fins de implanta\u00e7\u00e3o</li> <li>\u00c9 poss\u00edvel avaliar c\u00f3digo em tempo de execu\u00e7\u00e3o</li> </ul> <p>Como desvantagens do processo de interpreta\u00e7\u00e3o, podemos citar:</p> <ul> <li>Necessidade de tradu\u00e7\u00e3o a cada execu\u00e7\u00e3o, que implica em maior custo computacional</li> <li>Dificuldades em se proteger o c\u00f3digo-fonte</li> <li>Interpretadores eficientes s\u00e3o complexos para desenvolver</li> </ul> <p>Voc\u00ea pode saber mais sobre estes processos de tradu\u00e7\u00e3o no excelente material produzido para a disciplina COMP 524: Programming Language Concepts, por Bj\u00f6rn B. Brandenburg da University of North Carolina</p> <p>Dica</p> <p>Lembre-se que a linguagem C++ \u00e9 compilada!</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/","title":"Desvios Condicionais","text":"<p>Na programa\u00e7\u00e3o, os estruturas de sele\u00e7\u00e3o s\u00e3o um dos componentes b\u00e1sicos na constru\u00e7\u00e3o dos programas. Entendemos por estruturas de sele\u00e7\u00e3o comandos que permitem desviar o fluxo natural de execu\u00e7\u00e3o das instru\u00e7\u00f5es de um programa sob determinadas condi\u00e7\u00f5es. Tais estruturas permitem criar ramifica\u00e7\u00f5es de fluxo e est\u00e3o intimamente relacionadas com o uso da l\u00f3gica booleana.</p> <p>Desta forma, a compreens\u00e3o de desvios condicionais requer bons fundamentos de l\u00f3gica, o que tentaremos oferecer na sequ\u00eancia, antes de propriamente apresentarmos os comandos de sele\u00e7\u00e3o.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#logica-booleana","title":"L\u00f3gica Booleana","text":"<p>Como sabemos, computa\u00e7\u00e3o e matem\u00e1tica s\u00e3o \u00e1reas irm\u00e3s. Uma das mais relevantes contribui\u00e7\u00f5es da matem\u00e1tica incorporadas \u00e0 computa\u00e7\u00e3o foi do matem\u00e1tico ingl\u00eas George Boole (1815-1864), que desenvolveu um sistema alg\u00e9brico bin\u00e1rio essencial ao funcionamento dos computadores. De modo simplificado, as ideias de Boole permitem obter conclus\u00f5es l\u00f3gicas a partir de vari\u00e1veis que representam apenas dois valores (0 e 1) e operadores que retornam apenas dois valores (0 e 1).</p> <p>Dica</p> <p>0 indica FALSO e 1, VERDADEIRO</p> <p>A aplica\u00e7\u00e3o da L\u00f3gica Booleana, como normalmente \u00e9 conhecida, vai desde a constru\u00e7\u00e3o de circuitos de hardware a partir de portas l\u00f3gicas at\u00e9 a programa\u00e7\u00e3o, quando se faz necess\u00e1rio realizar testes l\u00f3gicos no c\u00f3digo. Mas afinal, o que s\u00e3o testes l\u00f3gicos e qual \u00e9 a rela\u00e7\u00e3o destes com o sistema alg\u00e9brico desenvolvido por Boole?</p> <p>N\u00f3s, humanos, expressamos e avaliamos proposi\u00e7\u00f5es l\u00f3gicas a todo o momento. De forma pr\u00e1tica, vamos entender proposi\u00e7\u00e3o l\u00f3gica como sendo uma <code>declara\u00e7\u00e3o que pode ser avaliada como VERDADEIRA ou FALSA, mas nunca ambas</code>. Logo, as duas afirma\u00e7\u00f5es abaixo podem ser consideradas proposi\u00e7\u00f5es l\u00f3gicas:</p> <ul> <li>p: Vai chover amanh\u00e3</li> <li>q: Tenho 10 reais na carteira</li> </ul> <p>Tanto para p quanto para q, somente existem duas possibilidades de conclus\u00e3o: Verdadeiro ou Falso. Sabemos tamb\u00e9m que os operadores l\u00f3gicos somente podem retornar V ou F, o que nos leva a concluir que express\u00f5es l\u00f3gicas que combinam v\u00e1rias proposi\u00e7\u00f5es, ao final, se reduzem a  V ou F. Mas, para elaborar tais express\u00f5es, precisamos conhecer o funcionamento de tr\u00eas operadores l\u00f3gicos b\u00e1sicos: <code>AND</code>, <code>OR</code> e <code>NOT</code>.</p> <p>Aten\u00e7\u00e3o</p> <p>Estamos direcionando o entendimento da l\u00f3gica booleana para a programa\u00e7\u00e3o, omitindo alguns formalismos matem\u00e1ticos propositalmente.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#operador-and-conjuncao","title":"Operador AND (conjun\u00e7\u00e3o)","text":"<p>O operador l\u00f3gico AND (^), tamb\u00e9m conhecido como conjun\u00e7\u00e3o, \u00e9 definido como sendo um <code>operador l\u00f3gico bin\u00e1rio que retorna VERDADEIRO sempre que TODOS os seus operandos forem verdadeiros</code>.</p> <p>Para facilitar a compreens\u00e3o, utilizamos uma tabela de valores l\u00f3gicos, a tabela verdade, para expressar os poss\u00edveis resultados da aplica\u00e7\u00e3o do operador AND sobre duas proposi\u00e7\u00f5es. Vamos supor que p tenha seus valores expressos na coluna e q, nas linhas. Deste modo, os poss\u00edvels resultados de p ^ q s\u00e3o:</p> AND V F F F F V V F <p>Resumo</p> <p>A conclus\u00e3o l\u00f3gica do operador AND somente \u00e9 verdadeira se todas as proposi\u00e7\u00f5es forem verdadeiras.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#operador-or-disjuncao","title":"Operador OR (disjun\u00e7\u00e3o)","text":"<p>O operador l\u00f3gico OR (\u2228), tamb\u00e9m conhecido como disjun\u00e7\u00e3o, \u00e9 definido como sendo um <code>operador l\u00f3gico bin\u00e1rio que retorna FALSO sempre que TODOS os seus operandos forem falsos</code>.</p> <p>Utilizando a tabela verdade para expressar os poss\u00edveis resultados de p v q temos:</p> OR V F F V F V V V <p>Resumo</p> <p>A conclus\u00e3o l\u00f3gica do operador OR somente \u00e9 falsas se todas as proposi\u00e7\u00f5es forem falsas.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#operador-not","title":"Operador NOT (~)","text":"<p>O operador l\u00f3gico NOT (~), tamb\u00e9m conhecido como nega\u00e7\u00e3o, \u00e9 definido como sendo um <code>operador l\u00f3gico un\u00e1rio que retorna a nega\u00e7\u00e3o (inverso l\u00f3gico) de seu operando</code>.</p> <p>Utilizando a tabela verdade para expressar os poss\u00edveis resultados de ~p temos:</p> p ~p F V V F <p>Resumo</p> <p>A conclus\u00e3o l\u00f3gica do operador NOT \u00e9 verdadeiro quando receber falso, e falso quando receber verdadeiro</p> <p>Tudo bem, sabemos o que s\u00e3o proposi\u00e7\u00f5es l\u00f3gicas e conhecemos os tr\u00eas operadores l\u00f3gicos b\u00e1sicos. Mas, de que forma utilizamos tais recursos na programa\u00e7\u00e3o? ...\u00c9 justamente isso que vou apresentar na sequ\u00eancia ;)</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#logica-booleana-aplicada-a-programacao","title":"L\u00f3gica booleana aplicada \u00e0 programa\u00e7\u00e3o","text":"<p>Microprocessadores possuem uma ou mais unidades l\u00f3gico-aritm\u00e9ticas (ULA), componente que, como o pr\u00f3prio nome sugere, tem a capacidade de executar instru\u00e7\u00f5es aritm\u00e9ticas e instru\u00e7\u00f5es l\u00f3gicas. Utilizando linguagens de programa\u00e7\u00e3o de alto n\u00edvel, como C++, temos acesso a estes recursos atrav\u00e9s de operadores, s\u00edmbolos que a linguagem define para tais finalidades.</p> <p>Especificamente sobre as opera\u00e7\u00f5es l\u00f3gicas, precisamos lembrar que o C++ define um tipo de dado espec\u00edfico para representar valores booleanos, o tipo bool. Quanto aos operadores l\u00f3gicos, os s\u00edmbolos utilizados s\u00e3o: <code>&amp;&amp;</code> para AND, <code>||</code> para OR e <code>!</code> para NOT.</p> <p>J\u00e1 os operadores de compara\u00e7\u00e3o principais s\u00e3o os seguintes:</p> Operador Significado Exemplo Descri\u00e7\u00e3o &gt; maior que a &gt; b verdadeiro, se a for maior que b &lt; menor que a &lt; b verdadeiro, se a for menor que b &gt;= maior ou igual a a &gt;= b verdadeiro, se a for maior ou igual a b &lt;= menor ou igual a a &lt;= b verdadeiro, se a for menor ou igual a b == igual a == b verdadeiro, se iguais != diferente a !== b verdadeiro, se diferentes <p>Utilizando os operadores l\u00f3gicos e os operadores de compara\u00e7\u00e3o temos como escrever express\u00f5es l\u00f3gicas em nossos programas. Imaginemos por um instante que estamos trabalhando em c\u00f3digo para sele\u00e7\u00e3o de candidatos. Nossos crit\u00e9rios de sele\u00e7\u00e3o ser\u00e3o idade igual ou superior a 18 anos, altura superior a 160cm e peso superior a 60kg. Em nosso c\u00f3digo, armazenamos a idade do candidato em uma vari\u00e1vel inteira chamava <code>idade_c</code>, altura em uma vari\u00e1vel inteira <code>altura_c</code> e peso, em uma vari\u00e1vel de ponto flutuante <code>peso_c</code>.</p> <p>Ap\u00f3s atribuir os dados \u00e0s respectivas vari\u00e1veis, poder\u00edamos codificar a express\u00e3o abaixo para determinar se o candidato ser\u00e1 selecionado ou n\u00e3o:</p> <pre><code>bool is_selecionado = idade_c &gt;= 18 &amp;&amp; altura_c &gt; 160 &amp;&amp; peso_c &gt; 60.0;\n</code></pre> <p>Observe que utilizamos o operador <code>&amp;&amp;</code>, uma vez que as tr\u00eas condi\u00e7\u00f5es (proposi\u00e7\u00f5es) devem ser atendidas. Portanto, a vari\u00e1vel <code>is_selecionado</code> receber\u00e1 <code>true</code> somente nesta situa\u00e7\u00e3o.</p> <p>Mas o que faremos com a vari\u00e1vel <code>is_selecionado</code>? Sabemos que sendo <code>true</code> precisamos indicar ao usu\u00e1rio de nosso programa que o candidato atende os crit\u00e9rios. Ou seja, precisamos condicionar a execu\u00e7\u00e3o de determinadas instru\u00e7\u00f5es do programa ao resultado de avalia\u00e7\u00e3o da express\u00e3o l\u00f3gica. Como fazer ent\u00e3o?</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#comando-if-else","title":"Comando IF ELSE","text":"<p>Um dos comandos da linguagem C++ (e de boa parte das outras) \u00e9 o <code>if</code>. Utilizamos ele para criar desvios condicionais na execu\u00e7\u00e3o das instru\u00e7\u00f5es, que, pela ordem natural, s\u00e3o executadas em sequ\u00eancia.</p> <p>A estrutura do comando <code>if</code> \u00e9 simples e para demostrar, vamos seguir falando do nosso programa hipot\u00e9tico de sele\u00e7\u00e3o de candidatos. Observe o c\u00f3digo a seguir:</p> <pre><code>bool is_selecionado = idade_c &gt;= 18 &amp;&amp; altura_c &gt; 160 &amp;&amp; peso_c &gt; 60.0;\n\nif (is_selecionado){\n    cout &lt;&lt; \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\"&lt;&lt; endl;\n} else {\n    cout &lt;&lt; \"Candidato desclassificado\"&lt;&lt; endl;\n}\n</code></pre> <p>Perceba que existem tr\u00eas partes do comando <code>if</code> no c\u00f3digo.</p> <ul> <li>express\u00e3o l\u00f3gica: sempre fica entre os par\u00eanteses <code>()</code>. \u00c9 parte obrigat\u00f3ria do comando e requer qualquer express\u00e3o l\u00f3gica v\u00e1lida, que possa ser reduzida a <code>true</code> ou <code>false</code>. Em nosso exemplo, estamos avaliando o valor contido na vari\u00e1vel <code>is_selecionado</code>, que \u00e9 do tipo  <code>bool</code>. </li> <li>bloco de comandos para o resultado true: \u00e9 o primeiro par de chaves <code>{}</code> logo ap\u00f3s a express\u00e3o l\u00f3gica. Pode conter uma ou mais instru\u00e7\u00f5es, que ser\u00e3o executadas somente quando o resultado da express\u00e3o l\u00f3gica for avaliado como <code>true</code>. \u00c9 parte obrigat\u00f3ria do comando.</li> <li>bloco de comandos para o resultado false (else): par de chaves imediatamente ap\u00f3s a palavra <code>else</code>. Pode conter uma ou mais instru\u00e7\u00f5es que ser\u00e3o executadas somente quando o resultado da express\u00e3o l\u00f3gica for avaliado como <code>false</code>. \u00c9 parte opcional do comando.</li> </ul> <p>Ent\u00e3o, conforme explicamos, nosso c\u00f3digo ir\u00e1 executar a instru\u00e7\u00e3o <code>cout &lt;&lt; \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\"&lt;&lt; endl;</code> quando <code>is_selecionado</code> for <code>true</code> e <code>cout &lt;&lt; \"Candidato desclassificado\"&lt;&lt; endl;</code> quando for <code>false</code>.</p> <p>A express\u00e3o l\u00f3gica pode ser informada diretamente no comando <code>if</code>. Inclusive, esta \u00e9 a forma mais comum de encontr\u00e1-la. Assim, podemos simplificar nosso trecho de c\u00f3digo, eliminando a vari\u00e1vel <code>is_selecionado</code>. Ter\u00edamos ent\u00e3o:</p> <pre><code>if (idade_c &gt;= 18 &amp;&amp; altura_c &gt; 160 &amp;&amp; peso_c &gt; 60.0){\n    cout &lt;&lt; \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\"&lt;&lt; endl;\n} else {\n    cout &lt;&lt; \"Candidato desclassificado\"&lt;&lt; endl;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#comando-if-else-if","title":"Comando IF ELSE IF","text":"<p>Uma varia\u00e7\u00e3o do comando <code>if</code> permite especificar condi\u00e7\u00f5es para os blocos <code>else</code>. Para demonstrar seu uso, vamos imaginar um novo programa que apresente a situa\u00e7\u00e3o de estudantes com base na m\u00e9dia final em determinada disciplina. A rela\u00e7\u00e3o entre as notas e as respectivas situa\u00e7\u00f5es est\u00e3o na tabela que segue.</p> Nota Situa\u00e7\u00e3o 0-4.9 Reprovado 5.0-6.9 Exame 7.0-10 Aprovado <p>Uma poss\u00edvel codifica\u00e7\u00e3o para o programa em quest\u00e3o seria:</p> <pre><code>/*defini\u00e7\u00e3o de vari\u00e1veis e leitura de dados...*/\n\nif (nota&gt;=0 &amp;&amp; nota &lt;=4.9){\n    cout &lt;&lt;\"Reprovado\";\n} else if (nota&gt;=5.0 &amp;&amp; nota &lt;=6.9){\n    cout &lt;&lt;\"Exame\";\n} else {\n    cout &lt;&lt;\"Aprovado\";\n}\n</code></pre> <p>Note que o <code>else if</code> pode aparecer v\u00e1rias vezes na mesma instru\u00e7\u00e3o, tantas quantas forem necess\u00e1rias. E, mais importante: assim que uma condi\u00e7\u00e3o for avaliada como <code>true</code>, nenhuma outra da mesma instru\u00e7\u00e3o ser\u00e1 avaliada. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#operador-ternario","title":"Operador tern\u00e1rio","text":"<p>Para algumas situa\u00e7\u00f5es, podemos utilizar uma simplifica\u00e7\u00e3o de sintaxe da estrutura <code>if else</code> chamada operador tern\u00e1rio. Seu uso \u00e9 especialmente interessante para testes simples, como aquele que fizemos no programa de sele\u00e7\u00e3o de candidatos. Veja a diferen\u00e7a:</p> <pre><code>    cout &lt;&lt; (idade_c &gt;= 18 &amp;&amp; altura_c &gt; 160 &amp;&amp; peso_c &gt; 60.0 ? \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\": \"Candidato desclassificado\") &lt;&lt; endl;\n</code></pre> <p>Pelo c\u00f3digo, percebemos que a sintaxe do comando \u00e9: <code>express\u00e3o l\u00f3gica ? valor quando true : valor quando false</code>. \u00c9 simples de usar, mas pode prejudicar a legibilidade do c\u00f3digo se aplicado para testes mais complexos. Vale o bom senso ;)</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/condicionais/#switch","title":"Switch","text":"<p>Finalizamos nosso estudo com o comando <code>switch</code>,  uma estrutura de decis\u00e3o baseada em casos. Antes de conhecermos a sintaxe do comando, vamos propor um c\u00f3digo de exemplo:</p> <pre><code>    int nota;\n    cin &gt;&gt; nota;\n\n    switch(nota) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n            cout &lt;&lt; \"Reprovado\" &lt;&lt; endl;\n            break;\n        case 5 :\n        case 6 :\n            cout &lt;&lt; \"Exame\" &lt;&lt; endl;\n            break;\n        case 7 :\n        case 8 :\n        case 9 :\n        case 10:\n            cout &lt;&lt; \"Aprovado\" &lt;&lt; endl;\n            break;\n        default:\n            cout &lt;&lt; \"Nota inv\u00e1lida\" &lt;&lt; endl;\n    }   \n</code></pre> <p>Nosso exemplo tr\u00e1s importantes informa\u00e7\u00f5es acerca da sintaxe e uso do comando <code>switch</code>. O primeiro deles \u00e9 que devemos informar uma vari\u00e1vel (ou express\u00e3o) que possa ser avaliada como inteiro ou tipo enumer\u00e1vel. No c\u00f3digo, a vari\u00e1vel <code>nota</code> entre parenteses <code>()</code> serve  a tal finalidade. Objetivamente estamos consultando o valor de <code>nota</code> e estabelecendo o que fazer para cada um dos valores de interesse. Estes valores de interesse est\u00e3o expressos nos casos (<code>case</code>).</p> <p>Ent\u00e3o, se a leitura da vari\u00e1vel <code>nota</code> indicar que seu valor \u00e9 <code>4</code>, o programa vai executar as instru\u00e7\u00f5es <code>cout &lt;&lt; \"Exame\" &lt;&lt; endl;</code> e <code>break</code>. E se o valor for <code>1</code>, vai executar todas as instru\u00e7\u00f5es que seguem nos pr\u00f3ximos <code>cases</code> at\u00e9 encontrar o <code>break</code>. </p> <p>Opa, como assim executar os \"outros cases\"? Exatamente isso: o comando <code>break</code> indica a interrup\u00e7\u00e3o do processamento do <code>switch</code>. Se ele n\u00e3o estiver presente, a execu\u00e7\u00e3o ir\u00e1 iniciar pelo <code>case</code> pertinente ao valor da express\u00e3o, continuando at\u00e9 o final, passando pelas instru\u00e7\u00f5es de outros casos. Ent\u00e3o, se voc\u00ea quer finalizar a execu\u00e7\u00e3o naquele <code>case</code> espec\u00edfico, deve colocar o comando <code>break</code>.</p> <p>Ok, mas por que o c\u00f3digo anterior n\u00e3o tem break em v\u00e1rios <code>cases</code>? Bem, porque notas entre <code>1</code> e <code>4</code> est\u00e3o associadas com a situa\u00e7\u00e3o <code>Reprovado</code>. Para n\u00e3o repetir a mesma instru\u00e7\u00e3o v\u00e1rias vezes, colocamos o break somente no <code>case 4</code>. O mesmo vale para <code>5</code> e <code>6</code> e <code>7</code> a <code>10</code>.</p> <p>J\u00e1 o comando <code>default</code> \u00e9 especial, executado quando nenhum dos <code>cases</code> anteriores corresponde ao valor da express\u00e3o avaliada. A presen\u00e7a do  <code>default</code> \u00e9 opcional no comando <code>switch</code>.</p> <p>Para mais informa\u00e7\u00f5es sobre desvios condicionais, recomendo a leitura do tutorial da W3C que trata deste assunto.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/funcoes/","title":"Fun\u00e7\u00f5es","text":"<p>Um dos princ\u00edpios do paradigma da programa\u00e7\u00e3o estruturada \u00e9 o conceito de <code>sub-rotina</code>, tamb\u00e9m conhecidas como <code>fun\u00e7\u00e3o</code> e/ou <code>procedimento</code> (algumas linguagens de programa\u00e7\u00e3o diferenciam um do outro). </p> <p>Criar <code>sub-rotinas</code> \u00e9 essencial para administrar a complexidade do software. N\u00e3o \u00e9 incomum que softwares tenham milhares, ou mesmo milh\u00f5es de linhas de c\u00f3digo. Se todo esse c\u00f3digo n\u00e3o for organizado em partes administr\u00e1veis e compreens\u00edveis, os programadores ter\u00e3o s\u00e9rias dificuldades para dar sequ\u00eancia ao projeto.</p> <p>O processo de criar sub-rotinas compreende, portanto, a divis\u00e3o de um grande problema em partes menores, como se fossem blocos, por meio dos quais a solu\u00e7\u00e3o final ser\u00e1 constru\u00edda. A esse processo chamamos de <code>modulariza\u00e7\u00e3o</code>, um conceito-chave em projetos de software.</p> <p>Al\u00e9m de tornar a complexidade administr\u00e1vel por seres humanos, a modulariza\u00e7\u00e3o permite <code>reutilizar</code> c\u00f3digo. Jamais esque\u00e7a desta palavra - <code>reutilizar</code> - pois ela \u00e9 o Santo Graal da programa\u00e7\u00e3o. Reutilizar significa reaproveitar c\u00f3digo funcional, testado e validado, o que implica diretamente na redu\u00e7\u00e3o do tempo e custos de desenvolvimento do projeto.</p> <p>Falando especificamente da linguagem C++, podemos afirmar categoricamente que nenhum programa existe sem ter, ao menos, uma fun\u00e7\u00e3o. Se neste momento voc\u00ea pensou na fun\u00e7\u00e3o <code>main</code>, parab\u00e9ns  \ud83d\ude01</p> <p>Uma fun\u00e7\u00e3o \u00e9 um conjunto de instru\u00e7\u00f5es agrupadas, comumente identificada por um nome, que s\u00e3o executadas sempre que uma opera\u00e7\u00e3o de invoca\u00e7\u00e3o est\u00e1 presente no c\u00f3digo. \u00c9 o meio que temos para <code>representar a\u00e7\u00f5es e computa\u00e7\u00f5es em um programa</code>, de modo que sempre que queremos fazer algo no c\u00f3digo para o qual \u00e9 poss\u00edvel atribuir um nome, a\u00ed estaremos face a uma nova fun\u00e7\u00e3o <sup>1</sup>.</p> <p>Nota</p> <p>Invocar uma fun\u00e7\u00e3o significa cham\u00e1-la pelo nome ou por seu endere\u00e7o de mem\u00f3ria no c\u00f3digo.</p> <p>Para criarmos fun\u00e7\u00f5es \u00e9 preciso conhecer as regras de sintaxe que a linguagem de programa\u00e7\u00e3o aplica. Falando do C++, a sintaxe do comando envolve:</p> <ul> <li>Tipo de retorno: Especifica no cabe\u00e7alho da fun\u00e7\u00e3o (sua assinatura) que tipo de valor ela retorna ao chamador. Qualquer tipo dispon\u00edvel pode ser retornado e, para os casos onde o retorno deve ser desconsiderado, utilizamos o tipo especial <code>void</code>.</li> <li>Identificador: Assim como vari\u00e1veis t\u00eam nomes, as fun\u00e7\u00f5es tamb\u00e9m. As mesmas regras de nomenclatura se aplicam.</li> <li>Argumentos formais (par\u00e2metros): S\u00e3o vari\u00e1veis definidas no cabe\u00e7alho da fun\u00e7\u00e3o por meio das quais podemos passar valores espec\u00edficos a cada chamada. Ter par\u00e2metros \u00e9 algo opcional em uma fun\u00e7\u00e3o. </li> <li>Instru\u00e7\u00f5es: \u00c9 o que a fun\u00e7\u00e3o executa. Compreende seu corpo, sua l\u00f3gica de opera\u00e7\u00e3o interna.</li> <li>Retorno: Comando que finaliza a execu\u00e7\u00e3o da fun\u00e7\u00e3o e devolve ao chamador o resultado do processamento. Em C++, o retorno \u00e9 feito atrav\u00e9s do comando <code>return</code>. Toda fun\u00e7\u00e3o que indicar retornar um tipo diferente de <code>void</code> deve obrigatoriamente faz\u00ea-lo para todos os caminhos poss\u00edveis de finaliza\u00e7\u00e3o (ou gerar um erro). A exce\u00e7\u00e3o fica com a fun\u00e7\u00e3o <code>main</code>, que ao executar com sucesso todos os comandos automaticamente ir\u00e1 retornar <code>0</code>.</li> </ul> <p>Vamos utilizar como estudo de caso a pr\u00f3pria fun\u00e7\u00e3o <code>main</code>. Observe que come\u00e7amos pela tipo <code>int</code>, indicando que seu retorno \u00e9 um n\u00famero inteiro. Na sequ\u00eancia, temos <code>main</code>, o nome da fun\u00e7\u00e3o. Os par\u00e2metros s\u00e3o declarados no espa\u00e7o contido entre os par\u00eanteses <code>()</code>. Cada declara\u00e7\u00e3o de par\u00e2metro compreende seu tipo e nome, tal qual fazemos ao declarar vari\u00e1veis. Se houver necessidade de mais de um par\u00e2metro, devemos separ\u00e1-los com v\u00edrgula. Por fim, as instru\u00e7\u00f5es ficam contidas entre as chaves <code>{}</code>.</p> C++ <pre><code>int main(int argc, char *argv[])\n{\n    /*instru\u00e7\u00f5es*/\n}\n</code></pre> <p>Sabemos que a fun\u00e7\u00e3o <code>main</code> \u00e9 obrigat\u00f3ria em qualquer programa escrito em C++. Caber\u00e1 a n\u00f3s, programadores, criamos as demais fun\u00e7\u00f5es para nossos programas. Na sequ\u00eancia, apresento alguns exemplos de fun\u00e7\u00f5es e coment\u00e1rios pertinentes.</p>"},{"location":"programacao/cpp/funcoes/#retornando-valores","title":"Retornando Valores","text":"<p>Tipicamente criamos fun\u00e7\u00f5es que retornam algum valor ao chamador (<code>caller</code>). Sabemos que o tipo de retorno acompanha a declara\u00e7\u00e3o da fun\u00e7\u00e3o e que, por meio deste tipo, o compilador poder\u00e1 aceitar a chamada da fun\u00e7\u00e3o em qualquer contexto que permita presen\u00e7a daquele tipo de dado.</p> <p>No programa abaixo estamos utilizando uma fun\u00e7\u00e3o chamada <code>ler_idade()</code>. Perceba que o cabe\u00e7alho (assinatura) aparece antes da fun\u00e7\u00e3o <code>main</code>, enquanto que a implementa\u00e7\u00e3o est\u00e1 posta ap\u00f3s. Isso se faz necess\u00e1rio para atender um princ\u00edpio b\u00e1sico de programa\u00e7\u00e3o, que \u00e9: <code>somente podemos fazer uso, em uma instru\u00e7\u00e3o, de estruturas j\u00e1 dispon\u00edveis naquele momento</code>. Ou seja, precisamos orientar o compilador da exist\u00eancia de uma fun\u00e7\u00e3o chamada <code>ler_idade()</code>, que retorna valor inteiro, pois estamos chamando ela antes de propriamente implement\u00e1-la.</p> C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint ler_idade();\n\nint main(){\n    int idade1, idade2;\n    idade1 = ler_idade();\n    idade2 = ler_idade();\n}\n\nint ler_idade(){\n    int idade;\n\n    while(true){        \n        cout &lt;&lt; \"Informe a idade [13,59]: \";\n        cin &gt;&gt; idade;\n        if (idade &lt;13 || idade &gt; 59)        \n            cout &lt;&lt; endl &lt;&lt; \"Valor inv\u00e1lido\" &lt;&lt; endl;\n        else\n            return idade;\n    }\n}   \n</code></pre> <p>Nas linhas <code>9</code> e <code>10</code> temos a chamada para a fun\u00e7\u00e3o <code>ler_idade()</code>. Perceba que opera\u00e7\u00e3o de invoca\u00e7\u00e3o compreende indicar o nome e os argumentos entre <code>()</code>, quando existirem. Assim que a execu\u00e7\u00e3o do c\u00f3digo alcan\u00e7ar essa instru\u00e7\u00e3o, o fluxo de execu\u00e7\u00e3o \u00e9 desviado para a primeira linha da fun\u00e7\u00e3o, executando seu c\u00f3digo interno at\u00e9 que ela finalize. O valor retornado via <code>return</code> ser\u00e1 \"substitu\u00eddo\" no espa\u00e7o em que ocorreu a chamada. Logo, as vari\u00e1veis <code>idade1</code> e <code>idade2</code> ir\u00e3o receber a idade informada pelo usu\u00e1rio, adequadamente compreendida no intervalo \\(\\left[13,59\\right]\\).</p> <p>Mas afinal, qual \u00e9 a vantagem de se utilizar a fun\u00e7\u00e3o <code>ler_idade()</code>? </p> <ul> <li> <p>Abstra\u00e7\u00e3o: Abstrair significa reduzir complexidade a partir da elabora\u00e7\u00e3o de um conceito de alto n\u00edvel sobre algo. Em nosso c\u00f3digo, estamos deixando a carga da fun\u00e7\u00e3o estabelecer e executar todas as regras de valida\u00e7\u00e3o e coleta de um valor de idade. Na perspectiva da instru\u00e7\u00e3o que chama a fun\u00e7\u00e3o, n\u00e3o h\u00e1 informa\u00e7\u00e3o sobre como a fun\u00e7\u00e3o opera, apenas que ela ir\u00e1 retornar um valor inteiro que representa uma idade. \u00c9 uma rela\u00e7\u00e3o de confian\u00e7a, em que delegamos a responsabilidade para a fun\u00e7\u00e3o e ficamos aguardando seu retorno. Ao fazer isso, n\u00e3o precisamos nos preocupar com todos os pequenos detalhes do c\u00f3digo, permitindo ter uma vis\u00e3o de mais alto n\u00edvel durante a codifica\u00e7\u00e3o.</p> </li> <li> <p>Reuso: Todos os locais do c\u00f3digo que demandam a leitura de uma idade far\u00e3o chamada \u00e0 fun\u00e7\u00e3o. Logo, n\u00e3o precisaremos repetir todo o c\u00f3digo para cada situa\u00e7\u00e3o em que uma idade for demandada.</p> </li> <li> <p>\u00danico ponto de altera\u00e7\u00e3o: Mudou o crit\u00e9rio para determinar uma idade v\u00e1lida? Sem problemas, basta alterar o c\u00f3digo da fun\u00e7\u00e3o que todos os locais que fazem uso dela ir\u00e3o utilizar a vers\u00e3o atualizada. Escreva apenas uma vez, use em todo lugar! </p> </li> </ul>"},{"location":"programacao/cpp/funcoes/#passando-argumentos","title":"Passando Argumentos","text":"<p>Muitas vezes precisamos passar valores espec\u00edficos no momento em que a fun\u00e7\u00e3o \u00e9 chamada. Estes valores recebem o nome de <code>argumentos</code>. Os argumentos s\u00e3o utilizados para alimentar os <code>par\u00e2metros</code> da fun\u00e7\u00e3o, que s\u00e3o vari\u00e1veis que permitem \u00e0 fun\u00e7\u00e3o receber dados do mundo externo e utiliz\u00e1-los em sua execu\u00e7\u00e3o. </p> <p>Podemos passar argumentos de dois modos diferentes: <code>por valor</code> e <code>por refer\u00eancia</code>. Quando utilizamos a estrat\u00e9gia de passagem <code>por valor</code>, o par\u00e2metro receber\u00e1 uma c\u00f3pia do valor informado. Lembre-se que um <code>par\u00e2metro</code> \u00e9 uma vari\u00e1vel local da fun\u00e7\u00e3o, inicializada a cada chamada realizada<sup>1</sup>.</p> <p>A passagem <code>por valor</code> de argumentos gera uma c\u00f3pia, de modo que eventuais altera\u00e7\u00f5es realizadas pela fun\u00e7\u00e3o no par\u00e2metro correspondente n\u00e3o ter\u00e3o impacto externo. Para ilustrar este comportamento iremos utilizar um programa muito simples, composto por duas fun\u00e7\u00f5es: <code>main</code> e <code>substitui</code>. </p> C++ <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid substitui(int a)\n{\n    a = 7;\n}\n\nint main()\n{\n    int a = 3;\n    cout &lt;&lt; a &lt;&lt; endl;\n    substitui(a);\n    cout &lt;&lt; a &lt;&lt; endl;\n}\n</code></pre> <p>A fun\u00e7\u00e3o <code>substitui</code> define um par\u00e2metro, chamado de <code>a</code>, para receber um valor inteiro. Na linha \\(14\\), ela \u00e9 chamada passando-se para o par\u00e2metro <code>a</code> o argumento <code>a</code>. Mas espera a\u00ed: n\u00e3o \u00e9 o mesmo <code>a</code> ent\u00e3o?</p> <p>N\u00e3o, s\u00e3o posi\u00e7\u00f5es de mem\u00f3ria diferentes. Todo par\u00e2metro representa uma vari\u00e1vel local \u00e0 fun\u00e7\u00e3o, cujo escopo de visibilidade \u00e9 o corpo desta fun\u00e7\u00e3o. O fato de estarmos enviando um argumento, que \u00e9 uma vari\u00e1vel, com o mesmo nome representa uma simples coincid\u00eancia. </p> <p>Ent\u00e3o, se estamos falando de posi\u00e7\u00f5es de mem\u00f3ria diferentes, a atribui\u00e7\u00e3o realizada pela fun\u00e7\u00e3o na linha \\(7\\) n\u00e3o vai alterar o valor da vari\u00e1vel <code>a</code> declarada na fun\u00e7\u00e3o <code>main</code>. Deste modo, ambos os comandos <code>cout</code> ir\u00e3o escrever o valor \\(3\\). Chamamos isso de passagem de argumento por c\u00f3pia (call by value).</p> <p>Agora vamos modificar nossa fun\u00e7\u00e3o <code>substitui</code> adicionando o operador <code>&amp;</code> antes do nome do par\u00e2metro. Nosso programa em sua vers\u00e3o alterada seria:</p> C++ <p><pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid substitui(int &amp;a)\n{\n    a = 7;\n}\n\nint main()\n{\n    int a = 3;\n    cout &lt;&lt; a &lt;&lt; endl;\n    substitui(a);\n    cout &lt;&lt; a &lt;&lt; endl;\n}\n</code></pre> Estranhamente, o resultado desta vers\u00e3o do programa ser\u00e1 \\(3\\) para o primeiro comando <code>cout</code> e \\(7\\) para o segundo. Por que isso ocorre? \u00c9 que neste programa estamos utilizando passagem de argumento por refer\u00eancia (call by reference), ou seja, a fun\u00e7\u00e3o recebe o endere\u00e7o de mem\u00f3ria do argumento. Deste modo, as altera\u00e7\u00f5es realizadas dentro da fun\u00e7\u00e3o no valor do par\u00e2metro ser\u00e3o diretamente aplicadas \u00e0 vari\u00e1vel informada como argumento.</p> <p>Mas isso n\u00e3o pode gerar efeitos colaterais indesejados? Que benef\u00edcios h\u00e1 em se utilizar refer\u00eancias?</p> <p>Bem, o programador dever\u00e1 utilizar o recurso com prud\u00eancia. Nem todo par\u00e2metro deve ser by reference. O grande benef\u00edcio est\u00e1 possibilidade de compartilhar \u00e1reas de mem\u00f3ria, uma opera\u00e7\u00e3o muito mais r\u00e1pida se comparada a uma c\u00f3pia de valores. Imagine se precis\u00e1ssemos informar um vetor de \\(1000\\) posi\u00e7\u00f5es para um fun\u00e7\u00e3o e todos estes valores precisassem ser copiados para o par\u00e2metro?</p> <p>Logo, nesta perspectiva, qualquer <code>array</code> definido como par\u00e2metro ir\u00e1 receber uma refer\u00eancia de mem\u00f3ria e n\u00e3o uma c\u00f3pia de valor. Podemos verificar isso no programa a seguir, constru\u00eddo para ler uma matriz \\(M_{2 \\times 2}\\) e apresentar a m\u00e9dia aritm\u00e9tica dos valores lidos.</p> C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n\n#define LINHAS 2\n#define COLUNAS 2\n\nusing namespace std;\n\nvoid ler_dados_matriz(int m[][COLUNAS]){\n     for(int l=0;l &lt; LINHAS;l++){\n         for(int c=0;c &lt; COLUNAS;c++ ){\n               cout&lt;&lt;\"M[\"&lt;&lt;l&lt;&lt;\",\"&lt;&lt;c&lt;&lt;\"]: \";\n               cin &gt;&gt; m[l][c]; \n         }\n     }   \n}\n\nvoid imprimir_matriz(int m[][COLUNAS]){\n    cout &lt;&lt;\"M: \"&lt;&lt;endl;\n    for(int l=0;l &lt; LINHAS;l++){\n        cout &lt;&lt;\"| \";\n        for(int c=0;c &lt; COLUNAS;c++ ){\n            cout &lt;&lt; m[l][c] &lt;&lt;\" \";\n        }\n        cout &lt;&lt;\"|\" &lt;&lt; endl;\n    }\n    cout &lt;&lt;endl;\n}\n\ndouble calcular_media_matriz(int m[][COLUNAS]){\n    double somatorio=0; \n\n    for(int l=0;l &lt; LINHAS;l++)\n         for(int c=0;c &lt; COLUNAS;c++ )\n            somatorio += m[l][c];\n\n   return somatorio/(LINHAS * COLUNAS);     \n}\n\nint main(){\n    int dados[LINHAS][COLUNAS]={{0},{0}};\n    imprimir_matriz(dados);\n    ler_dados_matriz(dados);\n    imprimir_matriz(dados);\n    double media = calcular_media_matriz(dados);\n    cout &lt;&lt;\"MEDIA: \" &lt;&lt;setprecision(3)&lt;&lt;fixed &lt;&lt; media &lt;&lt; endl;\n}\n</code></pre> <ol> <li> <p>Bjarne Stroustrup. Programming: Principles and Practice Using C++. Always learning. Addison Wesley, 2\u00ba edition, 2014. ISBN 9780321992789. URL: https://books.google.com.br/books?id=hxOpAwAAQBAJ.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"programacao/cpp/identificadores/","title":"Literais e Identificadores","text":"<p>Codificar um software compreende, basicamente, modificar estados conforme sequ\u00eancia e regras previamente definidas. Neste processo, dar nomes \u00e0s estruturas e, por vezes, inicializ\u00e1-las com valores \u00e9 tarefa trivial. </p> <p>Por ser praticamente indissoci\u00e1vel da pr\u00e1tica de programa\u00e7\u00e3o, toda linguagem estabelece regras para nomenclatura de identificadores (nome que o programador atribui \u00e0s estruturas) e para defini\u00e7\u00e3o de literais (valores fixos).</p> <p>Na sequ\u00eancia vamos abordar como vari\u00e1veis e literais s\u00e3o definidos na linguagem C++.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#variaveis","title":"Vari\u00e1veis","text":"<p>Um programa \u00e9 composto por instru\u00e7\u00f5es e dados, ambos armazenados na mem\u00f3ria RAM do computador. Enquanto que instru\u00e7\u00f5es, em sua maioria, representam que tipo de manipula\u00e7\u00e3o o processador deve executar com os dados (somas, subtra\u00e7\u00f5es, multiplica\u00e7\u00f5es, etc.), as vari\u00e1veis representam os espa\u00e7os de armazenamento de dados do programa.</p> <p>Os dados s\u00e3o armazenados em vari\u00e1veis, que nada mais s\u00e3o que espa\u00e7os de mem\u00f3ria RAM reservados para tal finalidade. Precisamos lembrar que vari\u00e1veis apresentam alguma propriedades importantes:</p> <ul> <li> <p>Nome: O nome da vari\u00e1vel \u00e9 a identifica\u00e7\u00e3o que o programador atribui \u00e0 \u00e1rea de mem\u00f3ria. O nome deve ser suficientemente claro para indicar o significado dos dados nela armazenados. A nomenclatura de vari\u00e1veis deve respeitar as restri\u00e7\u00f5es impostas a identificadores da linguagem, bem como padr\u00f5es de legibilidade de c\u00f3digo que a boa pr\u00e1tica recomenda. Tamb\u00e9m h\u00e1 diferen\u00e7a entre caracteres mai\u00fasculos e min\u00fasculos.</p> </li> <li> <p>Tipo: Vari\u00e1veis, em linguagens fortemente tipadas, devem indicar qual \u00e9 a natureza dos dados que o programador poder\u00e1 nelas armazenar. O tipo representa uma restri\u00e7\u00e3o, limitando o conjunto de valores aceitos. A linguagem C++ define um conjunto de tipos b\u00e1sicos. Sugiro a leitura deste tutorial para maiores detalhes.</p> </li> </ul> <p>No c\u00f3digo apresentado ao final deste tutorial, voc\u00ea ir\u00e1 observar diversas declara\u00e7\u00f5es de vari\u00e1veis. A t\u00edtulo de exemplo, observe o trecho de c\u00f3digo que segue. Nele s\u00e3o declaradas tr\u00eas vari\u00e1veis, a saber, <code>contador</code>, <code>preco</code>, <code>lucro_liquido</code>. Estes s\u00e3o os nomes das vari\u00e1veis. J\u00e1 <code>int</code>, <code>float</code> e <code>double</code> representam o tipo de dado. </p> <p>No caso da vari\u00e1vel contador, estamos fazendo a declara\u00e7\u00e3o e a inicializa\u00e7\u00e3o em uma \u00fanica instru\u00e7\u00e3o. Assim, t\u00e3o logo criada, a vari\u00e1vel receber\u00e1 o valor <code>0</code>.</p> <pre><code>    int contador = 0;\n    float preco;\n    double lucro_liquido;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#literais","title":"Literais","text":"<p>Literal \u00e9 todo valor informado de forma fixa no c\u00f3digo. \u00c9 comum utilizar a express\u00e3o <code>hard code</code> para descrever a opera\u00e7\u00e3o. Normalmente os literais s\u00e3o utilizados para iniciar estruturas do programa, ou seja, definir seu valor inicial.</p> <p>Os literais podem representar n\u00fameros inteiros, n\u00fameros reais, valores booleanos, caracteres ou sequ\u00eancia de caracteres. Para cada caso existem particularidades, as quais iremos tratar a seguir.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#literais-para-numeros-inteiros","title":"Literais para n\u00fameros inteiros","text":"<p>N\u00fameros inteiros  s\u00e3o n\u00fameros n\u00e3o fracionais, ou seja, n\u00e3o apresentam valores ap\u00f3s a v\u00edrgula. Sua representa\u00e7\u00e3o se d\u00e1, normalmente, em base decimal. Contudo, o C++ aceita tamb\u00e9m n\u00fameros representados em base octal, hexadecimal e bin\u00e1ria.</p> <p>Quando em decimal, um n\u00famero pode ser expresso utilizando somente caracteres de 0 a 9. A representa\u00e7\u00e3o decimal \u00e9 a mais confort\u00e1vel na perspectiva do programador porque \u00e9 o sistema de representa\u00e7\u00e3o num\u00e9rico do nosso dia-a-dia. Literais inteiros expressos em decimal podem utilizar aspa simples para demarcar milhares. Tal recurso conforme apenas maior legibilidade ao c\u00f3digo-fonte. Observe o trecho de c\u00f3digo a seguir:</p> <pre><code>    var_int = 24'000;       //base decimal    \n</code></pre> <p>A presenta\u00e7\u00e3o octal, por sua vez, considera apenas caracteres de 0 a 7. Para informar literais octais em um programa C++, o programador deve prefixar o n\u00famero com 0. Observe o c\u00f3digo abaixo:</p> <p><pre><code>    var_octal = 071;        //base octal   \n</code></pre> Um m\u00e9todo simples para convers\u00e3o de octal para decimal \u00e9 utilizar uma tabela de pot\u00eancias de base <code>8</code>. Isso porque assim como decimal, o octal \u00e9 um sistema num\u00e9rico posicional. Observe:</p> 8<sup>3</sup> 8<sup>2</sup> 8<sup>1</sup> 8<sup>0</sup> 7 1 <p>Considerando a tabela de convers\u00e3o, o valor octal <code>71</code> equivale a <code>57</code> em decimal, resultante de <code>8*7 + 1</code>.</p> <p>No caso da representa\u00e7\u00e3o hexadecimal, os caracteres aceitos s\u00e3o de <code>0</code> a <code>9</code> e de <code>A</code> a <code>F</code>. Todo literal hexadecimal deve ser prefixado com <code>0X</code> ou <code>0x</code>. A base hexadecimal \u00e9 muito utilizada para expressar conte\u00fado de mem\u00f3ria do computador, pois al\u00e9m de reduz a quantidade de caracteres necess\u00e1rios, o processo de convers\u00e3o bin\u00e1rio-hexadecimal \u00e9 bastante simples. Observe o trecho de c\u00f3digo a seguir:</p> <pre><code>    var_hex = 0xF2;         //base hexadecimal    \n</code></pre> <p>Os caracteres de <code>A</code> a <code>F</code> do sistema hexadecimal equivalem a <code>10</code>, <code>11</code>, <code>12</code>, <code>13</code>,<code>14</code> e <code>15</code> no sistema decimal, respectivamente. Desta forma, para converter de hexadecimal para decimal, podemos utilizar a tabela de pot\u00eancias, agora com base <code>16</code>.</p> 16<sup>3</sup> 16<sup>2</sup> 16<sup>1</sup> 16<sup>0</sup> F 2 <p>Em nosso exemplo, <code>F2</code> equivale ao valor <code>242</code> em decimal, visto que \u00e9 o resultado da express\u00e3o <code>15*16 + 2</code>.</p> <p>E finalmente chegamos a representa\u00e7\u00e3o bin\u00e1ria, natural da m\u00e1quina. Literais inteiros expressos em bin\u00e1rio s\u00e3o sequ\u00eancias de <code>0s</code> e <code>1s</code> prefixados com <code>0b</code> ou <code>0B</code>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#literais-para-numeros-de-ponto-flutuante","title":"Literais para n\u00fameros de ponto flutuante","text":"<p>Ponto flutuante \u00e9 o nome dado para um n\u00famero real representado digitalmente no computador. Quando informamos um literal que expressa um n\u00famero real na programa\u00e7\u00e3o, devemos utilizar o caractere <code>.</code> para separar a parte decimal da inteira. Tamb\u00e9m \u00e9 poss\u00edvel utilizar aspas simples para separar os milhares.</p> <p>N\u00fameros de ponto flutuante podem ser armazenados com precis\u00e3o simples (identificados com o tipo <code>float</code>) ou com precis\u00e3o dupla (tipo <code>double</code>). N\u00fameros de precis\u00e3o simples utilizam 32 bits de espa\u00e7o de mem\u00f3ria, enquanto n\u00fameros de precis\u00e3o dupla utilizam 64 bits. Outra importante diferen\u00e7a refere-se a quantidade de casas decimais armazenadas: enquanto um tipo <code>float</code> armazena at\u00e9 <code>7</code> casas decimais, um <code>double</code> armazena <code>15</code> casas.  </p> <pre><code>    float var_float;\n    double var_double;\n\n    var_float = 1'234.34;\n    var_double = 345;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#literais-booleanos","title":"Literais booleanos","text":"<p>\u00c1lgebra booleana \u00e9 um formalismo matem\u00e1tico utilizado na computa\u00e7\u00e3o para implementar testes l\u00f3gicos. Na \u00e1lgebra booleana temos dois estados poss\u00edveis para um proposi\u00e7\u00e3o l\u00f3gica: <code>verdadeiro</code> e <code>falso</code>. </p> <p>No C++, o estado <code>verdadeiro</code> \u00e9 representado pelo literal <code>true</code> (ou pelo literal inteiro <code>1</code>). J\u00e1 o estado <code>falso</code> \u00e9 representado pelo literal <code>false</code> (ou pelo literal inteiro <code>0</code>). Observe o exemplo:</p> <pre><code>    bool var_true, var_false;\n    var_true = true;\n    var_false = false;\n\n    var_true = 1;\n    var_false = 0;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#literais-para-caracteres","title":"Literais para caracteres","text":"<p>Caracteres s\u00e3o os s\u00edmbolos do alfabeto, pontua\u00e7\u00e3o, entre outros. Nem todo caractere tem representa\u00e7\u00e3o gr\u00e1fica (quebra de linha e fim de arquivo, por exemplo). </p> <p>Para representar caracteres computacionalmente, pode-se utilizar <code>1</code> ou <code>2</code> bytes. O padr\u00e3o Unicode \u00e9 a norma atual para representa\u00e7\u00e3o de caracteres de forma universal, independentemente de plataforma, programa, linguagem ou mesmo idioma.</p> <p>O padr\u00e3o Unicode utiliza <code>2</code> bytes para representar o c\u00f3digo num\u00e9rico de cada um dos <code>137,929</code> caracteres existentes (Vers\u00e3o 12)</p> <p>Em C++, os literais de caracteres s\u00e3o representados envolvidos por aspas simples. Observe o exemplo:</p> <pre><code>    char var_char;\n    var_char = 'c';\n    var_char = 'B';\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#literais-para-strings","title":"Literais para strings","text":"<p>Strings s\u00e3o sequ\u00eancias de caracteres, ou simplesmente, a forma de expressar texto na programa\u00e7\u00e3o. Literais s\u00e3o definidos no C++ por meio de aspas duplas, conforme demonstra o exemplo. </p> <pre><code>    string var_string;\n    var_string = \"Ol\u00e1, isso \u00e9 um texto\";\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/identificadores/#um-pouco-de-codigo","title":"Um pouco de c\u00f3digo","text":"<p>Observe o c\u00f3digo-fonte do programa a seguir. Perceba que nele s\u00e3o declaradas vari\u00e1veis cuja inicializa\u00e7\u00e3o faz uso dos literais que estudamos anteriormente. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/io/","title":"Entrada e Sa\u00edda em Console","text":"<p>Programas de computador s\u00e3o criados basicamente para processar dados. Espera-se, portanto, que hajam meios do programa receber tais dados e devolver os resultados do processamento. Um destes meios s\u00e3o os <code>consoles</code>, ou seja, janelas do sistema operacional que permitem apenas comandos na forma de texto. Outra forma t\u00edpica de coletar e apresentar dados s\u00e3o por interfaces gr\u00e1ficas baseadas em janelas. De qualquer modo, em todos os casos, estamos falando de opera\u00e7\u00f5es de <code>input/output</code> (tamb\u00e9m conhecidas como <code>i/o</code>).</p> <p>Neste artigo iremos explorar o processo de <code>i/o</code> em <code>console</code> do C++ por meio da bibliote\u00e7a <code>iostream</code>.</p>","tags":["Programa\u00e7\u00e3o","C++","I/O","Console"]},{"location":"programacao/cpp/io/#cin-e-cout","title":"Cin e cout","text":"<p>Em C++ utilizamos o objeto <code>cin</code> para ler valores do teclado, enquanto que utilizamos <code>cout</code> para imprimir valores em tela. Vamos come\u00e7ar nosso estudo pela entrada de dados.</p> <p>Para lermos informa\u00e7\u00f5es do teclado precisamos informar ao objeto <code>cin</code> a vari\u00e1vel de destino. Deste modo, o valor informado ser\u00e1 transferido (registrado) na vari\u00e1vel para posteriormente ser utilizado. Neste processo, podemos informar uma ou mais vari\u00e1veis na mesma instru\u00e7\u00e3o, logo ap\u00f3s o opera\u00e7\u00e3o de extra\u00e7\u00e3o <code>&gt;&gt;</code>.</p> <p>Aten\u00e7\u00e3o</p> <p>Toda vari\u00e1vel no C++, para ser utilizada, deve obrigatoriamente ter sido declarada em instru\u00e7\u00f5es anteriores. Somente podemos utilizar aquilo que j\u00e1 foi \"criado\". </p> <p>Supondo que quis\u00e9ssemos ler o pre\u00e7o de determinado produto do supermercado para uma vari\u00e1vel de nosso programa, primeiro dever\u00edamos realizar a declara\u00e7\u00e3o da mesma e, ap\u00f3s, a leitura. Considerando que pre\u00e7o refere-se a um conceito num\u00e9rico com possibilidade de casas decimais, devemos utilizar, na declara\u00e7\u00e3o, tipos de dados de ponto flutuante, como <code>float</code> ou <code>double</code>. Logo, de forma bem resumida, ter\u00edamos no m\u00ednimo duas etapas em nosso programa relacionadas a este contexto:</p> <ul> <li>Declara\u00e7\u00e3o da vari\u00e1vel: <code>float preco_produto;</code></li> <li>Leitura de valor de produto do console: <code>cin &gt;&gt; preco_produto;</code></li> </ul> <p>Outro aspecto importante \u00e9 que as duas instru\u00e7\u00f5es acima n\u00e3o podem ser invertidas, ou seja, a declara\u00e7\u00e3o deve ocorrer obrigatoriamente em linhas anteriores ao uso da vari\u00e1vel.</p> <p>Mas voc\u00ea h\u00e1 de concordar comigo que simplesmente ficar aguardando o usu\u00e1rio informar um valor pelo teclado, sem inform\u00e1-lo do que o programa espera receber n\u00e3o parece ser adequado. O correto \u00e9 apresentar mensagens para, posteriormente, aguardar o valor. Para esta finalidade precisamos recorrer ao objeto <code>cout</code>.</p> <p>Voltando ao exemplo do pre\u00e7o do produto, seria mais conveniente realizar a seguinte sequ\u00eancia de instru\u00e7\u00f5es:</p> <ul> <li>Declara\u00e7\u00e3o da vari\u00e1vel: <code>float preco_produto;</code></li> <li>Apresentar mensagem em tela: <code>cout &lt;&lt; \"Informe o valor do produto:\"</code></li> <li>Leitura de valor do produto do console: <code>cin &gt;&gt; preco_produto;</code></li> </ul> <p>Aten\u00e7\u00e3o</p> <p>Percebeu que o operador que acompanha o <code>cout</code> \u00e9 oposto em sentido ao do <code>cin</code>? Pois \u00e9, enquanto o operador de extra\u00e7\u00e3o <code>&gt;&gt;</code> \u00e9 utilizado no objeto <code>cin</code>, o do <code>cout</code> chama-se operador de inser\u00e7\u00e3o e se op\u00f5em em sentido, apontando para a esquerda <code>&lt;&lt;</code>.</p>","tags":["Programa\u00e7\u00e3o","C++","I/O","Console"]},{"location":"programacao/cpp/io/#estudo-de-caso","title":"Estudo de caso","text":"<p>Observe nosso programa exemplo abaixo. Tenha especial aten\u00e7\u00e3o aos tipos de dado utilizados na declara\u00e7\u00e3o das vari\u00e1veis e aos usos dos objetos de entrada e sa\u00edda. </p> <p>Execute o c\u00f3digo com especial aten\u00e7\u00e3o \u00e0s mensagens exibidas em tela, buscando relacionar com a instru\u00e7\u00e3o que as gera.</p> <p>Exemplo</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int ano_nascimento;\n    float peso;\n    string nome;\n\n    cout &lt;&lt; \"Informe seu nome: \";\n    cin &gt;&gt; nome;\n\n    cout &lt;&lt; \"Informe seu peso: \";\n    cin &gt;&gt; peso;\n\n\n    cout &lt;&lt; \"Informe seu ano de nascimento: \";\n    cin &gt;&gt; ano_nascimento;\n\n\n    cout &lt;&lt;endl &lt;&lt; nome &lt;&lt;\", nascido em \" &lt;&lt;ano_nascimento &lt;&lt; \" tem peso igual a \"&lt;&lt; peso &lt;&lt;endl;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","C++","I/O","Console"]},{"location":"programacao/cpp/io/#formatando-a-saida-de-dados","title":"Formatando a sa\u00edda de dados","text":"<p>A apresenta\u00e7\u00e3o das informa\u00e7\u00f5es ao usu\u00e1rio \u00e9 muito importante, afinal estamos falado de tornar a experi\u00eancia de uso do software o mais agrad\u00e1vel poss\u00edvel. Na intera\u00e7\u00e3o via console, podemos trabalhar a sa\u00edda com aux\u00edlio de recursos da biblioteca <code>iomanip</code>.</p> <p>O primeiro passo para utilizar a biblioteca \u00e9 inclu\u00ed-la no programa atrav\u00e9s da diretiva <code>#include</code>. Feito isso, temos acesso aos seguintes recursos:</p> <ul> <li><code>setfill</code>: permite definir o caractere utilizado para preencher espa\u00e7os vazios.</li> <li><code>setw</code>: especifica o n\u00famero de colunas reservadas para impress\u00e3o do valor que segue.</li> <li><code>left</code>: alinhamento da sa\u00edda em tela \u00e0 esquerda.</li> <li><code>right</code>: alinhamento da sa\u00edda em tela \u00e0 direita.</li> <li><code>setprecision</code>: configura quantas casas decimais ser\u00e3o impressos na sa\u00edda de n\u00fameros de ponto flutuante.</li> <li><code>setiosflags</code>: ativa flags do mecanismo de io, como o tipo de representa\u00e7\u00e3o num\u00e9rica utilizada na sa\u00edda, por exemplo.</li> </ul> <p>Vejamos o exemplo a seguir:</p> <p>Exemplo</p> <pre><code>#include &lt;iomanip&gt;\n\nusing namespace std;\n\nint main()\n{\n    float value =0.635987;\n    double phi = 1.61803398874989484820;\n    string hello = \"hello\";\n    /*\n        fixed: expressa um n\u00famero de ponto flutuante com uma quantidade espec\u00edfica de d\u00edgitos ap\u00f3s ou antes da v\u00edrgula\n        setprecision(): m\u00e9todo que especifica o n\u00famero de casas decimais ap\u00f3s a v\u00edrgula\n    */\n    cout &lt;&lt; fixed &lt;&lt; setprecision(4);\n    cout &lt;&lt; hello &lt;&lt; \" \" &lt;&lt; value &lt;&lt;endl;\n    /*\n        setiosflags(ios::right): alinhamento do texto \u00e0 direita\n        setw(50): reserva 50 caracteres de espa\u00e7o em tela para a sa\u00edda do pr\u00f3ximo valor em tela\n    */\n    cout &lt;&lt;setiosflags(ios::right) &lt;&lt;setw(50);\n    cout &lt;&lt; hello &lt;&lt; \" h\" &lt;&lt; value &lt;&lt;endl;\n    cout &lt;&lt; setw(30) &lt;&lt; setprecision(12);\n    cout &lt;&lt; phi &lt;&lt;endl;\n\n    return 0;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","C++","I/O","Console"]},{"location":"programacao/cpp/iteracao/","title":"La\u00e7os de Repeti\u00e7\u00e3o","text":"<p>Os <code>la\u00e7os de repeti\u00e7\u00e3o</code> s\u00e3o comandos que permitem iterar (repetir) um conjunto de instru\u00e7\u00f5es sob determinadas condi\u00e7\u00f5es. Junto com os comandos de desvio condicional, integram os comandos de controle de fluxo e s\u00e3o imprescind\u00edveis na programa\u00e7\u00e3o estruturada (e em outros paradigmas tamb\u00e9m).</p> <p>Temos tr\u00eas la\u00e7os de repeti\u00e7\u00e3o na linguagem C++: <code>for</code>, <code>while</code> e <code>do while</code>. Todos eles servem ao mesmo prop\u00f3sito, apresentando sutis diferen\u00e7as entre si. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/iteracao/#for","title":"For","text":"<p>Come\u00e7aremos nossa an\u00e1lise pelo la\u00e7o <code>for</code>. Podemos dividir sua estrutura em um cabe\u00e7alho e um corpo. No cabe\u00e7alho temos tr\u00eas segmentos separados por ponto-e-v\u00edrgula. Vamos cham\u00e1-los de  <code>s1</code>, <code>s2</code> e <code>s3</code>, que ir\u00e3o compor o cabe\u00e7alho da seguinte forma: <code>for(s1;s2;s3)</code>.</p> <p>O segmento <code>s1</code> representa o espa\u00e7o para inicializa\u00e7\u00e3o/declara\u00e7\u00e3o das vari\u00e1veis de controle. Executa somente uma vez, no in\u00edcio da execu\u00e7\u00e3o do la\u00e7o. Pode ser omitido, caso o programador assim deseje. </p> <p>O segmento <code>s2</code> representa a condi\u00e7\u00e3o de parada do la\u00e7o, avaliada antes de cada itera\u00e7\u00e3o iniciar. Caso o retorno da express\u00e3o l\u00f3gica seja <code>false</code>, as instru\u00e7\u00f5es do corpo do la\u00e7o n\u00e3o ser\u00e3o executas e o controle de execu\u00e7\u00e3o avan\u00e7a para o comando imediatamente posterior o fechamento do la\u00e7o. O segmento pode ser omitido, indicando que o la\u00e7o ir\u00e1 repetir indefinidamente (looping). Se a condi\u00e7\u00e3o especificada for falsa na primeira avalia\u00e7\u00e3o, ent\u00e3o o la\u00e7o n\u00e3o ir\u00e1 executar nenhuma vez as instru\u00e7\u00f5es contidas no corpo.</p> <p>O terceiro segmento, <code>s3</code>, corresponde ao espa\u00e7o para incremento/decremento das vari\u00e1veis de controle. A execu\u00e7\u00e3o das instru\u00e7\u00f5es nele contidas se d\u00e1 ao final de cada itera\u00e7\u00e3o. Assim como os demais,  o segmento <code>s3</code> pode ser omitido.</p> <p>O <code>corpo</code> do la\u00e7o \u00e9 composto por uma ou mais instru\u00e7\u00f5es delimitadas por <code>{ }</code>. Assim como comandos de sele\u00e7\u00e3o, podemos aninhar um la\u00e7o dentro do corpo de outro la\u00e7o de repeti\u00e7\u00e3o. Logo, qualquer instru\u00e7\u00e3o \u00e9 aceita.</p> <p>Vejamos um programa exemplo que imprime no console n\u00fameros inteiros de 1 a 10, constru\u00eddo com aux\u00edlio do la\u00e7o <code>for</code>. No segmento <code>s1</code> temos a instru\u00e7\u00e3o <code>int i=1</code>, que corresponde \u00e0 declara\u00e7\u00e3o e inicializa\u00e7\u00e3o de uma vari\u00e1vel chamada <code>i</code> com valor <code>1</code>. Esta vari\u00e1vel tem escopo restrito ao la\u00e7o, n\u00e3o sendo \"vis\u00edvel\" fora dele. A condi\u00e7\u00e3o <code>i&lt;=10</code> indica que o la\u00e7o ir\u00e1 repetir as instru\u00e7\u00f5es do corpo enquanto o valor da vari\u00e1vel <code>i</code> for inferior ou igual a <code>10</code>. J\u00e1 a instru\u00e7\u00e3o <code>i++</code> indica que a vari\u00e1vel <code>i</code> aumentar\u00e1 em uma unidade a cada itera\u00e7\u00e3o.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    for(int i=1; i&lt;=10; i++){\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n}\n</code></pre> <p>Info</p> <p>O operador <code>++</code> \u00e9 chamado de incremento. Aplica-se a vari\u00e1veis inteiras, aumentando seu valor em 1. Pode ser utilizado pr\u00e9-fixado (antes da vari\u00e1vel) ou p\u00f3s-fixado (ap\u00f3s a vari\u00e1vel). link para diferen\u00e7a A instru\u00e7\u00e3o <code>i++</code> \u00e9 equivalente a <code>i=i+1</code>. </p> <p>Este mesmo programa, com poucas altera\u00e7\u00f5es, poderia contar de 10 a 1. Todas as adequa\u00e7\u00f5es seriam realizadas no cabe\u00e7alho, modificando as instru\u00e7\u00f5es dos tr\u00eas segmentos. Observe o resultado:</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    for(int i=10; i&gt;=1; i--){\n        cout &lt;&lt; i &lt;&lt; endl;\n    }\n}\n</code></pre> <p>Info</p> <p>O operador <code>--</code> \u00e9 chamado de decremento. Aplica-se a vari\u00e1veis inteiras, diminuindo seu valor em 1. Pode ser utilizado pr\u00e9-fixado (antes da vari\u00e1vel) ou p\u00f3s-fixado (ap\u00f3s a vari\u00e1vel). link para diferen\u00e7a A instru\u00e7\u00e3o <code>i--</code> \u00e9 equivalente a <code>i=i-1</code>. </p> <p>O la\u00e7o <code>for</code> permite compor instru\u00e7\u00f5es de cabe\u00e7alho mais complexas. Podemos ter m\u00faltiplas inicializa\u00e7\u00f5es e m\u00faltiplos controles de incremento/decremento de vari\u00e1veis de controle. Ainda sobre a quest\u00e3o do \"pulo\" da vari\u00e1vel de controle, podemos utilizar qualquer quantidade; n\u00e3o estamos limitados a <code>+1</code> ou  <code>-1</code>.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int f = 0;\n    for (int i = 4, j = -2, l = 6; l &gt; j &amp;&amp; i &lt; l; i += 2, l++, j--)\n        f += i + j + l;\n    cout &lt;&lt; f;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/iteracao/#while","title":"While","text":"<p>O la\u00e7o <code>while</code> difere do <code>for</code> por apresentar apenas a condi\u00e7\u00e3o de parada em seu cabe\u00e7alho. Neste aspecto, sua sintaxe \u00e9 mais simples. Contudo, os demais controles devem ser realizados pelo programador no corpo do la\u00e7o (ou fora dele), de modo evitar estados de looping n\u00e3o planejados.</p> <p>Para demonstrar seu funcionamento, reutilizaremos o programa que exibe n\u00fameros de 10 a 1 no console. Comparando com a vers\u00e3o utilizando <code>for</code> percebemos que a declara\u00e7\u00e3o da vari\u00e1vel de controle ocorreu antes da instru\u00e7\u00e3o <code>while</code> para garantir que a vari\u00e1vel exista na interpreta\u00e7\u00e3o da condi\u00e7\u00e3o l\u00f3gica <code>i&lt;=10</code>. J\u00e1 o decremento <code>i--</code> precisou ser adicionado ap\u00f3s a \u00faltima instru\u00e7\u00e3o, para garantir que toda itera\u00e7\u00e3o ir\u00e1 reduzir o valor da vari\u00e1vel em 1 unidade.</p> <p>Assim como o la\u00e7o <code>for</code>, o <code>while</code> pode vir a n\u00e3o executar nenhuma vez caso a condi\u00e7\u00e3o seja falsa na primeira avalia\u00e7\u00e3o.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int i=10;\n    while (i&gt;=1){\n      cout &lt;&lt; i &lt;&lt; endl;\n      i--;\n    }\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/iteracao/#do-while","title":"Do While","text":"<p>A constru\u00e7\u00e3o do <code>do while</code> difere do <code>while</code> unicamente pela avalia\u00e7\u00e3o da condi\u00e7\u00e3o de parada ser realizada ao final da itera\u00e7\u00e3o. Portanto, este la\u00e7o ir\u00e1 garantir, no m\u00ednimo, uma execu\u00e7\u00e3o das instru\u00e7\u00f5es em seu corpo. \u00c9 justamente esta peculiaridade que utilizamos como crit\u00e9rio para sua escolha no c\u00f3digo. </p> <p>Aplicaremos o la\u00e7o <code>do while</code> em nosso j\u00e1 conhecido programa para contar n\u00fameros entre 10 e 1. Fa\u00e7a a compara\u00e7\u00e3o com as vers\u00f5es utilizando <code>while</code> e <code>for</code> para fins de estudo.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    int i=10;\n\n    do {\n        cout &lt;&lt; i &lt;&lt; endl;\n        i--;\n    }\n    while (i&gt;=1);\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/iteracao/#break","title":"Break","text":"<p>O comando <code>break</code> \u00e9 utilizado para interromper a execu\u00e7\u00e3o de la\u00e7os de repeti\u00e7\u00e3o e o comando <code>switch</code>. Sempre que, em um destes comandos, houver um <code>break</code>, a execu\u00e7\u00e3o finaliza naquele ponto e a pr\u00f3xima instru\u00e7\u00e3o ser\u00e1 aquela imediatamente posterior ao final do bloco.</p> <p>Utilizamos <code>break</code> quando  temos inten\u00e7\u00e3o de finalizar o la\u00e7o mesmo que a condi\u00e7\u00e3o especificada em sua constru\u00e7\u00e3o ainda permita novas itera\u00e7\u00f5es.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    for(int i=0;i &lt; 20; i++){\n        if (i&gt;14){\n            break;\n\n        }\n        cout &lt;&lt; i &lt;&lt;endl;\n    }\n\n    cout &lt;&lt;\"FIM\" &lt;&lt;endl;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/iteracao/#continue","title":"Continue","text":"<p>O comando <code>continue</code> diferencia-se do <code>break</code> porque seu efeito \u00e9 ignorar as demais instru\u00e7\u00f5es que sucedem o comando no corpo do la\u00e7o. Sempre que executado, uma nova itera\u00e7\u00e3o inicia, como \u00e9 o caso do programa abaixo.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    for(int i=0;i &lt; 20; i++){\n        if (i%2==0){\n            cout &lt;&lt; i &lt;&lt; \" PAR\" &lt;&lt;endl;\n            continue;\n        }\n        cout &lt;&lt; i &lt;&lt; \" \u00cdMPAR\" &lt;&lt;endl;\n    }\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/cpp/iteracao/#goto","title":"Goto","text":"<p>O comando <code>goto</code> permite realizar um desvio incondicional no fluxo de execu\u00e7\u00e3o das instru\u00e7\u00f5es. Seu uso deve restrito \u00e0quelas situa\u00e7\u00f5es em que nenhum outro comando pode ser utilizado,  sendo, portanto, excepcional.</p> <p>Para utilizar o comando <code>goto</code> \u00e9 preciso marcar instru\u00e7\u00f5es com r\u00f3tulos (labels). Com isso \u00e9 poss\u00edvel \"saltar\" para qualquer linha rotulada. No programa abaixo definimos o r\u00f3tulo <code>fim</code> para a instru\u00e7\u00e3o <code>cout &lt;&lt;\"FIM\" &lt;&lt;endl;</code>, de modo que a linha <code>goto fim;</code> levar\u00e1 a execu\u00e7\u00e3o do programa imediatamente a este ponto.</p> <pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n    for(int i=0;i &lt; 20; i++){\n\n        for(int x=0; x&lt; 15;x++){\n\n            for (int y=0; y &lt; 100; y++){\n                cout &lt;&lt; i &lt;&lt;\" - \" &lt;&lt; x &lt;&lt;\" - \" &lt;&lt; y &lt;&lt; endl;\n                if (y ==10)\n                    goto fim;\n            }\n        }\n        cout &lt;&lt; i &lt;&lt;endl;\n    }\n\n    fim: cout &lt;&lt;\"FIM\" &lt;&lt;endl;\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o"]},{"location":"programacao/js/condicionais/","title":"Desvio de Fluxo","text":"<p>Assim como outras linguagens, em JavaScript, os comandos de desvio de fluxo permitem controlar a execu\u00e7\u00e3o do c\u00f3digo, permitindo que voc\u00ea tome decis\u00f5es com base em condi\u00e7\u00f5es espec\u00edficas ou itere sobre cole\u00e7\u00f5es de dados. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/condicionais/#comando-if","title":"Comando <code>if</code>","text":"<p>O comando <code>if...else</code> permite executar um bloco de c\u00f3digo se uma condi\u00e7\u00e3o especificada for verdadeira e outro bloco de c\u00f3digo se a condi\u00e7\u00e3o for falsa.</p> <p>Observe a sintaxe do comando. Devemos colocar a condi\u00e7\u00e3o entre <code>()</code> e os blocos devem ser especificados com <code>{}</code>.</p> <p><pre><code>if (condi\u00e7\u00e3o) {\n  // Bloco de c\u00f3digo a ser executado se a condi\u00e7\u00e3o for verdadeira\n} else {\n  // Bloco de c\u00f3digo a ser executado se a condi\u00e7\u00e3o for falsa\n}\n</code></pre> Importante a comentar \u00e9 que o bloco <code>else</code> \u00e9 opcional na estrutura. E, havendo necessidade de testar mais de duas op\u00e7\u00f5es, podemos adicionar a estrutura <code>if ... else .. if</code>. Veja um exemplo incorporado em uma p\u00e1gina HTML:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt-br\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;P\u00e1gina com JavaScript&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;select id=\"opcoes\"&gt;\n  &lt;option value=\"A\"&gt;A&lt;/option&gt;\n  &lt;option value=\"B\"&gt;B&lt;/option&gt;\n  &lt;option value=\"C\"&gt;C&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;p&gt;&lt;/p&gt;\n\n&lt;script&gt;\n\n    var lista = document.getElementById(\"opcoes\");\n    var p = document.querySelector(\"p\")\n    lista.addEventListener(\"change\", onListaChange);\n\n    function onListaChange(){\n        let valor = lista.value\n        if (valor==='A'){\n            p.innerText = 'Voce escolheu A'\n        }else if (valor==='B'){\n            p.innerText = 'Voce escolheu B'\n        } else {\n            p.innerText = 'Voce escolheu C'\n        }\n    }\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/condicionais/#comando-switchcase","title":"Comando <code>switch...case</code>","text":"<p>O comando <code>switch...case</code> permite avaliar uma express\u00e3o e executar um bloco de c\u00f3digo com base em valores correspondentes.</p> <pre><code>let valor=parseInt(prompt(\"Informe um valor inteiro\"))\n\nswitch (valor) {\n  case 1:\n    // Bloco de c\u00f3digo a ser executado se a vari\u00e1vel valor for igual a 1\n    break;\n  case 2:\n    // Bloco de c\u00f3digo a ser executado se a vari\u00e1vel valor for igual a 2\n    break;\n  default:\n    // N\u00e3o sendo nenhum dos anteriores, executa este caso padr\u00e3o\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/condicionais/#operador-ternario","title":"Operador tern\u00e1rio","text":"<p>O operador tern\u00e1rio \u00e9 uma forma simplificada de realizar um teste condicional que retorna um valor quando verdadeiro e outro, quando falso.</p> <p>No exemplo a seguir, a vari\u00e1vel <code>resultado</code> vai receber <code>Aprovado</code> ou <code>Tente novamente</code>, a depender do teste condicional <code>nota &gt; 6</code>.</p> <pre><code>const resultado = nota&gt; 6 ? \"Aprovado\" : \"Tente novamente\";\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/excecoes/","title":"Tratamento de Exce\u00e7\u00f5es","text":"<p>O tratamento de exce\u00e7\u00f5es \u00e9 feito usando blocos <code>try...catch</code>. O bloco <code>try</code> corresponde ao conjunto de instru\u00e7\u00f5es que podem lan\u00e7ar exce\u00e7\u00f5es. Os blocos <code>catch</code>, por sua vez, permitem adicionar instru\u00e7\u00f5es a ser executadas caso o erro em quest\u00e3o seja lan\u00e7ado. Opcionalmente podemos colocar o bloco <code>finally</code> na estrutura, o qual executar\u00e1 em todos os cen\u00e1rios (com ou sem lan\u00e7amento da exce\u00e7\u00e3o).</p> <pre><code>try {\n   var x = y / 0;\n} catch (erro) {\n  console.log(\"Ocorreu um erro: \" + erro.message);\n} finally {\n  console.log(\"Este bloco sempre ser\u00e1 executado.\");\n}\n</code></pre> <p>Aqui voc\u00ea pode encontrar a lista de exce\u00e7\u00f5es globais da linguagem JavaScript.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/","title":"Interagindo com o Navegador e DOM","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#objeto-document","title":"Objeto <code>document</code>","text":"<p><code>document</code> representa o modelo de objeto do documento HTML, que \u00e9 a pr\u00f3pria representa\u00e7\u00e3o do conte\u00fado HTML em objetos JavaScript.</p> <p>Ao interagir com este objeto, podemos modificar a estrutura e apresenta\u00e7\u00e3o do documento em resposta a eventos e intera\u00e7\u00f5es do usu\u00e1rio com a p\u00e1gina.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#propriedades","title":"Propriedades","text":"<p>Vejamos algumas das propriedades que o objeto <code>document</code> fornece:</p> <ul> <li><code>document.URL</code>: retorna a URL do documento.</li> <li><code>document.title</code>: permite obter ou definir o t\u00edtulo do documento.</li> <li><code>document.body</code>: retorna a refer\u00eancia ao elemento <code>&lt;body&gt;</code> do documento.</li> <li><code>document.head</code>: retorna a refer\u00eancia ao elemento <code>&lt;head&gt;</code> do documento.</li> <li><code>document.documentElement</code>: retorna o elemento <code>&lt;html&gt;</code> do documento.</li> <li><code>document.domain</code>: Retorna o dom\u00ednio do servidor que serve o documento.</li> <li><code>document.referrer</code>: retorna a URL do documento que levou o usu\u00e1rio a este documento.</li> <li><code>document.forms</code>: retorna uma cole\u00e7\u00e3o de todos os elementos <code>&lt;form&gt;</code> no documento.</li> <li><code>document.images</code>: retorna uma cole\u00e7\u00e3o de todos os elementos <code>&lt;img&gt;</code> no documento.</li> <li><code>document.links</code>: retorna uma cole\u00e7\u00e3o de todos os elementos <code>&lt;a&gt;</code> que t\u00eam um atributo <code>href</code> no documento.</li> <li><code>document.scripts</code>: retorna uma cole\u00e7\u00e3o de todos os elementos <code>&lt;script&gt;</code> no documento.</li> </ul> <p>Outras propriedades est\u00e3o a disposi\u00e7\u00e3o al\u00e9m destes. Voc\u00ea pode encontrar o detalhamento de cada um no site Developers Mozilla.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#metodos","title":"M\u00e9todos","text":"<ul> <li> <p><code>document.getElementById(id)</code></p> <p>Retorna uma refer\u00eancia ao elemento que possui o atributo <code>id</code> com o valor especificado.</p> <pre><code>var elemento = document.getElementById(\"logotipo\");\n</code></pre> </li> <li> <p><code>document.getElementsByClassName(className)</code>: </p> <p>Retorna uma cole\u00e7\u00e3o de elementos que t\u00eam, no atributo <code>class</code>, o nome da classe informada como par\u00e2metro. Observe o exemplo.</p> <pre><code>var elementos = document.getElementsByClassName(\"cm-line\")\n\nfor (const e of elementos){\n   console.log(e)\n}\n</code></pre> </li> <li> <p><code>document.getElementsByName(name)</code>: </p> <p>Retorna uma cole\u00e7\u00e3o de elementos cujo atributo <code>name</code> cont\u00e9m o valor informado como par\u00e2metro.</p> <pre><code>var elementos = document.getElementsByName(\"viewport\")\n</code></pre> </li> <li> <p><code>document.getElementsByTagName(tagName)</code>: </p> <p>Retorna uma cole\u00e7\u00e3o de todos os elementos da tag indicada por par\u00e2metro.</p> <pre><code>var elementos = document.getElementsByTagName(\"div\")\n</code></pre> </li> <li> <p><code>document.querySelector(selector)</code></p> <p>\u00c9 uma fun\u00e7\u00e3o que permite selecionar um elemento HTML em uma p\u00e1gina usando um seletor CSS v\u00e1lido. O primeiro elemento encontrado, que condiz com o seletor, ser\u00e1 retornado pelo m\u00e9todo.  </p> <p>O m\u00e9todo <code>querySelector()</code> aceita um par\u00e2metro, que \u00e9 uma string que representa o seletor CSS. Este seletor pode ser um ID, uma classe, um tipo de elemento, um seletor de atributo ou uma combina\u00e7\u00e3o deles. </p> <p>No exemplo abaixo, estamos buscando a primeira ocorr\u00eancia de elemento da classe <code>importante</code> no documento.</p> <pre><code>var elemento = document.querySelector(\".importante\");\n</code></pre> <p>Se houver interesse em retornar todos os elementos que atendem ao seletor, devemos utilizar o m\u00e9todo <code>document.querySelectorAll()</code>, iterando sobre o retorno.</p> </li> <li> <p><code>document.createElement(tagName)</code>: </p> <p>Cria um novo elemento HTML especificado pelo nome da tag informado como par\u00e2metro.</p> <pre><code>   let parag = document.createElement(\"p\")\n   parag.textContent = texto\n   document.body.appendChild(parag)\n</code></pre> </li> <li> <p><code>document.write(text)</code>:        Escreve conte\u00fado HTML diretamente no documento.</p> <pre><code>   document.write(\"&lt;h2&gt;Teste&lt;/h2&gt;\")\n</code></pre> </li> <li> <p><code>document.addEventListener(event, function)</code>: </p> <p>Adiciona um ouvinte (listener) de evento a um elemento do documento. Isso permite executar a\u00e7\u00f5es em resposta a eventos disparados.</p> <pre><code>   let botao = document.getElementById(\"btn_calcular\")\n   botao.addEventListener(\"click\",() =&gt; {document.alert(\"Ouvi seu evento de click\")})\n</code></pre> </li> <li> <p><code>document.removeEventListener(event, function)</code>: </p> </li> </ul> <p>Remove um ouvinte (listener) de evento de um elemento do documento previamente configurado.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#tipos-de-eventos","title":"Tipos de eventos","text":"<p>Eventos s\u00e3o o resultado de a\u00e7\u00f5es de a\u00e7\u00f5es do usu\u00e1rio sobre os elementos da p\u00e1gina ou mesmo estados do pr\u00f3prio sistema e navegador, por exemplo.</p> <p>Os eventos oriundos de tais condi\u00e7\u00f5es s\u00e3o emitidos e podem ser processados por fun\u00e7\u00f5es espec\u00edficas, escritas pelo desenvolvedor.</p> <p>Os eventos mais comuns associados ao objeto <code>document</code> incluem:</p> <ul> <li><code>DOMContentLoaded</code>: \u00c9 acionado quando o HTML do documento foi completamente carregado e analisado, sem aguardar por folhas de estilo, imagens e subframes para concluir o carregamento.</li> <li><code>load</code>: \u00c9 acionado quando todo o conte\u00fado do documento, incluindo imagens e folhas de estilo, foi completamente carregado.</li> <li><code>click</code>: \u00c9 acionado quando um elemento \u00e9 clicado pelo usu\u00e1rio.</li> <li><code>keydown</code>, <code>keyup</code>, <code>keypress</code>: S\u00e3o acionados quando uma tecla \u00e9 pressionada e liberada.</li> </ul> <p>=====================</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#objeto-window","title":"Objeto Window","text":"<p>O objeto <code>window</code> \u00e9 um dos principais objetos do navegador da web e representa a janela do navegador que cont\u00e9m o documento HTML.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#propriedades_1","title":"Propriedades:","text":"<ul> <li> <p><code>window.document</code>: Retorna o documento HTML carregado na janela.</p> </li> <li> <p><code>window.location</code>: Retorna um objeto contendo informa\u00e7\u00f5es sobre a URL da p\u00e1gina.</p> </li> <li> <p><code>window.navigator</code>: Retorna um objeto contendo informa\u00e7\u00f5es sobre o navegador.</p> </li> <li> <p><code>window.innerWidth</code> e <code>window.innerHeight</code>: Retornam a largura e a altura internas (em pixels) da janela do navegador, incluindo barras de rolagem, mas excluindo a moldura do navegador.</p> </li> <li> <p><code>window.outerWidth</code> e <code>window.outerHeight</code>: Retornam a largura e a altura externas (em pixels) da janela do navegador, incluindo barras de rolagem e a moldura do navegador.</p> </li> <li> <p><code>window.screen</code>: Retorna um objeto contendo informa\u00e7\u00f5es sobre a tela do dispositivo.</p> </li> <li> <p><code>window.history</code>: Retorna o objeto de hist\u00f3rico do navegador, permitindo navega\u00e7\u00e3o entre as p\u00e1ginas visitadas.</p> </li> <li> <p><code>window.localStorage</code> e <code>window.sessionStorage</code>: Oferecem acesso aos mecanismos de armazenamento local e de sess\u00e3o do navegador, respectivamente, permitindo armazenar dados localmente no navegador do usu\u00e1rio.</p> </li> <li> <p><code>window.frames</code>: Retorna uma cole\u00e7\u00e3o de objetos representando todas as frames contidas na janela.</p> </li> <li> <p><code>window.parent</code>: Retorna a janela pai da janela atual, \u00fatil quando uma janela abre outra.</p> </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#metodos_1","title":"M\u00e9todos:","text":"<ul> <li> <p><code>window.alert(message)</code>: Exibe um di\u00e1logo de alerta com o texto especificado.</p> </li> <li> <p><code>window.confirm(message)</code>: Exibe um di\u00e1logo de confirma\u00e7\u00e3o com o texto especificado, retornando <code>true</code> se o usu\u00e1rio clicar em \"OK\" e <code>false</code> se clicar em \"Cancelar\".</p> </li> <li> <p><code>window.prompt(message, default)</code>: Exibe um di\u00e1logo solicitando que o usu\u00e1rio insira um texto, com uma mensagem opcional e um valor padr\u00e3o opcional.</p> </li> <li> <p><code>window.open(url, name, features)</code>:  Abre uma nova janela do navegador com o URL especificado.</p> </li> <li> <p><code>window.close()</code>: Fecha a janela do navegador atual.</p> </li> <li> <p><code>window.setTimeout(function, milliseconds)</code>: Executa uma fun\u00e7\u00e3o depois de um certo n\u00famero de milissegundos.</p> </li> <li> <p><code>window.setInterval(function, milliseconds)</code>: Executa uma fun\u00e7\u00e3o repetidamente, com um intervalo de tempo especificado entre cada execu\u00e7\u00e3o.</p> </li> <li> <p><code>window.clearTimeout(timeoutID)</code> e <code>window.clearInterval(intervalID)</code>: Cancelam a execu\u00e7\u00e3o de uma fun\u00e7\u00e3o agendada com <code>setTimeout()</code> ou <code>setInterval()</code>.</p> </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/funcoes-dom/#eventos","title":"Eventos:","text":"<p>Alguns dos eventos mais comuns associados ao objeto <code>window</code> incluem:</p> <ul> <li><code>load</code>: \u00c9 acionado quando o documento e todos os recursos associados foram completamente carregados.</li> <li><code>resize</code>: \u00c9 acionado quando a janela do navegador \u00e9 redimensionada.</li> <li><code>scroll</code>: \u00c9 acionado quando o usu\u00e1rio rola a p\u00e1gina.</li> <li><code>beforeunload</code> e <code>unload</code>: S\u00e3o acionados quando o documento est\u00e1 prestes a ser descarregado ou completamente descarregado, respectivamente.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/lacos/","title":"La\u00e7os de Repeti\u00e7\u00e3o","text":"<p>La\u00e7os de repeti\u00e7\u00e3o s\u00e3o estruturas de controle que permitem criar itera\u00e7\u00f5es, ou seja, repeti\u00e7\u00e3o de instru\u00e7\u00f5es. No Javascript, as estruturas de repeti\u00e7\u00e3o s\u00e3o o <code>for</code>, <code>while</code> e <code>do while</code>. Abaixo, seguem detalhes e exemplos destes diferentes la\u00e7os de repeti\u00e7\u00e3o.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/lacos/#for-loop","title":"<code>for</code> loop","text":"<p>O comando <code>for</code> \u00e9 usado para iterar sobre uma lista de itens por um n\u00famero espec\u00edfico de vezes. Na estrutura do comando, temos <code>inicializa\u00e7\u00e3o</code>, que especifica os valores iniciais das vari\u00e1veis de controle. Em <code>condi\u00e7\u00e3o</code>, colocamos um teste condicional para determinar a condi\u00e7\u00e3o de parada do la\u00e7o. Finalmente, <code>incremento</code> determina a altera\u00e7\u00e3o das vari\u00e1veis de controle a cada itera\u00e7\u00e3o.</p> <pre><code>for (inicializa\u00e7\u00e3o; condi\u00e7\u00e3o; incremento) {\n  // Bloco de c\u00f3digo a ser repetido\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/lacos/#while-loop","title":"<code>while</code> loop","text":"<p>O comando <code>while</code> executa um bloco de c\u00f3digo enquanto uma condi\u00e7\u00e3o especificada for verdadeira.</p> <pre><code>while (condi\u00e7\u00e3o) {\n  // Bloco de c\u00f3digo a ser repetido enquanto a condi\u00e7\u00e3o for verdadeira\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/lacos/#dowhile-loop","title":"<code>do...while</code> loop","text":"<p>O comando <code>do...while</code> \u00e9 semelhante ao <code>while</code>, mas o bloco de c\u00f3digo \u00e9 executado pelo menos uma vez antes da verifica\u00e7\u00e3o da condi\u00e7\u00e3o.</p> <pre><code>do {\n  // Bloco de c\u00f3digo a ser executado pelo menos uma vez\n} while (condi\u00e7\u00e3o);\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/lacos/#break-e-continue","title":"<code>break</code> e <code>continue</code>","text":"<p><code>break</code> \u00e9 usado para interromper a execu\u00e7\u00e3o de um loop, enquanto <code>continue</code> \u00e9 usado para pular para a pr\u00f3xima itera\u00e7\u00e3o do loop.</p> <pre><code>for (var i = 0; i &lt; 10; i++) {\n  if (i === 5) {\n    break; // Interrompe o loop quando i \u00e9 igual a 5\n  }\n  if (i === 3) {\n    continue; // Pula para a pr\u00f3xima itera\u00e7\u00e3o quando i \u00e9 igual a 3\n  }\n  console.log(i);\n}\n</code></pre> <p>Esses s\u00e3o os principais comandos de desvio de fluxo em JavaScript, usados para controlar a execu\u00e7\u00e3o do c\u00f3digo com base em condi\u00e7\u00f5es espec\u00edficas e iterar sobre cole\u00e7\u00f5es de dados.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/operadores/","title":"Operadores","text":"<p>Operadores s\u00e3os s\u00edmbolos utilizados na linguagem JavaScript para representar opera\u00e7\u00f5es aritm\u00e9ticas, de compara\u00e7\u00e3o, atribui\u00e7\u00e3o, concatena\u00e7\u00e3o e l\u00f3gicas.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/operadores/#operadores-aritmeticos","title":"Operadores Aritm\u00e9ticos","text":"<ul> <li>Adi\u00e7\u00e3o (+): Soma dois valores.</li> <li>Subtra\u00e7\u00e3o (-): Subtrai o segundo valor do primeiro.</li> <li>Multiplica\u00e7\u00e3o (*): Multiplica dois valores.</li> <li>Divis\u00e3o (/): Divide o primeiro valor pelo segundo.</li> <li>Resto da Divis\u00e3o (%): Retorna o resto da divis\u00e3o inteira do primeiro valor pelo segundo.</li> <li>Incremento (++): Incrementa o valor de uma vari\u00e1vel em 1.</li> <li>Decremento (--): Decrementa o valor de uma vari\u00e1vel em 1.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/operadores/#operadores-de-atribuicao","title":"Operadores de Atribui\u00e7\u00e3o","text":"<ul> <li>Atribui\u00e7\u00e3o Simples (=): Atribui um valor \u00e0 vari\u00e1vel.</li> <li>Atribui\u00e7\u00e3o com Adi\u00e7\u00e3o (+=): Adiciona o valor \u00e0 vari\u00e1vel e atribui o resultado.</li> <li>Atribui\u00e7\u00e3o com Subtra\u00e7\u00e3o (-=): Subtrai o valor da vari\u00e1vel e atribui o resultado.</li> <li>Atribui\u00e7\u00e3o com Multiplica\u00e7\u00e3o (*=): Multiplica o valor da vari\u00e1vel e atribui o resultado.</li> <li>Atribui\u00e7\u00e3o com Divis\u00e3o (/=): Divide o valor da vari\u00e1vel e atribui o resultado.</li> <li>Atribui\u00e7\u00e3o com Resto da Divis\u00e3o (%=): Calcula o resto da divis\u00e3o e atribui o resultado.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/operadores/#operadores-de-comparacao","title":"Operadores de Compara\u00e7\u00e3o","text":"<ul> <li>Igual (==): Verifica se dois valores s\u00e3o iguais.</li> <li>Estritamente Igual (===): Verifica se dois valores s\u00e3o iguais em valor e tipo.</li> <li>Diferente (!=): Verifica se dois valores n\u00e3o s\u00e3o iguais.</li> <li>Estritamente Diferente (!==): Verifica se dois valores n\u00e3o s\u00e3o iguais em valor ou tipo.</li> <li>Maior que (&gt;): Verifica se o primeiro valor \u00e9 maior que o segundo.</li> <li>Maior ou Igual (&gt;=): Verifica se o primeiro valor \u00e9 maior ou igual ao segundo.</li> <li>Menor que (&lt;): Verifica se o primeiro valor \u00e9 menor que o segundo.</li> <li>Menor ou Igual (&lt;=): Verifica se o primeiro valor \u00e9 menor ou igual ao segundo.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/operadores/#operadores-logicos","title":"Operadores L\u00f3gicos","text":"<ul> <li>AND l\u00f3gico (&amp;&amp;): Retorna verdadeiro se ambas as express\u00f5es forem verdadeiras.</li> <li>OR l\u00f3gico (||): Retorna verdadeiro se pelo menos uma das express\u00f5es for verdadeira.</li> <li>NOT l\u00f3gico (!): Inverte o valor da express\u00e3o, se era verdadeira torna-se falsa e vice-versa.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/operadores/#operadores-de-concatenacao","title":"Operadores de Concatena\u00e7\u00e3o","text":"<ul> <li>Concatena\u00e7\u00e3o (+): Concatena duas strings.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/","title":"Promises","text":"<p>Promises s\u00e3o uma abstra\u00e7\u00e3o em JavaScript para representar opera\u00e7\u00f5es ass\u00edncronas, permitindo que o c\u00f3digo trabalhe com resultados de opera\u00e7\u00f5es que podem ainda n\u00e3o estar dispon\u00edveis. Elas ajudam a evitar o famoso \"callback hell\" e a escrever c\u00f3digo mais leg\u00edvel e manej\u00e1vel.  </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#conceitos-basicos","title":"Conceitos B\u00e1sicos","text":"<p>Uma promise \u00e9 um objeto que representa a eventual conclus\u00e3o (ou falha) de uma opera\u00e7\u00e3o ass\u00edncrona e seu valor resultante. Uma promise pode estar em um dos tr\u00eas estados:</p> <ul> <li>Pending (Pendente): Estado inicial, que n\u00e3o foi realizada nem rejeitada.</li> <li>Fulfilled (Realizada): A opera\u00e7\u00e3o foi conclu\u00edda com sucesso.</li> <li>Rejected (Rejeitada): A opera\u00e7\u00e3o falhou.</li> </ul> <p>Para criar uma promise, utilizamos o construtor <code>Promise</code> que aceita uma fun\u00e7\u00e3o de executor com dois par\u00e2metros: <code>resolve</code> e <code>reject</code>.</p> <pre><code>const minhaPromise = new Promise((resolve, reject) =&gt; {\n  // Opera\u00e7\u00e3o ass\u00edncrona\n  let sucesso = true;\n\n  if (sucesso) {\n    resolve(\"Opera\u00e7\u00e3o realizada com sucesso!\");\n  } else {\n    reject(\"Opera\u00e7\u00e3o falhou.\");\n  }\n});\n</code></pre> <p>J\u00e1 para tratar do resultado de uma promise, usamos os m\u00e9todos <code>then</code>, <code>catch</code> e <code>finally</code>.</p> <ul> <li><code>then</code></li> </ul> <p>O m\u00e9todo <code>then</code> \u00e9 utilizado para lidar com o sucesso da promise.</p> <pre><code>minhaPromise.then((valor) =&gt; {\n  console.log(valor); // \"Opera\u00e7\u00e3o realizada com sucesso!\"\n});\n</code></pre> <ul> <li><code>catch</code></li> </ul> <p>O m\u00e9todo <code>catch</code> \u00e9 usado para lidar com a falha da promise.</p> <pre><code>minhaPromise.catch((erro) =&gt; {\n  console.log(erro); // \"Opera\u00e7\u00e3o falhou.\"\n});\n</code></pre> <ul> <li><code>finally</code></li> </ul> <p>O m\u00e9todo <code>finally</code> \u00e9 chamado quando a promise \u00e9 conclu\u00edda, independente de ser realizada ou rejeitada.</p> <pre><code>minhaPromise.finally(() =&gt; {\n  console.log(\"Opera\u00e7\u00e3o conclu\u00edda.\"); // Ser\u00e1 executado sempre\n});\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#funcao-fetch","title":"Fun\u00e7\u00e3o <code>fetch</code>","text":"<p>A fun\u00e7\u00e3o <code>fetch</code> permite fazer requisi\u00e7\u00f5es HTTP ass\u00edncronas para acessar e manipular recursos pela rede. Ela retorna uma <code>Promise</code> que resolve com a resposta da requisi\u00e7\u00e3o, facilitando o trabalho com dados de APIs, servidores e outros recursos web <sup>1</sup>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#sintaxe","title":"Sintaxe","text":"<pre><code>fetch(url, [options])\n</code></pre> <ul> <li><code>url</code> (obrigat\u00f3rio): O recurso que deseja buscar.</li> <li><code>options</code> (opcional): Um objeto contendo qualquer um dos seguintes par\u00e2metros:</li> </ul> <p>Alguns dos poss\u00edvel valores para <code>options</code> s\u00e3o:</p> <ul> <li>method: O m\u00e9todo HTTP a ser usado (e.g., <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>). O padr\u00e3o \u00e9 <code>GET</code>.</li> <li>headers: Um objeto contendo cabe\u00e7alhos HTTP a serem enviados com a requisi\u00e7\u00e3o.</li> <li>body: O corpo da requisi\u00e7\u00e3o. Pode ser uma string, um objeto, um <code>FormData</code>, etc.</li> <li>mode: O modo da requisi\u00e7\u00e3o (e.g., <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>).</li> <li>credentials: Indica se os cookies devem ser enviados com a requisi\u00e7\u00e3o (<code>omit</code>, <code>same-origin</code>, <code>include</code>).</li> <li>cache: O modo de cache (e.g., <code>default</code>, <code>no-store</code>, <code>reload</code>, <code>no-cache</code>, <code>force-cache</code>, <code>only-if-cached</code>).</li> <li>redirect: O modo de redirecionamento (<code>follow</code>, <code>error</code>, <code>manual</code>).</li> <li>referrer: Referrer da requisi\u00e7\u00e3o (<code>client</code>, URL, ou vazio).</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#exemplos-de-uso","title":"Exemplos de Uso","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#requisicao-simples-get","title":"Requisi\u00e7\u00e3o Simples (GET)","text":"<pre><code>fetch('https://api.exemplo.com/dados')\n  .then(response =&gt; response.json())\n  .then(data =&gt; console.log(data))\n  .catch(error =&gt; console.error('Erro:', error));\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#requisicao-com-parametros-post","title":"Requisi\u00e7\u00e3o com Par\u00e2metros (POST)","text":"<pre><code>fetch('https://api.exemplo.com/dados', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    chave: 'valor'\n  })\n})\n  .then(response =&gt; response.json())\n  .then(data =&gt; console.log(data))\n  .catch(error =&gt; console.error('Erro:', error));\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#tratamento-da-resposta","title":"Tratamento da Resposta","text":"<p>O objeto <code>Response</code> retornado pela <code>fetch</code> possui diversos m\u00e9todos para processar os dados da resposta:</p> <ul> <li>text(): Retorna uma <code>Promise</code> que resolve com o corpo da resposta como uma string.</li> <li>json(): Retorna uma <code>Promise</code> que resolve com o corpo da resposta como um objeto JSON.</li> <li>blob(): Retorna uma <code>Promise</code> que resolve com o corpo da resposta como um Blob.</li> <li>formData(): Retorna uma <code>Promise</code> que resolve com o corpo da resposta como um FormData.</li> <li>arrayBuffer(): Retorna uma <code>Promise</code> que resolve com o corpo da resposta como um ArrayBuffer.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/promises/#exemplo-processar-resposta-json","title":"Exemplo: Processar Resposta JSON","text":"<pre><code>fetch('https://api.exemplo.com/dados')\n  .then(response =&gt; {\n    if (!response.ok) {\n      throw new Error('Erro na rede: ' + response.statusText);\n    }\n    return response.json();\n  })\n  .then(data =&gt; console.log(data))\n  .catch(error =&gt; console.error('Erro:', error));\n</code></pre> <p>Dica</p> <p>Podemos utilizar o servi\u00e7o https://jsonplaceholder.typicode.com para consumir uma API e testar nosso c\u00f3digo com Promises.</p> <ol> <li> <p>DigitalOcean. How to use the javascript fetch api to get data. 2024. URL: https://www.digitalocean.com/community/tutorials/how-to-use-the-javascript-fetch-api-to-get-data.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/referencias/","title":"Referencias","text":""},{"location":"programacao/js/temp/","title":"Objecto Navigator","text":"<p>O objeto <code>navigator</code> \u00e9 um dos principais objetos fornecidos pelo navegador da web em JavaScript. Ele fornece informa\u00e7\u00f5es detalhadas sobre o navegador e o ambiente em que o c\u00f3digo JavaScript est\u00e1 sendo executado. Aqui est\u00e1 uma descri\u00e7\u00e3o detalhada deste objeto:</p>"},{"location":"programacao/js/temp/#propriedades-principais","title":"Propriedades Principais:","text":""},{"location":"programacao/js/temp/#1-navigatoruseragent","title":"1. <code>navigator.userAgent</code>:","text":"<ul> <li>Retorna a string do agente do usu\u00e1rio, que cont\u00e9m informa\u00e7\u00f5es sobre o navegador, vers\u00e3o e sistema operacional.</li> </ul>"},{"location":"programacao/js/temp/#2-navigatorappname","title":"2. <code>navigator.appName</code>:","text":"<ul> <li>Retorna o nome do navegador.</li> </ul>"},{"location":"programacao/js/temp/#3-navigatorappversion","title":"3. <code>navigator.appVersion</code>:","text":"<ul> <li>Retorna a vers\u00e3o completa do navegador.</li> </ul>"},{"location":"programacao/js/temp/#4-navigatorplatform","title":"4. <code>navigator.platform</code>:","text":"<ul> <li>Retorna a plataforma do sistema operacional em que o navegador est\u00e1 sendo executado.</li> </ul>"},{"location":"programacao/js/temp/#5-navigatorlanguage","title":"5. <code>navigator.language</code>:","text":"<ul> <li>Retorna o idioma preferido do usu\u00e1rio, normalmente definido nas configura\u00e7\u00f5es do navegador.</li> </ul>"},{"location":"programacao/js/temp/#6-navigatorcookieenabled","title":"6. <code>navigator.cookieEnabled</code>:","text":"<ul> <li>Retorna um booleano indicando se os cookies est\u00e3o habilitados no navegador.</li> </ul>"},{"location":"programacao/js/temp/#7-navigatoronline","title":"7. <code>navigator.onLine</code>:","text":"<ul> <li>Retorna um booleano indicando se o navegador est\u00e1 online ou offline.</li> </ul>"},{"location":"programacao/js/temp/#8-navigatorplugins","title":"8. <code>navigator.plugins</code>:","text":"<ul> <li>Retorna uma lista de plugins instalados no navegador.</li> </ul>"},{"location":"programacao/js/temp/#metodos-principais","title":"M\u00e9todos Principais:","text":"<ol> <li><code>navigator.geolocation.getCurrentPosition()</code>:</li> <li> <p>Retorna a localiza\u00e7\u00e3o atual do usu\u00e1rio.</p> </li> <li> <p><code>navigator.getBattery()</code>:</p> </li> <li> <p>Retorna uma promessa que resolve com informa\u00e7\u00f5es sobre o estado da bateria do dispositivo.</p> </li> <li> <p><code>navigator.mediaDevices.getUserMedia()</code>:</p> </li> <li> <p>Permite acessar a c\u00e2mera e o microfone do dispositivo.</p> </li> <li> <p><code>navigator.vibrate()</code>:</p> </li> <li>Ativa a vibra\u00e7\u00e3o do dispositivo.</li> </ol>"},{"location":"programacao/js/temp/#exemplo-de-uso","title":"Exemplo de Uso:","text":"<pre><code>console.log(\"Nome do navegador: \" + navigator.appName);\nconsole.log(\"Vers\u00e3o do navegador: \" + navigator.appVersion);\nconsole.log(\"Plataforma: \" + navigator.platform);\nconsole.log(\"Idioma: \" + navigator.language);\nconsole.log(\"Cookies habilitados: \" + navigator.cookieEnabled);\nconsole.log(\"Online: \" + navigator.onLine);\n</code></pre>"},{"location":"programacao/js/temp/#observacoes","title":"Observa\u00e7\u00f5es:","text":"<ul> <li>O objeto <code>navigator</code> \u00e9 uma parte essencial do desenvolvimento de aplicativos web, pois fornece informa\u00e7\u00f5es sobre o ambiente do usu\u00e1rio, como o navegador e o sistema operacional.</li> <li>Ele pode ser usado para personalizar a experi\u00eancia do usu\u00e1rio com base em suas prefer\u00eancias e configura\u00e7\u00f5es de navegador.</li> <li>Al\u00e9m disso, o objeto <code>navigator</code> oferece acesso a recursos do dispositivo, como geolocaliza\u00e7\u00e3o, c\u00e2mera e microfone, permitindo a cria\u00e7\u00e3o de aplicativos web mais interativos e sofisticados.</li> </ul> <p>===========</p> <p>O objeto <code>screen</code> \u00e9 uma propriedade do objeto <code>window</code> em navegadores da web, fornecendo informa\u00e7\u00f5es sobre a tela do dispositivo em que a janela do navegador est\u00e1 sendo exibida. Aqui est\u00e1 uma descri\u00e7\u00e3o detalhada deste objeto:</p>"},{"location":"programacao/js/temp/#propriedades-principais_1","title":"Propriedades Principais:","text":"<ol> <li><code>screen.width</code>:</li> <li> <p>Retorna a largura da tela em pixels.</p> </li> <li> <p><code>screen.height</code>:</p> </li> <li> <p>Retorna a altura da tela em pixels.</p> </li> <li> <p><code>screen.availWidth</code>:</p> </li> <li> <p>Retorna a largura dispon\u00edvel da tela em pixels, excluindo barras de ferramentas do sistema, como a barra de tarefas do Windows.</p> </li> <li> <p><code>screen.availHeight</code>:</p> </li> <li> <p>Retorna a altura dispon\u00edvel da tela em pixels, excluindo barras de ferramentas do sistema.</p> </li> <li> <p><code>screen.orientation</code> (propriedade somente leitura):</p> </li> <li>Retorna um objeto <code>ScreenOrientation</code> que descreve a orienta\u00e7\u00e3o da tela.</li> </ol>"},{"location":"programacao/js/temp/#exemplo-de-uso_1","title":"Exemplo de Uso:","text":"<pre><code>console.log(\"Largura da tela: \" + screen.width + \" pixels\");\nconsole.log(\"Altura da tela: \" + screen.height + \" pixels\");\nconsole.log(\"Largura dispon\u00edvel da tela: \" + screen.availWidth + \" pixels\");\nconsole.log(\"Altura dispon\u00edvel da tela: \" + screen.availHeight + \" pixels\");\nconsole.log(\"Orienta\u00e7\u00e3o da tela: \" + screen.orientation.type);\n</code></pre>"},{"location":"programacao/js/temp/#observacoes_1","title":"Observa\u00e7\u00f5es:","text":"<ul> <li>O objeto <code>screen</code> fornece informa\u00e7\u00f5es \u00fateis sobre as caracter\u00edsticas f\u00edsicas da tela do dispositivo, como largura, altura e disponibilidade de espa\u00e7o.</li> <li>Essas informa\u00e7\u00f5es podem ser usadas para criar layouts responsivos e adaptar o conte\u00fado da p\u00e1gina com base nas dimens\u00f5es da tela do usu\u00e1rio.</li> <li>A propriedade <code>screen.orientation</code> fornece informa\u00e7\u00f5es sobre a orienta\u00e7\u00e3o atual da tela, permitindo ajustar o layout e o conte\u00fado da p\u00e1gina de acordo com a orienta\u00e7\u00e3o do dispositivo.</li> </ul> <p>https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events</p> <p>https://developer.mozilla.org/en-US/docs/Web/Events/Creating_and_triggering_events</p> <p>https://www.aleksandrhovhannisyan.com/blog/javascript-promise-tricks/</p>"},{"location":"programacao/js/variaveis/","title":"Vari\u00e1veis, Constantes e Escopos","text":"<p>Em JavaScript, temos a disposi\u00e7\u00e3o tr\u00eas formas de declarar vari\u00e1veis: <code>var</code>, <code>let</code>, e <code>const</code>.</p> <ul> <li> <p><code>var</code>:  As vari\u00e1veis declaradas com <code>var</code> t\u00eam escopo de fun\u00e7\u00e3o ou escopo global, o que significa que podem ser acessadas de dentro da fun\u00e7\u00e3o em que foram declaradas ou globalmente dentro do script. Mesmo declaradas no meio ou no final do escopo da fun\u00e7\u00e3o, elas s\u00e3o automaticamente postas no in\u00edcio pelo interpretador.</p> </li> <li> <p><code>let</code>: As vari\u00e1veis declaradas com <code>let</code> t\u00eam escopo de bloco, o que significa que s\u00e3o acess\u00edveis apenas dentro do bloco em que foram declaradas.</p> </li> <li> <p><code>const</code>: Vari\u00e1veis declaradas com <code>const</code> tamb\u00e9m t\u00eam escopo de bloco e s\u00e3o usadas para declarar valores constantes que n\u00e3o podem ser alterados ap\u00f3s a inicializa\u00e7\u00e3o.</p> </li> </ul> <pre><code>var x = 10;\nconsole.log(x);\n\n\nlet y = 20;\nconsole.log(y); \n\n\nconst z = 30;//n\u00e3o posso mudar o valor de z a partir deste momento\nconsole.log(z); \n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/variaveis/#escopos","title":"Escopos","text":"<p>O escopo em JavaScript define onde as vari\u00e1veis s\u00e3o acess\u00edveis. Existem dois tipos principais de escopos: escopo global e escopo local.</p> <ul> <li> <p>Escopo Global: As vari\u00e1veis globais s\u00e3o acess\u00edveis em qualquer lugar do script.</p> </li> <li> <p>Escopo Local: As vari\u00e1veis locais s\u00e3o acess\u00edveis apenas dentro da fun\u00e7\u00e3o ou bloco em que foram declaradas.</p> </li> </ul> <pre><code>// Escopo global: podemos acessar a partir de qualquer ponto do c\u00f3digo\nvar valor_global = 100;\n\nfunction myFunction() {\n  // Escopo local: restrito a esta fun\u00e7\u00e3o\n  var valor_local = 200;\n  console.log(valor_global); // Acesso \u00e0 vari\u00e1vel global\n  console.log(valor_local); // Acesso \u00e0 vari\u00e1vel local\n}\n\nconsole.log(valor_local)//ERRO: vari\u00e1vel n\u00e3o existe neste escopo\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","JavaScript"]},{"location":"programacao/js/exercicios/exercicios-1/","title":"Revis\u00e3o","text":""},{"location":"programacao/js/exercicios/exercicios-1/#lista-de-exercicios-i","title":"Lista de Exerc\u00edcios I","text":"<p>Nesta lista de exerc\u00edcios vamos treinar conceitos b\u00e1sicos da linguagem de programa\u00e7\u00e3o JavaScript. Utilize como refer\u00eancia o Guia de JavaScript da  Mozilla Developer Network</p> <ol> <li> <p>Desenvolva uma fun\u00e7\u00e3o para verificar se um determinado n\u00famero \u00e9 par ou \u00edmpar.</p> </li> <li> <p>Desenvolva uma fun\u00e7\u00e3o que recebe como par\u00e2metro uma lista de n\u00fameros. Internamente, calcula a m\u00e9dia aritm\u00e9tica e a devolve como retorno.</p> </li> <li> <p>Desenvolva uma fun\u00e7\u00e3o que permita contar a quantidade de vogais de uma string informada por par\u00e2metro. A quantidade deve ser retornada pela fun\u00e7\u00e3o.</p> </li> <li> <p>Desenvolva uma fun\u00e7\u00e3o para reverter uma string informada por par\u00e2metro. A string invertida deve ser o retorno da fun\u00e7\u00e3o.</p> </li> <li> <p>Crie um c\u00f3digo que adiciona 5 produtos a um conjunto.</p> </li> <li> <p>Crie um c\u00f3digo que declara um dicion\u00e1rio cuja chave \u00e9 o nome do dia da semana e o respectivo valor corresponde ao inteiro que representa o dia (iniciando em 1 no domingo). Utilize o c\u00f3digo para iterar sobre as chaves e sobre os valores do dicion\u00e1rio.</p> </li> </ol>"},{"location":"programacao/js/exercicios/exercicios-1/#para-as-demais-atividades-voce-deve-ter-disponivel-um-documento-html","title":"Para as demais atividades, voc\u00ea deve ter dispon\u00edvel um documento HTML","text":"<ol> <li> <p>Adicione um bot\u00e3o ao documento HTML. Ao clicar sobre, voc\u00ea deve adicionar um novo par\u00e1grafo com o conte\u00fado informado em um input, que tamb\u00e9m dever\u00e1 estar dispon\u00edvel no documento.</p> </li> <li> <p>Adicione um rel\u00f3gio digital ao seu HTML. Pesquise a fun\u00e7\u00e3o <code>setInterval</code> para desenvolver a atividade.</p> </li> <li> <p>Adicione um c\u00f3digo que troca a imagem dentre 4 dispon\u00edveis a cada 5 segundos.</p> </li> </ol>"},{"location":"programacao/oop/classes/","title":"Classes","text":"<p>Em um programa desenvolvido utilizando POO, o processamento se d\u00e1 pela troca de mensagens entre os objetos criados. E, para criar tais objetos, precisamos de um modelo de constru\u00e7\u00e3o, que chamamos de <code>classe</code>. A <code>classe</code> define, portanto, caracter\u00edsticas comuns (atributos e comportamentos) de um tipo de objeto. </p> <p>Quando estamos projetando um software utilizando POO, a primeira atividade que temos na parte de projeto \u00e9 especificar quais ser\u00e3o as classes que devemos construir, assim como seus relacionamentos. Essa fase de design \u00e9 essencial, pois impacta diretamente na arquitetura do software. Perceba ent\u00e3o que n\u00e3o falamos inicialmente de objetos, mas sim de classes, pois n\u00e3o h\u00e1 como cri\u00e1-los sem definir sua estrutura previamente.</p> <p>Classes</p> <p>As classes s\u00e3o Tipos Abstratos de Dados que o desenvolvedor define no c\u00f3digo. A partir destes tipos criam-se vari\u00e1veis que ir\u00e3o receber inst\u00e2ncias da classe, que conhecemos como objetos.</p> <p>Existem diversas t\u00e9cnicas e recomenda\u00e7\u00f5es voltadas ao projeto de classes. Neste momento isso n\u00e3o ser\u00e1 levado em considera\u00e7\u00e3o, pois nosso foco ser\u00e1 a codifica\u00e7\u00e3o, ou seja, a express\u00e3o destes conceitos em c\u00f3digo. Basta que entendamos por ora que as classes s\u00e3o obtidas a partir da an\u00e1lise do dom\u00ednio do problema, buscando identificar as categorias de objetos que ocorrem.</p> <p>Dica</p> <p>Voc\u00ea pode achar informa\u00e7\u00f5es introdut\u00f3rias sobre an\u00e1lise orientada a objetos neste endere\u00e7o ou no curso oferecido pela Funda\u00e7\u00e3o Bradesco.</p> <p>Imagine, por exemplo, que estamos trabalhando em sistema de gest\u00e3o acad\u00eamica para uma universidade. Atrav\u00e9s da an\u00e1lise do dom\u00ednio, elencamos que minimamente precisaremos considerar estudantes, professores, cursos, disciplinas e avalia\u00e7\u00f5es em nossa modelagem.  Estas s\u00e3o nossas categorias, e, portanto, candidatas a se tornarem classes. Feito isso, precisamos identificar os atributos de interesse, comportamentos e as rela\u00e7\u00f5es entre as classes para termos os insumos necess\u00e1rios \u00e0 codifica\u00e7\u00e3o.</p> <p>Vamos come\u00e7ar pela categoria estudante. Quais <code>atributos</code> de dados os estudantes em nosso sistema dever\u00e3o ter? A resposta \u00e9: depender\u00e1 dos requisitos que identificamos junto ao nosso cliente. Como n\u00e3o temos em m\u00e3os tais requisitos, iremos pressupor que os atributos s\u00e3o:</p> <ul> <li>nome completo</li> <li>data de nascimento</li> <li>nome da m\u00e3e</li> <li>cpf</li> <li>n\u00famero de matr\u00edcula</li> <li>email</li> </ul> <p>Atributos</p> <p>Atributos s\u00e3o propriedades associadas \u00e0 objetos que desejamos registrar valor.</p> <p>Deste modo, a categoria (grupo) estudante ser\u00e1 representada por uma classe. E como podemos representar este entendimento para fins de modelagem? Bem, podemos utilizar o Diagrama de Classes da UML! Veja como ficaria:</p> classDiagram      class Estudante{     - nomeCompleto     - dataNascimento     - nomeMae     - cpf     - numeroMatricula     - email     }  <p>Na primeira se\u00e7\u00e3o temos o nome da classe, que escolhemos ser Estudante. A segunda se\u00e7\u00e3o trata dos atributos que identificamos. Falta apenas elencarmos os comportamentos, ou seja, as a\u00e7\u00f5es que objetos de Estudante podem expor. De in\u00edcio, vamos imaginar a possibilidade do estudante expor a\u00e7\u00f5es que permitam ler e alterar seus atributos de dados. Em linguagem que expressam POO, utilizamos <code>m\u00e9todos</code> para implementar a\u00e7\u00f5es que um objeto pode realizar. Assim, conclu\u00edmos nossa representa\u00e7\u00e3o da classe Estudante incluindo alguns m\u00e9todos (que explicaremos mais a frente).</p> classDiagram      class Estudante{     - nomeCompleto     - dataNascimento     - nomeMae     - cpf     - numeroMatricula     - email     + Estudante(nomeComp, dataN, nomeMae, cpf, matricula)     + getNomeCompleto()     + getDataNascimento()     + getNomeMae()     + getCPF()     + getNumeroMatricula()     + getEmail()     + setEmail ()     }  <p>M\u00e9todos</p> <p>S\u00e3o rotinas associadas ao objeto que manipulam seu estado (conjunto de valores de atributos) e que exp\u00f5em ao mundo exterior uma interface de comunica\u00e7\u00e3o. Representam a implementa\u00e7\u00e3o do conceito de comportamento em linguagens com suporte a POO.</p> <p>Na sequ\u00eancia apresentamos implementa\u00e7\u00f5es muito b\u00e1sicas para a classe Estudante utilizando tr\u00eas linguagens mainstream para que possamos discutir e analisar alguns elementos importantes. O primeiro deles \u00e9 a forma que utilizamos para definir a classe, que nas tr\u00eas linguagens se d\u00e1 pelo uso da palavra reservada <code>class</code>. Atributos s\u00e3o declarados como <code>vari\u00e1veis de inst\u00e2ncia</code>, ou seja, vari\u00e1veis ter\u00e3o valores espec\u00edficos para cada objeto criado (instanciado). J\u00e1 os comportamentos s\u00e3o implementados a partir de <code>m\u00e9todos</code>, cuja estrutura \u00e9 praticamente igual \u00e0 fun\u00e7\u00f5es/procedimentos. A grande diferen\u00e7a \u00e9 que tais fun\u00e7\u00f5es operam no escopo do objeto, especificamente manipulando suas vari\u00e1veis de inst\u00e2ncia.</p> C++JavaPython <pre><code>#include &lt;string&gt;\n#include &lt;ctime&gt;\n\nusing namespace std;\n\nclass Estudante {\n        private:\n        string nomeCompleto, nomeMae, email, cpf;\n        unsigned long numeroMatricula;\n        tm dataNascimento;\n\n        public:\n            Estudante (string nomeCompleto, string nomeMae, string email, string cpf,\n                unsigned long numeroMatricula, tm dataNascimento)\n        {\n            this-&gt;cpf = cpf;\n            this-&gt;nomeCompleto = nomeCompleto;\n            this-&gt;nomeMae = nomeMae;\n            this-&gt;email = email;\n            this-&gt;numeroMatricula = numeroMatricula;\n            this-&gt;dataNascimento = dataNascimento;\n\n        }\n        string getNomeCompleto ()\n        {\n            return this-&gt;nomeCompleto;\n        }\n        tm getDataNascimento ()\n        {\n            return this-&gt;dataNascimento;\n        }\n        string getNomeMae ()\n        {\n            return this-&gt;nomeMae;\n        }\n        string getCPF ()\n        {\n            return this-&gt;cpf;\n        }\n        unsigned long getNumeroMatricula ()\n        {\n            return this-&gt;numeroMatricula;\n        }\n        string getEmail ()\n        {\n            return this-&gt;email;\n        }\n        void setEmail (string email)\n        {\n            this-&gt;email = email;\n        }\n        };\n</code></pre> <pre><code>import java.time.LocalDate;\n\nclass Estudante {\n\n    private String nomeCompleto, nomeMae, email, cpf;\n    private long numeroMatricula;\n    private LocalDate dataNascimento;\n\n    public Estudante(String nomeCompleto, String nomeMae, String email, String cpf, long numeroMatricula,\n            LocalDate dataNascimento) {\n        this.cpf = cpf;\n        this.dataNascimento = dataNascimento;\n        this.nomeCompleto = nomeCompleto;\n        this.nomeMae = nomeMae;\n        this.email = email;\n        this.numeroMatricula = numeroMatricula;\n    }\n\n    String getNomeCompleto() {\n        return this.nomeCompleto;\n    }\n\n    LocalDate getDataNascimento() {\n        return this.dataNascimento;\n    }\n\n    String getNomeMae() {\n        return this.nomeMae;\n    }\n\n    String getCPF() {\n        return this.cpf;\n    }\n\n    long getNumeroMatricula(){\n        return this.numeroMatricula;\n    }\n\n    String getEmail() {\n        return this.email;\n    }\n\n    void setEmail(String email) {\n        this.email = email;\n    }\n\n}\n</code></pre> <pre><code>class Estudante:\n    def __init__(self, nome_completo, data_nascimento, nome_mae, cpf, matricula, email):\n        self.__nome_completo = nome_completo\n        self.__data_nascimento = data_nascimento\n        self.__nome_mae = nome_mae\n        self.__cpf = cpf\n        self.__email = email\n        self.__numero_matricula = matricula\n\n    def set_email(self, email):\n        self.__email = email        \n    def get_email(self):\n        return self.__email\n    def get_numero_matricula(self):\n        return self.__numero_matricula\n    def get_cpf(self):\n        return self.__cpf\n    def get_nome_mae(self):\n        return self.__nome_mae\n    def get_data_nascimento(self):\n        return self.__data_nascimento\n    def get_nome_completo(self):\n        return self.__nome_completo\n</code></pre> <p>O primeiro ponto de aten\u00e7\u00e3o s\u00e3o o uso de <code>this</code> e <code>self</code> (por conven\u00e7\u00e3o) no c\u00f3digo. Embora a sintaxe mude de linguagem para linguagem, o objetivo de ambos \u00e9 o mesmo: referenciar uma vari\u00e1vel de inst\u00e2ncia ou m\u00e9todo de inst\u00e2ncia. Ainda confuso? Ent\u00e3o vamos explicar com mais detalhes.</p> <p>Quando o desenvolvedor codifica a classe, sua inten\u00e7\u00e3o \u00e9 operacionalizar as a\u00e7\u00f5es para cada poss\u00edvel objeto que venha a ser <code>instanciado</code>. Por instancia\u00e7\u00e3o devemos entender o processo de reserva de espa\u00e7o de mem\u00f3ria para o objeto residir, bem como sua inicializa\u00e7\u00e3o a partir do <code>construtor</code>. Nesta \u00e1rea de mem\u00f3ria em que o objeto reside h\u00e1 espa\u00e7o para armazenar os valores de seus atributos. Disso \u00e9 que surge o conceito de vari\u00e1veis de inst\u00e2ncia, ou seja, vari\u00e1veis cujo valor \u00e9 particular a cada inst\u00e2ncia (objeto) criada.</p> <p>J\u00e1 os m\u00e9todos n\u00e3o t\u00eam seu c\u00f3digo \"carregado\" junto a cada inst\u00e2ncia, pois eles n\u00e3o mudam sua implementa\u00e7\u00e3o a cada novo objeto. Desconsiderando casos excepcionais, todos os objetos compartilham da mesma implementa\u00e7\u00e3o definida na classe e \u00e9 neste ponto que o uso de this/self tornam-se especialmente \u00fatil. Eles representam a inst\u00e2ncia que recebeu a mensagem (objeto do contexto), o que permite codificar o comportamento para todo e qualquer objeto da classe a partir de um c\u00f3digo gen\u00e9rico.</p> <p>Analise o c\u00f3digo a seguir. Ele apresenta dois objetos, estudante01 e estudante02, devidamente inicializados com os valores informados no construtor. Nos comandos de print, o valor apresentado para cpf ser\u00e1 \u00e0quele informado para o respectivo objeto. Isso \u00e9 poss\u00edvel porque, quando o objeto estudante01 recebe a mensagem <code>get_cpf</code>, ao rodar a implementa\u00e7\u00e3o do m\u00e9todo, o valor da refer\u00eancia self est\u00e1 apontando para estudante01. O mesmo racioc\u00ednio vale para estudante02 e qualquer outro objeto que venha a ser instanciado.</p> <pre><code>estudante01 = Estudante(\"Fulano A. B.\", \"12/05/2003\", \"Ciclana A. B. \", \"12365478963\", \"1236584\")\nestudante02 = Estudante(\"Beltrano F. G.\", \"30/01/2002\", \"Ciclana F. G. \", \"85789632541\", \"2365841\")\nprint(estudante01.get_cpf())\nprint(estudante02.get_cpf())\n</code></pre> <p>Em nossa explica\u00e7\u00e3o anterior falamos de <code>m\u00e9todo construtor</code> mas n\u00e3o o descrevemos e para isso, vamos tomar como estudo de caso nossa implementa\u00e7\u00e3o em Python, linha \\(2\\). Bem, sabemos que o estado de um objeto \u00e9 constitu\u00eddo pelo valor de seus atributos em um determinado instante. A quest\u00e3o \u00e9: qual ser\u00e1 o estado inicial do objeto, obtido assim que ele for instanciado? Quem determina isso \u00e9 o <code>m\u00e9todo construtor</code>.</p> <p>O nome do tipo de m\u00e9todo j\u00e1 deixa a dica: <code>construtor</code>, ou seja, aquele que constr\u00f3i o estado inicial. Trata-se, portanto, de um m\u00e9todo especial executado no ato da instancia\u00e7\u00e3o, cuja finalidade \u00e9 entregar o objeto em um estado v\u00e1lido, consistente. Seus par\u00e2metros constituem as depend\u00eancia que o objeto precisa receber do mundo exterior. Cada linguagem especifica como cri\u00e1-los: enquanto que Java e C++ expressam os construtores a partir de um m\u00e9todo de mesmo nome da classe e sem tipo de retorno, no Python ele  obrigatoriamente deve se chamar <code>__init__</code>. E, para ficar registrado, podemos ter v\u00e1rios construtores em uma mesma classe.</p>"},{"location":"programacao/oop/classes/#visibilidade","title":"Visibilidade","text":"<p>A programa\u00e7\u00e3o orientada a objetos \u00e9 especialmente \u00fatil porque oferece um mecanismo de programa\u00e7\u00e3o que une atributos \u00e0 comportamentos em uma \u00fanica unidade. E, ao permitir tal recurso, possibilita tamb\u00e9m a prote\u00e7\u00e3o contra altera\u00e7\u00f5es indevidas, desde que o programador utilize os princ\u00edpios e boas pr\u00e1ticas na codifica\u00e7\u00e3o. </p> <p>A visibilidade de atributos \u00e9 um fator muito importante. Por visibilidade devemos entender quem ter\u00e1 acesso direto a um atributo do objeto e de antem\u00e3o devemos saber que \u00e9, no m\u00ednimo, indesejado permitir acesso direto. </p> <p>A t\u00e9cnica que utilizamos para esconder os atributos (data members) de um objeto chama-se <code>data hiding</code>. O objetivo \u00e9 impedir o acesso direto aos atributos e assim garantir a consist\u00eancia de estado por meio dos m\u00e9todos que o objeto exp\u00f5e ao mundo exterior <sup>1</sup>. Em nossa implementa\u00e7\u00e3o da classe Estudante aplicamos a t\u00e9cnica por meio dos modificadores de visibilidade do Java e C++, enquanto que no Python, utilizamos a conven\u00e7\u00e3o.</p> <p>O que declaramos como <code>private</code> (Java e C++) fica restrito ao escopo interno. Isso vale para atributos e para m\u00e9todos. Logo, acesso direto externo ao atributo email, por exemplo, n\u00e3o \u00e9 poss\u00edvel. Se for preciso ao mundo exterior ler o valor de email, ent\u00e3o criamos um m\u00e9todo <code>accessor</code>, cuja finalidade \u00e9 permitir a leitura de um atributo, jamais sua altera\u00e7\u00e3o. Por sua vez, se h\u00e1 necessidade de alterar o valor de um atributo, ent\u00e3o criamos um m\u00e9todo <code>mutator</code> para este fim. Este \u00e9 o caso dos m\u00e9todos get_email e set_email que implementamos.</p>"},{"location":"programacao/oop/classes/#encapsulamento","title":"Encapsulamento","text":"<p><code>Encapsulamento</code> \u00e9 um dos pilares da POO. Quando associamos atributos \u00e0 m\u00e9todos que os manipulam dentre de uma unidade chamada objeto, e determinamos o que ser\u00e1 p\u00fablico e o que fica restrito, estamos falando de encapsulamento. </p> <p>Utilizando <code>data hiding</code> impedimos que objetos sofram altera\u00e7\u00f5es de estado sem controle. E, ao escondermos a implementa\u00e7\u00e3o dos m\u00e9todos ou mesmo restringirmos a exposi\u00e7\u00e3o de alguns m\u00e9todos, estamos garantindo o encapsulamento e gerando uma abstra\u00e7\u00e3o de dados que exp\u00f5e apenas o que necess\u00e1rio para o mundo exterior.</p> <p>Perceba que a <code>abstra\u00e7\u00e3o</code> nos acompanha em todas as etapas, pois ela \u00e9 o mecanismo que n\u00f3s, humanos, utilizamos para simplificar a realidade. Mantemos nossa aten\u00e7\u00e3o naquilo que nos importa sobre a realidade, desconsiderando os demais aspectos. Importante perceber tamb\u00e9m que cada indiv\u00edduo abstrai \u00e0quilo que lhe conv\u00e9m, a partir de seu ponto de vista da realidade. Contudo, essas diferen\u00e7as precisam ser minimizadas no projeto de software orientado a objetos atrav\u00e9s da observa\u00e7\u00e3o atenta das regras e caracter\u00edsticas do dom\u00ednio do problema, que ir\u00e3o se materializar nos objetos <sup>2</sup>.</p>"},{"location":"programacao/oop/classes/#metodos","title":"M\u00e9todos","text":"<p>Os comportamentos de um objeto s\u00e3o codificados em <code>m\u00e9todos</code>. Em sua constru\u00e7\u00e3o, m\u00e9todos assemelham-se a rotinas, inclusive na sintaxe. A grande diferen\u00e7a est\u00e1 no papel desempenhado. Enquanto rotinas s\u00e3o executadas para transformar dados recebidos por par\u00e2metro ou dispon\u00edveis no escopo, sendo invocadas quando necess\u00e1rio, os <code>m\u00e9todos</code> s\u00e3o respons\u00e1veis por atender \u00e0 mensagens recebidas de outro objeto. Quando um m\u00e9todo executa, ele est\u00e1 respondendo a uma <code>mensagem</code> e sua execu\u00e7\u00e3o ir\u00e1 considerar o estado do objeto, seus demais comportamentos e os dados eventualmente recebidos como argumento.</p> <p>Os <code>m\u00e9todos</code> que o objeto torna dispon\u00edvel ao mundo externo comp\u00f5em sua <code>interface</code> de comunica\u00e7\u00e3o e somente por meio deles outros objetos podem interagir enviando mensagens. Neste sentido, o objeto reage ao est\u00edmulo, executando a a\u00e7\u00e3o associada \u00e0quela mensagem espec\u00edfica. \u00c9 a partir desta troca de mensagens entre objetos que se alcan\u00e7a as funcionalidades do sistema.</p> <p></p> <p>No c\u00f3digo abaixo voc\u00ea ir\u00e1 perceber que o objeto <code>e1</code> est\u00e1 recebendo uma mensagem para alterar o valor de e-mail armazenado. Como argumento est\u00e1 sendo enviado o novo endere\u00e7o. </p> <pre><code>#...\ne1 = Estudante(\"Fulano A. B.\", \"12/05/2003\", \"Ciclana A. B. \", \"12365478963\", \"1236584\")\ne1.set_email(\"estudante01@instituicao.edu\")\n#...\n</code></pre>"},{"location":"programacao/oop/classes/#sobrecarga","title":"Sobrecarga","text":"<p><code>Sobrecarga</code> \u00e9 o recurso que algumas linguagens de programa\u00e7\u00e3o oferecem para criarmos m\u00faltiplas implementa\u00e7\u00f5es de um mesmo m\u00e9todo, preservando seu nome mas variando tipos e/ou quantidades de par\u00e2metros formais em sua assinatura. \u00c9 um recurso t\u00edpico de <code>linguagens estaticamente tipadas</code>, ou seja, \u00e0quelas em que definimos a priori o tipo das vari\u00e1veis e isso \u00e9 utilizado como crit\u00e9rio de valida\u00e7\u00e3o sem\u00e2ntica no momento da <code>compila\u00e7\u00e3o</code>. </p> <p>Ao se deparar com o nome de um m\u00e9todo (ou fun\u00e7\u00e3o) sobrecarregado, o compilador ir\u00e1 utilizar o tipo/quantidade dos argumentos para encontrar a \"vers\u00e3o\" mais adequada (best match). No caso de linguagens din\u00e2micas, a sobrecarga n\u00e3o \u00e9 recurso nativo (nem necess\u00e1rio), ficando a cargo de bibliotecas externas habilitar tal possibilidade no c\u00f3digo.</p> <p>Na sequ\u00eancia apresentamos exemplos em tr\u00eas linguagens: C++, Java e Python. Duas delas passam por processo de compila\u00e7\u00e3o (C++ e Java), logo a sobrecarga \u00e9 recurso nativo. J\u00e1 para o Python, h\u00e1 a necessidade de importar um m\u00f3dulo espec\u00edfico, que, embora funcione corretamente no c\u00f3digo em quest\u00e3o, mostra ser pouco coerente, haja vista que podemos obter o mesmo resultado de forma mais simples (e correta). Logo, considere a implementa\u00e7\u00e3o em Python como uma representa\u00e7\u00e3o for\u00e7ada para demonstrar o recurso, mas n\u00e3o como pr\u00e1tica recomendada de codifica\u00e7\u00e3o nesta linguagem.</p> C++JavaPython <pre><code>#include &lt;ctime&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nenum class Conceito\n{\n    A,\n    B,\n    C,\n    D,\n    E\n};\n\nclass Avaliacao\n{\nprivate:\n    tm data;\n    string descricao;\n    int pesoInteiro;\n    Conceito pesoConceito;\n\npublic:\n    Avaliacao(tm data, string descricao)\n    {\n        this-&gt;data = data;\n        this-&gt;descricao = descricao;\n    }\n\n    void setPeso(Conceito c)\n    {\n        this-&gt;pesoConceito = c;\n    }\n\n    void setPeso(int peso)\n    {\n        this-&gt;pesoInteiro = peso;\n    }\n};\n</code></pre> <pre><code>import java.time.LocalDate;\npublic enum Conceito {\n    A,B, C,D,E;        \n}\n\npublic class Avaliacao {\n    private LocalDate data;\n    private String descricao;\n    private int pesoInteiro;\n    private Conceito pesoConceito;\n\n    public Avaliacao(LocalDate data, String descricao) {\n        this.data = data;\n        this.descricao = descricao;\n\n    }\n\n    public void setPeso(Conceito c) {\n        this.pesoConceito = c;\n    }\n\n    public void setPeso(int peso) {\n        this.pesoInteiro = peso;\n    }\n}\n</code></pre> <pre><code>from multipledispatch import dispatch\nfrom enum import Enum\n\nclass Conceito(Enum):\n    A=1\n    B=2\n    C=3\n    D=4\n    E=5\n\n\nclass Avaliacao():\n    def __init__(self, data, descricao):\n        self.data=data;\n        self.descricao= descricao;\n        self.peso_inteiro=0;\n        self.peso_conceito=None;\n\n    @dispatch(Conceito)\n    def set_peso(self, c):\n        self.peso_conceito = c\n\n    @dispatch(int)\n    def set_peso (self, peso):\n        self.peso_inteiro=peso\n</code></pre>"},{"location":"programacao/oop/classes/#metodo-abstrato","title":"M\u00e9todo abstrato","text":"<p>Por vezes \u00e9 interessante que uma classe defina um ou mais m\u00e9todos sem implementa\u00e7\u00e3o. Estes m\u00e9todos, ditos <code>abstratos</code>, s\u00e3o utilizados para especificar a presen\u00e7a de um comportamento na hierarquia de classes, garantindo que classes derivadas definam sua pr\u00f3pria implementa\u00e7\u00e3o. Logo, a presen\u00e7a de m\u00e9todo abstrato corresponde a formalmente delegar responsabilidade de sobrescrita \u00e0s classes derivadas (desde que sejam concretas).</p> <p>Importante ressaltar que a presen\u00e7a de um ou mais m\u00e9todos abstratos torna a classe abstrata. <code>Classes abstratas</code> n\u00e3o podem produzir inst\u00e2ncias e servem prioritariamente como superclasse de outras. Contudo, nem toda classe abstrata cont\u00e9m m\u00e9todos abstratos. Portanto, o inverso n\u00e3o \u00e9 verdade!</p> <p>Prover classes abstratas \u00e9 \u00fatil quando desejamos oferecer um conjunto b\u00e1sico de funcionalidades. Tal recurso \u00e9 comum em arquiteturas que utilizam frameworks, pois nelas a aplica\u00e7\u00e3o, para acessar os recursos da API do framework precisa estender classes espec\u00edficas.</p> <p>Para ilustrar o conceito de m\u00e9todo e classe abstrata iremos considerar a exist\u00eancia de uma classe chamada FiguraGeom\u00e9trica, abstrata, contendo o m\u00e9todo abstrato calcularArea(). A partir dela, duas classes derivam, Triangulo e Quadrado, cada qual comprometendo-se em sobrescrever o m\u00e9todo abstrato recebido da superclasse.</p> <p>Perceba que a justificativa para o uso do m\u00e9todo abstrato calcularArea() \u00e9 simples: qualquer figura geom\u00e9trica possui \u00e1rea. Mas cada figura requer um c\u00e1lculo espec\u00edfico de \u00e1rea, o que demanda a implementa\u00e7\u00e3o do c\u00e1lculo pela classe especializada. </p> classDiagram direction TB      class  FiguraGeometrica {         - ArrayList~Coordenada~ pontos     + calcularArea() }  class Triangulo{     + calcularArea() float }  class Quadrado {     + calcularArea() float }  FiguraGeometrica &lt;|-- Triangulo FiguraGeometrica &lt;|-- Quadrado   JavaPythonC++ <pre><code>import java.util.ArrayList;\n\nclass Coordenada{\n    private int pontoX;\n    private int pontoY;\n\n    public Coordenada(int x, int y){\n        this.pontoX=x;\n        this.pontoY=y\n    }\n    public int getPontoX(){\n        return this.pontoX;        \n    }\n\n    public int getPontoY(){\n        return this.pontoY;\n    }\n\n}\n\n\nabstract class FiguraGeometrica {\n    private ArrayList&lt;Coordenada&gt; pontos;\n\n    public FiguraGeometrica(ArrayList&lt;Coordenada&gt; pontos){\n        this.pontos = pontos;\n    }\n    public abstract float calcularArea();\n\n}\n\n\npublic Triangulo extends FiguraGeometrica{\n\n    public Triangulo(Coordenada p1, Coordenada p2, Coordenada p3){\n        ArrayList&lt;Coordenada&gt; pontos = new ArrayList&lt;&gt;();\n        pontos.add(p1);\n        pontos.add(p2);\n        pontos.add(p3);\n        super(pontos);\n    }\n    @Override\n    public float calcularArea(){\n        //calculo da \u00e1rea do tringulo\n    }\n}\n\n\n\npublic Quadrado extends FiguraGeometrica{\n\n    public Triangulo(Coordenada p1, Coordenada p2){\n        ArrayList&lt;Coordenada&gt; pontos = new ArrayList&lt;&gt;();\n        pontos.add(p1);\n        pontos.add(p2);        \n        super(pontos);\n    }\n    @Override\n    public float calcularArea(){\n        //calculo da \u00e1rea do tringulo\n    }\n}\n</code></pre> <pre><code>    #em breve\n</code></pre> <pre><code>    //em breve\n</code></pre> <p>continua...</p> <ol> <li> <p>Sonoo Jaiswal. What is data hiding? 2021. URL: https://www.javatpoint.com/what-is-data-hiding.\u00a0\u21a9</p> </li> <li> <p>Carl Erickson. Object oriented programming. 2009. URL: https://atomicobject.com/uploads/archive/files/ObjectOrientedProgramming.pdf.\u00a0\u21a9</p> </li> </ol>"},{"location":"programacao/oop/excecoes/","title":"Tratamento de Exce\u00e7\u00f5es","text":"<p>As exce\u00e7\u00f5es representam eventos que comprometem o fluxo normal de execu\u00e7\u00e3o dos programas. Embora consideradas uma situa\u00e7\u00e3o an\u00f4mala, as exce\u00e7\u00f5es s\u00e3o comuns e precisam ser consideradas no c\u00f3digo em tempo de implementa\u00e7\u00e3o.</p> <p>Nas linguagens orientadas a objetos, o evento de runtime lan\u00e7a um objeto que representa a exce\u00e7\u00e3o que ocorreu. A partir deste objeto podemos ent\u00e3o realizar o tratamento, representado por instru\u00e7\u00f5es que representam as a\u00e7\u00f5es de contorno.</p> <p>O recurso que boa parte das linguagens de programa\u00e7\u00e3o oferece \u00e9 envolver as instru\u00e7\u00f5es pass\u00edveis de erros em runtime com um bloco de tratamento. \u00c9 comum que este bloco utilize as palavras reservadas <code>try</code> e <code>catch</code>. Vamos analisar o funcionamento a partir de um exemplo escrito em Java.</p> <p>Nosso c\u00f3digo faz a leitura de um arquivo README.md, imprimindo na sa\u00edda padr\u00e3o cada linha de conte\u00fado. A leitura de arquivos \u00e9 suscet\u00edvel a diversos problemas: falta de permiss\u00e3o, arquivo inexistente, arquivo corrompido, entre outros. Sabendo disso, \u00e9 prudente (e mandat\u00f3rio no Java) construirmos o c\u00f3digo pensando na possibilidade do erro. </p> <p>O primeiro passo compreende envolver as instru\u00e7\u00f5es do fluxo normal de execu\u00e7\u00e3o com <code>try</code>. Ap\u00f3s, criamos um ou mais blocos <code>catch</code> para tratar a poss\u00edvel ocorr\u00eancia da exce\u00e7\u00e3o indicada pelo tipo (FileNotFoundException e IOException ).</p> <p>Se, ao executar uma das instru\u00e7\u00f5es dentro do bloco <code>try</code> ocorrer algum erro, o fluxo \u00e9 desviado para o bloco de tratamento (<code>catch</code>) que melhor adere ao tipo de evento ocorrido. Tal mecanismo de match faz uso do relacionamento de heran\u00e7a para determinar o tipo mais espec\u00edfico compat\u00edvel com a exce\u00e7\u00e3o gerada.</p> Java <pre><code>    try {\n        File arq = new File(\"README.md\");\n        BufferedReader reader = new BufferedReader(new FileReader(arq));\n        reader.lines().forEach(System.out::println);\n        reader.close();\n    } catch (FileNotFoundException e) {\n        System.out.println(\"Arquivo n\u00e3o encontrado. Informe o caminho correto\");\n    } catch (IOException e) {\n        System.out.println(\"Problema geral de entrada e sa\u00edda\");\n    }\n</code></pre> <p>Observe como \u00e9 semelhante em Python. A constru\u00e7\u00e3o e opera\u00e7\u00e3o s\u00e3o equivalentes, mudando apenas a palavra reservada de <code>catch</code> para <code>except</code>.</p> Python <pre><code>    try:\n        arquivo = open('READMEs.md')\n        [print(line) for line in arquivo.readlines()]\n    except FileNotFoundError:\n        print('Arquivo n\u00e3o encontrado')\n    except Exception:\n        print('Erro gen\u00e9rico')\n</code></pre> <p>As linguagem de programa\u00e7\u00e3o apresentam taxionomias de exce\u00e7\u00f5es no core de suas APIs. Elas normalmente representam situa\u00e7\u00f5es de erro gen\u00e9ricos e podem ser utilizadas para mapear as exce\u00e7\u00f5es mais frequentes que um programa incorre <sup>1</sup> <sup>2</sup>. Outras exce\u00e7\u00f5es espec\u00edficas podem ser criadas pelo desenvolvedor a partir da deriva\u00e7\u00e3o das gen\u00e9ricas, a fim de representar erros de mais alto n\u00edvel (como notificar um CPF inv\u00e1lido). Veja na sequ\u00eancia a hierarquia de exce\u00e7\u00f5es nativas da linguagem Java.</p> <p> Fonte: https://rollbar.com/blog/java-exceptions-hierarchy-explained/</p> <p>H\u00e1 uma terceira se\u00e7\u00e3o, opcional, que podemos agregar ao tratamento de exce\u00e7\u00f5es chamada <code>finally</code>. \u00c9 aplicada para comandos que devem ser executadas em qualquer circunst\u00e2ncia, tanto no fluxo normal quanto na eventual ocorr\u00eancia de exce\u00e7\u00f5es.</p> PythonJava <pre><code>    try:\n        arquivo = open('README.md')\n        [print(line) for line in arquivo.readlines()]\n    except FileNotFoundError:\n        print('Arquivo n\u00e3o encontrado')\n    except Exception:\n        print('Erro gen\u00e9rico')\n    finally:\n        print('Processamento conclu\u00eddo')\n</code></pre> <pre><code>    try {\n        File arq = new File(\"README.md\");\n        BufferedReader reader = new BufferedReader(new FileReader(arq));\n        reader.lines().forEach(System.out::println);\n        reader.close();\n    } catch (FileNotFoundException e) {\n        System.out.println(\"Arquivo n\u00e3o encontrado. Informe o caminho correto\");\n    } catch (IOException e) {\n        System.out.println(\"Problema geral de entrada e sa\u00edda\");\n    } finally {\n        monitor.notificarProcessamento(\"README.md\");\n    }\n</code></pre>"},{"location":"programacao/oop/excecoes/#unchecked-exceptions-e-checked-exceptions","title":"Unchecked exceptions e checked exceptions","text":"<p>\u00c9 uma subdivis\u00e3o das exce\u00e7\u00f5es utilizada na linguagem Java. <code>Checked exception</code> \u00e9 toda aquela exce\u00e7\u00e3o verificada em tempo de compila\u00e7\u00e3o. Para estas, \u00e9 exigido que seja feito tratamento via  <code>try-catch</code> ou que o m\u00e9todo seja declarado com a cl\u00e1usula <code>throws</code>. <code>Checked exception</code> s\u00e3o classes derivadas de <code>Exception</code>.</p> <p><code>Unchecked exceptions</code>, por sua vez, n\u00e3o s\u00e3o verificadas em tempo de compila\u00e7\u00e3o. Podem ocorrer durante a execu\u00e7\u00e3o do programa, pois dependem de situa\u00e7\u00f5es do ambiente e do pr\u00f3prio estado de execu\u00e7\u00e3o. Acesso a \u00edndices inexistentes em arrays, divis\u00e3o por zero, chamada de m\u00e9todo em refer\u00eancias nulas s\u00e3o exemplos deste tipo de exce\u00e7\u00e3o. <code>Unchecked exception</code> s\u00e3o classes derivadas de <code>RuntimeException</code>.</p>"},{"location":"programacao/oop/excecoes/#excecoes-customizadas","title":"Exce\u00e7\u00f5es customizadas","text":"<p>Quando precisamos notificar os usu\u00e1rios de nossos m\u00e9todos acerca de uma situa\u00e7\u00e3o considerada inv\u00e1lida, \u00e9 boa pr\u00e1tica criarmos uma exce\u00e7\u00e3o customizada para tal finalidade. A nova exce\u00e7\u00e3o deve ser derivada de outra existente, normalmente uma das nativas conforme determina a boa pr\u00e1tica. </p> <p>No c\u00f3digo que segue est\u00e1 sendo definida a classe <code>SaldoInsuficienteException</code>, que ir\u00e1 representar um novo tipo de exce\u00e7\u00e3o no programa.</p> Java <pre><code>    public class SaldoInsuficienteException extends Exception {\n        private static final long serialVersionUID = 1L;\n        public SaldoInsuficienteException(String mensagem) {\n            super(mensagem);\n        }\n    }   \n\n    public class Conta{\n        //...atributos e m\u00e9todos anteriores...\n        public void sacar(double valor) throws SaldoInsuficienteException{\n            if ((this.saldo + this.limite) &gt;= valor)\n                this.saldo -= valor;\n            else\n                throw new SaldoInsuficienteException(String.format(\"N\u00e3o \u00e9 poss\u00edvel retirar %f da conta %s\", valor, this));\n        }\n    }\n</code></pre> <ol> <li> <p>Python Software Foundation. Built-in exceptions. 2021. URL: https://docs.python.org/3/library/exceptions.html.\u00a0\u21a9</p> </li> <li> <p>TutorialsPoint. Java - exceptions. 2021. URL: https://www.tutorialspoint.com/java/java_exceptions.htm.\u00a0\u21a9</p> </li> </ol>"},{"location":"programacao/oop/introducao/","title":"Introdu\u00e7\u00e3o \u00e0 Programa\u00e7\u00e3o Orientada a Objetos","text":"<p>O paradigma da programa\u00e7\u00e3o orientada a objetos (POO) \u00e9 relativamente antigo, remontando \u00e0 d\u00e9cada de 1960. Contudo, se tornou popular tempos ap\u00f3s, por meio de linguagens de programa\u00e7\u00e3o populares no mercado de software da \u00e9poca<sup>1</sup>.</p> <p>Basicamente podemos resumir a programa\u00e7\u00e3o orientada a objetos como qualquer estilo de programa\u00e7\u00e3o que se baseia no conceito de <code>objeto</code>, que \u00e9 uma estrutura que agrega <code>atributos</code> e <code>comportamentos</code> de forma encapsulada. Veja, este \u00e9 o grande trunfo do paradigma: relacionar dados e comportamentos em uma \u00fanica estrutura.</p> <p>Se analisarmos a evolu\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o, iremos perceber um esfor\u00e7o comum em distanciar a forma de expressar algoritmos da linguagem bin\u00e1ria. O objetivo foi e ainda \u00e9 elevar o n\u00edvel de abstra\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o para a forma que n\u00f3s, humanos, observamos, interpretamos e entendemos o mundo.</p> <p>Certamente um passo importante neste contexto foi a possibilidade de se utilizar <code>procedimentos</code> (rotinas) na codifica\u00e7\u00e3o. Tal recurso trouxe aos desenvolvedores maior capacidade de reutilizar c\u00f3digo, segmentar e reduzir complexidade, tornando a codifica\u00e7\u00e3o uma atividade mais eficiente e, em termos gerais, menos propensa a bugs (com muitas ressalvas).</p> <p>Atrav\u00e9s do uso de rotinas, um software \u00e9 segmentado em diversas pequenas unidades de prop\u00f3sito espec\u00edfico, que, ao serem executadas na ordem correta, geram ao final as funcionalidades esperadas. J\u00e1 os dados necess\u00e1rios ao programa s\u00e3o processados atrav\u00e9s de vari\u00e1veis locais ou globais, comumente sendo enviados de procedimento em procedimento como um pipeline de opera\u00e7\u00f5es. N\u00e3o h\u00e1 rela\u00e7\u00e3o formal entre as rotinas e os dados por elas processados, pois s\u00e3o estruturas dissociadas na codifica\u00e7\u00e3o. O resultado \u00e9 algo semelhante ao diagrama abaixo.</p>  stateDiagram-v2     [*] --&gt; main         main --&gt; funcao_02    funcao_02 --&gt; funcao_03    funcao_02 --&gt; funcao_01    funcao_03 --&gt; funcao_04    funcao_03 --&gt; funcao_01    funcao_04 --&gt; funcao_01    funcao_01 --&gt; [*]    note right of funcao_02: Dados locais e globais    note left of funcao_03: Dados locais e globais    note right of funcao_04: Dados locais e globais    note right of funcao_01: Dados locais e globais  <p>Embora tenha sido um ineg\u00e1vel avan\u00e7o, a reutiliza\u00e7\u00e3o de c\u00f3digo via procedimentos ainda era limitado e o caminho de execu\u00e7\u00e3o do programa por vezes se tornava t\u00e3o confuso como um prato de espaguete, tornando a manuten\u00e7\u00e3o dif\u00edcil. Mas, o maior dos problemas origina-se da separa\u00e7\u00e3o entre dados e procedimentos. Isso porque todo procedimento precisa conhecer detalhadamente a estrutura dos dados que est\u00e1 manipulando e, quando esta estrutura muda, torna-se necess\u00e1rio realizar altera\u00e7\u00f5es em diversos pontos do c\u00f3digo, o que \u00e9 p\u00e9ssimo em termos de engenharia<sup>1</sup>.</p> <p>Vamos tentar ilustrar essa separa\u00e7\u00e3o entre procedimentos e dados por meio de um c\u00f3digo escrito em C++. O programa define duas estruturas, <code>ITEM_VENDA</code> e <code>VENDA</code>, as quais representam os dados que o programa deve manipular. J\u00e1 as fun\u00e7\u00f5es <code>registrarVenda</code>, <code>venderItem</code> e <code>calcularImpostos</code> s\u00e3o respons\u00e1veis por a\u00e7\u00f5es espec\u00edficas sobre os dados e por tal necessidade, devem ter conhecimento sobre a estrutura dos mesmos. </p> C++ <pre><code>#include &lt;iostream&gt;\n#include &lt;ctime&gt;\nusing namespace std;\n\nstruct ITEM_VENDA {\n    float valorVendaProduto=0;\n    float quantidadeVenda=0;\n    float desconto=0;\n};\n\nstruct VENDA {\n    string cliente;\n    time_t dataHora;\n    ITEM_VENDA itens[10];\n};\n\nVENDA registrarVenda(){\n    //realiza a abertura da venda\n}\n\nITEM_VENDA venderItem(){\n    //realiza o registro de um item vendido\n}\n\nfloat calcularImpostos(VENDA v){\n    //calcula os impostos da venda recebida como argumento\n}\n\nint main (){\n    VENDA v1 = registrarVenda();\n    v1.itens[0]=venderItem();\n    v1.itens[1]=venderItem();\n    v1.itens[2]=venderItem();\n    v1.itens[3]=venderItem();\n    float tributos = calcularImpostos(v1);\n}\n</code></pre> <p>Perceba que a fun\u00e7\u00e3o <code>main</code> de nosso programa realiza chamada \u00e0s demais fun\u00e7\u00f5es em uma sequ\u00eancia espec\u00edfica, passando a vari\u00e1vel que cont\u00e9m os dados de uma para a outra. Logo, gradativamente, a estrutura de dados em mem\u00f3ria representada pela vari\u00e1vel ser\u00e1 transformada/alimentada at\u00e9 obtermos o resultado esperado. </p> <p>Os problemas dessa abordagem concentram-se em dois pontos. O primeiro deles \u00e9 a exposi\u00e7\u00e3o direta da estrutura de dados \u00e0s fun\u00e7\u00f5es, o que permite altera\u00e7\u00f5es sem qualquer controle. Por exemplo, nada impede que a quantidade vendida de um produto esteja negativa, o que \u00e9 incorreto. O segundo ponto \u00e9 a depend\u00eancia da implementa\u00e7\u00e3o das fun\u00e7\u00f5es para com a estrutura de dados, que gera alto acoplamento entre os componentes. O efeito direto do alto acoplamento \u00e9 a propaga\u00e7\u00e3o de pontos de manuten\u00e7\u00e3o a m\u00ednima mudan\u00e7a que ocorrer na estrutura de dados, por exemplo. Todos estes problemas seriam melhor endere\u00e7ados se pudessemos encapsular dados e comportamentos em um \u00fanico componente.</p> <p>Uma solu\u00e7\u00e3o parcial ao problema da falta de encapsulamento veio com as linguagens de programa\u00e7\u00e3o que permitiam implementar o conceito de m\u00f3dulo, um componente que cont\u00e9m dados e procedimentos que os manipulam, cujo acesso externo se d\u00e1 por meio de uma interface. Embora isso resolva a quest\u00e3o da altera\u00e7\u00e3o do estado, temos a impossibilidade de derivar um m\u00f3dulo a partir de outro, o que limita o reuso de c\u00f3digo<sup>1</sup>.</p> <p>Estado</p> <p>Estado  refere-se \u00e0 \"fotografia\" do conjunto de valores mantidos pelo componente em um determinado instante.</p> <p>Chegamos ent\u00e3o \u00e0 POO, uma estrat\u00e9gia de programa\u00e7\u00e3o que modela o problema a partir de objetos e os faz interagir entre si para obter os resultados. Deixamos de lado a chamada de in\u00fameros procedimentos para orientar o fluxo do programa e passamos a ter objetos trocando mensagens, tal qual uma simula\u00e7\u00e3o viva da solu\u00e7\u00e3o almejada. Al\u00e9m de uma forma diferente de codificar, a POO imp\u00f5e uma mudan\u00e7a significativa na maneira de elaborar o algoritmo. Observe o exemplo:</p> graph TD     A((obj1)) --&gt;|sacar| B((obj2))     B((obj2)) --&gt; |sacar| C((obj3))     B((obj2)) --&gt; |sacar| D((obj4))     D((obj4)) --&gt; |notificarSaque| D     C((obj3)) --&gt; |notificarSaque| C     C((obj3))--&gt; |reduzirSaldo| E((obj5))     D((obj4))--&gt; |reduzirSaldo| E((obj5))  <p>Mas antes de pensarmos nos detalhes de implementa\u00e7\u00e3o, precisamos conhecer os quatro pilares do paradigma da orienta\u00e7\u00e3o a objetos, pois s\u00e3o eles que orientam a concep\u00e7\u00e3o e implementa\u00e7\u00e3o de softwares por meio desta estrat\u00e9gia. Vamos a eles ent\u00e3o.</p>"},{"location":"programacao/oop/introducao/#abstracao","title":"Abstra\u00e7\u00e3o","text":"<p>A <code>abstra\u00e7\u00e3o</code> \u00e9 um processo que permite identificar de um contexto somente o que \u00e9 de interesse, ignorando os demais detalhes. Logo, na POO, a abstra\u00e7\u00e3o nos permite pensar objetos que contenham apenas atributos e comportamentos necess\u00e1rios \u00e0 resolu\u00e7\u00e3o do problema <sup>2</sup><sup>3</sup>. O processo de abstra\u00e7\u00e3o pode ser entendido, portanto, como uma estrat\u00e9gia em que mantemos o foco em ideias, qualidades e propriedades de um assunto, deixando as minuciais de lado. \u00c9 olhar para o grande cen\u00e1rio, mas ver apenas elementos de interesse.</p> <p>Podemos entender tamb\u00e9m a abstra\u00e7\u00e3o como a estrat\u00e9gia de esconder detalhes de implementa\u00e7\u00e3o dos usu\u00e1rios. Isso significa que a manipula\u00e7\u00e3o dos objetos n\u00e3o requer e nem deve precisar do conhecimento de opera\u00e7\u00e3o interno. Somente a funcionalidade \u00e9 exposta (o que o objeto faz), nunca a sua implementa\u00e7\u00e3o (como faz) <sup>2</sup><sup>3</sup>.</p>"},{"location":"programacao/oop/introducao/#encapsulamento","title":"Encapsulamento","text":"<p>A POO permite associar em um \u00fanico componente dados e comportamentos que manipulam estes dados, de sorte a oferecer meios de evitar a altera\u00e7\u00e3o indevida de estado a partir de agentes externos. Tal recurso chama-se <code>encapsulamento</code>, uma \"membrana\" que isola os detalhes internos do objeto do mundo exterior.</p> <p>Podemos entender, portanto, que encapsular, na perspectiva da POO, compreende proteger um objeto do acesso direto \u00e0s suas propriedades, sem passar por um <code>m\u00e9todo</code>. Comumente as vari\u00e1veis de inst\u00e2ncia t\u00eam sua manipula\u00e7\u00e3o restrita aos m\u00e9todos, de sorte que qualquer mudan\u00e7a de estado do objeto s\u00f3 ocorre por meio deles.</p>"},{"location":"programacao/oop/introducao/#heranca","title":"Heran\u00e7a","text":"<p>Muitos elementos do mundo real podem ser organizados em uma taxionomia. Isso porque diferentes indiv\u00edduos (objetos), mesmo sendo diferentes, compartilham de caracter\u00edsticas comuns em alguns contextos. Vamos imaginar um site de delivery que oferece fast food, culin\u00e1ria oriental, culin\u00e1ria tropical e itens de supermercado. Ent\u00e3o, pelo app, voc\u00ea pode comprar sab\u00e3o e um hot dog da mesma forma. J\u00e1 no mundo real, s\u00e3o coisas completamente diferentes. O que pode haver de comum entre eles?</p> <p>A resposta \u00e9 que ambos s\u00e3o produtos, e, na perspectiva de produto, compartilham de atributos como valor de venda, quantidade em estoque, descri\u00e7\u00e3o, imagens, entre outros. Al\u00e9m disso, ambos podem ser vendidos, o que representa uma a\u00e7\u00e3o. E, de forma espec\u00edfica, cada item pode conter atributos e m\u00e9todos espec\u00edficos. </p> <p>A rela\u00e7\u00e3o de <code>heran\u00e7a</code> \u00e9 o recurso da POO que permite a objetos herdar atributos e comportamentos de outro de natureza mais gen\u00e9rica. Em nosso exemplo, podemos pensar em tr\u00eas classes: <code>Produto</code>, <code>Culinario</code> e <code>Supermercado</code>. A classe <code>Produto</code> \u00e9 a gen\u00e9rica e serve de superclasse \u00e0 <code>Culinario</code> e <code>Supermercado</code>.</p>     classDiagram         Produto &lt;|-- Culinario         Produto &lt;|-- Supermercado          class Produto{         -float valorVenda         -float quantidadeEstoque         -String descricao         +vender()         }         class Culinario{         -int calorias         }         class Supermercado{         -String marca         -String codigoBarras         }"},{"location":"programacao/oop/introducao/#polimorfismo","title":"Polimorfismo","text":"<p><code>Polimorfismo</code> versa sobre a possibilidade de uma mesma a\u00e7\u00e3o ser realizada de formas diferentes em objetos que compartilham de uma mesma interface. Tal recurso reduz significativamente a necessidade de escrita de c\u00f3digo e favorece a cria\u00e7\u00e3o de componentes com baixo acoplamento. \u00c9 como se envi\u00e1ssemos a mensagem <code>correr</code> para um velocista e um ciclista. Cada qual executaria a a\u00e7\u00e3o associada a mensagem de forma diferente, mas ambos tem capacidade de compreender e execu\u00e7\u00e3o a mesma a\u00e7\u00e3o de alto n\u00edvel.</p> <ol> <li> <p>Anthony Sintes. Aprenda Programa\u00e7\u00e3o Orientada a Objetos em 21 dias. Pearson, 2002.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Geeks For Geeks. Abstraction in java. 2021. URL: https://www.geeksforgeeks.org/abstraction-in-java-2/.\u00a0\u21a9\u21a9</p> </li> <li> <p>Hamza Ahmed. Four pillars of object oriented programming (oop). 2021. URL: https://medium.com/@hamzzza.ahmed95/four-pillars-of-object-oriented-programming-oop-e8d7822aa219.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"programacao/oop/relacoes/","title":"Heran\u00e7a","text":"<p>Um dos principais benef\u00edcios oriundos da abstra\u00e7\u00e3o provida pela orienta\u00e7\u00e3o a objetos foi ampliar a possibilidade de reutilizar c\u00f3digo. Isso n\u00e3o \u00e9 importante somente pela redu\u00e7\u00e3o do tempo de codifica\u00e7\u00e3o do software, mas tamb\u00e9m \u00e9 pelo melhor controle das responsabilidades (cada componente \u00e9 respons\u00e1vel por uma \u00fanica tarefa), amplia\u00e7\u00e3o da cobertura de teste e redu\u00e7\u00e3o da incid\u00eancia de bugs no c\u00f3digo.</p> <p>Na defini\u00e7\u00e3o de uma classe, \u00e9 comum precisarmos estabelecer relacionamentos com outras classes. Logo, a estrutura de componentes de um software constru\u00eddo na perspectiva da orienta\u00e7\u00e3o a objetos contempla componentes e rela\u00e7\u00f5es entre componentes. A estas rela\u00e7\u00f5es chamamos genericamente de depend\u00eancias.</p>"},{"location":"programacao/oop/relacoes/#dependencia","title":"Depend\u00eancia","text":"<p>A depend\u00eancia entre duas classes ocorre quando uma classe \\(A\\) utiliza recursos da classe \\(B\\), de modo que altera\u00e7\u00f5es na classe \\(B\\) podem afetar a classe \\(A\\).</p> classDiagram     direction LR     ClassA ..&gt; ClassB  <p>Depend\u00eancias s\u00e3o extremamente comuns e se estabelecem quando utilizamos na classe \\(A\\) a classe \\(B\\) para definir  tipo de atributos, tipo de retorno de m\u00e9todo, tipo de par\u00e2metros, tipo de vari\u00e1veis ou simplesmente fazemos uso de um m\u00e9todo est\u00e1tico de provido por \\(B\\). </p> <p>Pela grande ocorr\u00eancia de depend\u00eancias entre classes, precisamos ser mais seletivos quando a observamos, mantendo aten\u00e7\u00e3o \u00e0quelas em que existem restri\u00e7\u00f5es/especificidades maiores que o trivial uso. Neste caso, pensamos em termos de associa\u00e7\u00f5es e especializa\u00e7\u00f5es/generaliza\u00e7\u00f5es.</p>"},{"location":"programacao/oop/relacoes/#associacao","title":"Associa\u00e7\u00e3o","text":"<p>A associa\u00e7\u00e3o \u00e9 um relacionamento de depend\u00eancia que indica a exist\u00eancia de comunica\u00e7\u00e3o entre duas classes. Pode ser <code>unidirecional</code> ou <code>bidirecional</code> e tamb\u00e9m comporta informa\u00e7\u00e3o de multiplicidade.</p> <p>A associa\u00e7\u00e3o implica no uso de um tipo em outro. A dire\u00e7\u00e3o da associa\u00e7\u00e3o d\u00e1 o caminho poss\u00edvel para navega\u00e7\u00e3o. Em nosso exemplo, temos a classe <code>Venda</code> fazendo uso de um objeto de <code>Cliente</code>. Toda venda ter\u00e1 \\(1\\) cliente e, na perspectiva do cliente, poder\u00e1 haver diversas vendas associadas a ele. Contudo, podemos navegar apenas de <code>Venda</code> para  <code>Cliente</code>, ou seja, \u00e9 <code>unidirecional</code>.</p>  classDiagram   Venda \"0..*\" --&gt; \"1..1\" Cliente   <p>Se quis\u00e9ssemos uma associa\u00e7\u00e3o <code>bidirecional</code>, expressar\u00edamos a rela\u00e7\u00e3o da seguinte forma:</p>  classDiagram   Venda \"0..*\" &lt;--&gt; \"1..1\" Cliente"},{"location":"programacao/oop/relacoes/#agregacao","title":"Agrega\u00e7\u00e3o","text":"<p>Na agrega\u00e7\u00e3o, duas classes relacionam-se por meio de um v\u00ednculo do tipo <code>todo-parte</code> ou <code>tem um</code>. Neste tipo de associa\u00e7\u00e3o, temos um classe que <code>est\u00e1 contida</code> ou \u00e9 <code>uma parte de</code> de outra classe.</p> <p>A agrega\u00e7\u00e3o ocorre quando o objeto <code>todo</code> requer  objetos <code>parte</code> para complement\u00e1-lo, para ter sentido completo. \u00c9 uma rela\u00e7\u00e3o fraca entre os componentes, de modo que se o objeto todo for destru\u00eddo, os objetos parte podem permanecer existindo.</p> <p>\u00c9 o que ocorre com o conceito de turma para determinada disciplina. A turma ter\u00e1 v\u00e1rios estudantes,  \\(1\\) professor e \\(1\\) disciplina vinculada. A turma depende destes componentes para ser completa. Contudo, ao removermos a turma, os demais objetos que s\u00e3o parte continuam existindo. Observe que a representa\u00e7\u00e3o da agrega\u00e7\u00e3o se d\u00e1 por meio de um losango ao lado do objeto <code>todo</code>.</p>  classDiagram   Turma \"1..*\" o--&gt; \"1..*\" Estudante   Turma \"1..*\" o--&gt; \"1..1\" Professor   Turma \"1..*\" o--&gt; \"1..1\" Disciplina"},{"location":"programacao/oop/relacoes/#composicao","title":"Composi\u00e7\u00e3o","text":"<p>A composi\u00e7\u00e3o, por sua vez, \u00e9 uma associa\u00e7\u00e3o forte entre classes, tamb\u00e9m caracterizada pelo conceito <code>todo-parte</code>. Mas, diferente da agrega\u00e7\u00e3o, o ciclo de vida dos objetos <code>parte</code> \u00e9 gerenciado pelo objeto <code>todo</code>, pois a exist\u00eancia da <code>parte</code> sem o <code>todo</code> n\u00e3o faz sentido. Perceba que o losango est\u00e1 preenchido no diagrama, diferentemente do que ocorre na agrega\u00e7\u00e3o.</p>  classDiagram   Funcionario \"1..1\" *-- \"0..*\" Dependente"},{"location":"programacao/oop/relacoes/#heranca","title":"Heran\u00e7a","text":"<p>A heran\u00e7a, um dos pilares da POO, est\u00e1 intimamente associada com o reuso de software. Se podemos pensar componentes do software como sendo dispostos em uma taxionomia, em que ir\u00e3o existir componentes mais gen\u00e9ricos e outros mais espec\u00edficos que deles derivam, ent\u00e3o estamos pensando em uma rela\u00e7\u00e3o de heran\u00e7a.</p> <p>Heran\u00e7a \u00e9 um relacionamento forte entre classes, que implica em alto acoplamento e que permite a uma classe herdar membros de outra. Dizemos, portanto, que \u00e9 um relacionamento do tipo <code>\u00e9 um</code> em que a superclasse mant\u00e9m sua integridade e a especializa\u00e7\u00e3o \u00e9 feita na classe dela derivada.</p> <p>Importante ressaltar que, mesmo sendo um dos pilares da POO, optar por heran\u00e7a \u00e9 uma decis\u00e3o que requer reflex\u00e3o, pois o acoplamento entre os componentes se intensifica, o que geralmente \u00e9 ruim em termos de arquitetura de software.</p> <p>Dica</p> <p>Membro de classe \u00e9 a designa\u00e7\u00e3o gen\u00e9rica que utilizamos para m\u00e9todo ou atributo.</p> <p>Vamos entender melhor como o relacionamento de heran\u00e7a se estabelece e quais s\u00e3o as implica\u00e7\u00f5es t\u00e9cnicas do seu uso. Nosso exemplo ir\u00e1 apresentar uma situa\u00e7\u00e3o simples de um modelo de neg\u00f3cio envolvendo professores e estudantes. Nele vamos ter a superclasse <code>Pessoa</code> e duas classes derivadas: <code>Estudante</code> e <code>Professor</code>.</p>  classDiagram      Pessoa &lt;|-- Estudante     Pessoa &lt;|-- Professor      class Pessoa{       -String nomeCompleto       -Date dataNascimento       -String numeroCPF       -String endereco       +getCPF()       +getEndereco()       +getNomeCompleto()       +getDataNascimento()       +setEndereco(String endereco)     }     class Estudante{       -int numeroMatricula       -Pessoa responsavelLegal       -String enderecoEmail       +getNumeroMatricula()       +getResponsavelLegal()       +getEnderecoEmail     }     class Professor{       - numeroNIT       - especialidade       - regimeTrabalho       + getNumeroNIT()       + getEspecialidade()       + getRegimeTrabalho()     }    <p>Dica</p> <pre><code>`Classe derivada` ou `subclasse` \u00e9 toda aquela que especializa uma ou mais `superclasses` ou `classes base`. Em nosso exemplo, `Pessoa` \u00e9 a superclasse, representando o tipo mais gen\u00e9rico da taxionomia. J\u00e1 `Professor` e `Estudante` s\u00e3o subclasses, ou seja, tipos mais espec\u00edficos que aprimoram `Pessoa` novos membros. Precisamos considerar tamb\u00e9m que uma classe pode ter superclasses e/ou subclasses `indiretas`, no caso em que a taxionomia possui diversos n\u00edveis.\n</code></pre> <p>A rela\u00e7\u00e3o entre as nossas classes de exemplo permite afirmar que <code>Professor</code> \u00e9 uma <code>Pessoa</code> e que <code>Estudante</code> \u00e9 uma pessoa. J\u00e1 o inverso n\u00e3o \u00e9 poss\u00edvel: <code>Pessoa</code> n\u00e3o \u00e9 <code>Professor</code>, nem <code>Estudante</code>. Ainda, podemos observar que a heran\u00e7a \u00e9 <code>simples</code>, haja vista que as classes derivadas herdam de apenas uma \u00fanica superclasse.</p> <p>Agora vamos propor um caso de <code>heran\u00e7a m\u00faltipla</code>. Em nosso diagrama temos as classes <code>Colaborador</code>, <code>LiderSindical</code> e <code>Engenheiro Civil</code>, sendo esta \u00faltima derivada das anteriores. Para simplificar o diagrama, omitimos boa parte dos atributos e m\u00e9todos.</p>  classDiagram      Colaborador &lt;|-- Engenheiro Civil     LiderSindical &lt;|-- Engenheiro Civil       class LiderSindical{       -String categoria      }      class Engenheiro Civil{       -String registroCREA     }      class Colaborador{      -String cpf     }   <p>Embora a heran\u00e7a m\u00faltipla seja poss\u00edvel, nem todas as linguagens oferecem suporte. No Java, por exemplo, temos somente heran\u00e7a <code>simples</code>, enquanto que C++ e Python temos a possibilidade de herdar de m\u00faltiplas classes. </p> <p>De qualquer forma, seja simples ou m\u00faltipla, o relacionamento de heran\u00e7a permite \u00e0s classes derivadas acesso a membros da superclasse. Contudo, algumas linguagens definem modificadores de visibilidade ou estrat\u00e9gias que impedem acesso direto \u00e0 membros em classes derivadas. No caso da linguagem Java, membros definidos como <code>private</code> ficam inacess\u00edveis nas classes derivadas, o que \u00e9 especialmente conveniente para se preservar o encapsulamento e a integridade da superclasse.</p> <p>J\u00e1 os construtores n\u00e3o s\u00e3o automaticamente herdados pelas classes derivadas. Toda classe precisa definir os seus e, quando h\u00e1 heran\u00e7a envolvida, construtores das classes derivadas devem chamar obrigatoriamente algum dos construtores dispon\u00edveis na superclasse (e se for heran\u00e7a m\u00faltipla, precisamos considerar cada uma das superclasses). Logo, as chamadas se propagam at\u00e9 a classe mais gen\u00e9rica da hierarquia, sendo seu construtor o primeiro a executar. \u00c9 o que demonstramos na ilustra\u00e7\u00e3o a seguir, de forma simplificada, considerando as classes de nosso exemplo anterior.</p> <p></p> <p>A cadeia de chamada aos construtores \u00e9 necess\u00e1ria para que o objeto seja inicializado de forma consistente, segundo as regras implementadas em cada classe. Cada construtor ir\u00e1 tratar, portanto, de uma parte do objeto da subclasse, partindo do tipo mais gen\u00e9rico at\u00e9 o mais especializado.</p>"},{"location":"programacao/oop/relacoes/#implementando-heranca","title":"Implementando Heran\u00e7a","text":"<p>Cada linguagem de programa\u00e7\u00e3o estabelece a sintaxe e palavras reservadas utilizadas na constru\u00e7\u00e3o do relacionamento heran\u00e7a. Em nossos exemplos, apresentaremos c\u00f3digos escritos em C++, Python e Java.</p> <p>Na linguagem Java, a heran\u00e7a ocorre por meio de extens\u00e3o. A classe derivada, em sua declara\u00e7\u00e3o utiliza a palavra reservada <code>extends</code> para indicar a superclasse. J\u00e1 no Python, as superclasses s\u00e3o informadas entre parenteses na declara\u00e7\u00e3o da subclasse.</p> <p>No c\u00f3digo a seguir evidenciamos linhas em que h\u00e1 declara\u00e7\u00e3o de construtores e/ou chamada a construtores da superclasse. Perceba que a palavra reservada <code>super</code> est\u00e1 sendo utilizada para fazer refer\u00eancia \u00e0 membros da superclasse, inclusive construtores.</p> JavaPythonC++ <pre><code>  import java.time.LocalDate;\n\n  class Pessoa {\n      private String nomeCompleto, endereco, cpf, email;\n      private LocalDate dataNascimento;\n\n\n      public Pessoa(String cpf, LocalDate dataNascimento, String nomeCompleto, String endereco) throws Exception {\n          this(cpf, dataNascimento);\n          this.nomeCompleto = nomeCompleto;\n          this.endereco = endereco;\n      }\n\n\n      public Pessoa(String cpf, LocalDate dataNascimento) throws Exception {\n          this.setCPF(cpf);\n          this.dataNascimento = dataNascimento;\n      }\n\n      private void setCPF(String cpf) throws Exception {\n          if (cpf.length() != 11)\n              throw new Exception(\"CPF deve ter 11 caracteres\");\n          else\n              this.cpf = cpf;\n      }\n\n      public void setNomeCompleto(String nome) {\n          this.nomeCompleto = nome;\n\n      }\n\n      public LocalDate getDataNascimento() {\n          return this.dataNascimento;\n      }\n\n      public String getCpf() {\n          return this.cpf;\n      }\n\n      public String getNomeCompleto() {\n          return this.nomeCompleto.toUpperCase();\n      }\n\n      public void setEndereco(String endereco) {\n          this.endereco = endereco;\n      }\n\n      public String getEndereco() {\n          return this.endereco;\n      }\n\n      public void setEmail(String email) {\n          this.email = email;\n      }\n\n      public String getEmail() {\n          return this.email;\n      }\n\n      @Override\n      public String toString() {        \n          return String.format(\"Pessoa: %s %s %s\", this.cpf, this.nomeCompleto, this.dataNascimento);\n      }\n  }     \n\n  class Estudante extends Pessoa {\n    private String numeroMatricula;\n\n\n    public Estudante(String numeroMatricula, String cpf, LocalDate dataNascimento) throws Exception{\n        super(cpf,dataNascimento);\n        this.numeroMatricula = numeroMatricula;      \n    }\n\n    public String getMatricula(){\n        return this.numeroMatricula;\n    }\n\n    @Override\n    public String toString() {\n        return String.format(\"Estudante: %s %s %s %s\", this.numeroMatricula,this.getCpf(), this.getNomeCompleto(), this.getDataNascimento());\n    }\n  }\n</code></pre> <pre><code>  class Pessoa:\n    def __init__(self, cpf, data_nascimento):\n        self.__cpf = cpf\n        self.__data_nascimento = data_nascimento\n        self.__nome_completo=\"\"\n        self.__endereco = \"\"\n        self.__email = \"\"\n\n    @property\n    def email(self):\n        return self.__email\n\n    @email.setter\n    def email(self, email):\n        self.__email = email\n\n    @property\n    def endereco(self):\n        return self.__endereco\n\n    @endereco.setter\n    def endereco (self, endereco):\n        self.__endereco = endereco\n\n    @property\n    def data_nascimento(self):\n        return self.__data_nascimento\n\n    @property\n    def cpf(self):\n        return self.__cpf\n\n    @property\n    def nome_completo(self):\n        return self.__nome_completo\n\n    @nome_completo.setter\n    def nome_completo(self, nome_completo):\n        self.__nome_completo = nome_completo\n\n    def __str__(self) -&gt; str:\n    return f'Pessoa {self.cpf} -  {self.nome_completo}'\n\n  class Estudante(Pessoa):   \n    def __init__(self, cpf, data_nascimento, nr_matricula):\n        super.__init_(self, cpf, data_nascimento)        \n        self.__numero_matricula = nr_matricula\n\n    @property\n    def matricula(self):\n        return self.__numero_matricula\n\n    def __str__(self) -&gt; str:\n        return f'Estudante {self.matricula} - {self.nome_completo}'\n</code></pre> <pre><code>  /* em breve */\n</code></pre>"},{"location":"programacao/oop/relacoes/#sobrescrita","title":"Sobrescrita","text":"<p>Por vezes, a classe derivada precisa <code>redefinir</code> um m\u00e9todo recebido de uma superclasse direta ou indireta. Isso ocorre porque a implementa\u00e7\u00e3o recebida n\u00e3o atende o comportamento necess\u00e1rio na subclasse. Neste caso, sobrescrevemos o m\u00e9todo.</p> <p><code>Sobrescrever</code> significa preservar a assinatura do m\u00e9todo tal qual est\u00e1 na superclasse, mas alterar seu corpo (implementa\u00e7\u00e3o). Com isso, preservamos a interface de comunica\u00e7\u00e3o com os objetos, mas teremos comportamentos distintos a depender do tipo de objeto que estamos considerando (se da superclasse ou da subclasse).</p> <p>\u00c9 o caso do m\u00e9todo <code>toString()</code> presente na implementa\u00e7\u00e3o das classes <code>Pessoa</code> e <code>Estudante</code> em Java. Em ambas as classes temos sobrescrita do mesmo, visto que ele \u00e9 definido na classe <code>Object</code>, a superclasse direta ou indireta de qualquer classe na linguagem Java. Dado que sua implementa\u00e7\u00e3o original n\u00e3o nos serve, atribu\u00edmos nova codifica\u00e7\u00e3o, sem fazer qualquer altera\u00e7\u00e3o na implementa\u00e7\u00e3o original do m\u00e9todo de Object (preserva\u00e7\u00e3o da integridade da classe). O mesmo ocorre com o m\u00e9todo especial str (dundle str) da implementa\u00e7\u00e3o em Python.</p> <p>Ao redefinir o m\u00e9todo, precisamos tomar cuidado para n\u00e3o alterar sua assinatura, pois se isso ocorrer estaremos realizando uma <code>sobrecarga</code>. No Java, a anota\u00e7\u00e3o <code>@Override</code> nos d\u00e1 esta seguran\u00e7a, delegando ao compilador a responsabilidade por validar a exist\u00eancia de um m\u00e9todo de superclasse com a assinatura informada. N\u00e3o havendo tal m\u00e9todo, um erro de compila\u00e7\u00e3o \u00e9 lan\u00e7ado.</p>"},{"location":"programacao/python/colecoes/","title":"Cole\u00e7\u00f5es de Dados - Listas, Tuplas, Conjuntos e Dicion\u00e1rios","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#listas","title":"Listas","text":"<p>As listas s\u00e3o uma estrutura de dados vers\u00e1til que permite armazenar cole\u00e7\u00f5es de itens em uma ordem espec\u00edfica. S\u00e3o mut\u00e1veis, o que significa que voc\u00ea pode adicionar, remover e modificar itens conforme necess\u00e1rio sem gerar uma c\u00f3pia do objeto. Normalmente, as listas s\u00e3o utilizadas para armazenar dados de forma homogenea, ou seja, com todos os items apresentando mesmo tipo, embora n\u00e3o haja restri\u00e7\u00e3o quanto a isso.</p> <p>Para criar uma lista em Python, utilizamos colchetes <code>[]</code> e separamos os itens com v\u00edrgulas. Por exemplo:</p> <p><pre><code>minha_lista = [1, 2, 3, 4, 5]\n</code></pre> Outra possibilidade \u00e9 criar uma lista vazia e ir adicionando itens a mesma atrav\u00e9s do m\u00e9todo <code>append</code>.</p> <pre><code>outra_lista = []\noutra_lista.append(10)\noutra_lista.append(20)\n</code></pre> <p>Para acessarmos os elementos, utilizandos colchetes <code>[]</code>, com o \u00edndice do elemento desejado. Lembre-se de que os \u00edndices em Python come\u00e7am em 0. Lembre-se tamb\u00e9m que podemos utilizar aqui as opera\u00e7\u00f5es de slicing j\u00e1 vistas. Por exemplo:</p> <pre><code>print(minha_lista[0]) \nprint(minha_lista[2])\n</code></pre> <p>Para modificar um elemento, atribu\u00edmos um novo valor ao respectivo \u00edndice:</p> <pre><code>minha_lista[0] = 100\nprint(minha_lista)  \n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#principais-operacoes-e-funcoes","title":"Principais opera\u00e7\u00f5es e fun\u00e7\u00f5es","text":"<p>As principais opera\u00e7\u00f5es que podem ser realizadas com listas s\u00e3o:</p> <ul> <li>Adi\u00e7\u00e3o de elementos: <code>append()</code>, <code>insert()</code></li> <li>Remo\u00e7\u00e3o de elementos: <code>remove()</code>, <code>pop()</code></li> <li>Ordena\u00e7\u00e3o: <code>sort()</code></li> <li>Revers\u00e3o: <code>reverse()</code></li> <li>Concatena\u00e7\u00e3o: <code>+</code></li> </ul> <p>J\u00e1 em termos de fun\u00e7\u00f5es,  relacionam-se \u00e0s listas as fun\u00e7\u00f5es:</p> <ul> <li><code>len()</code>: Retorna o n\u00famero de elementos em uma lista.</li> <li><code>sum()</code>: Retorna a soma de todos os elementos em uma lista.</li> <li><code>max()</code>: Retorna o elemento m\u00e1ximo em uma lista.</li> <li><code>min()</code>: Retorna o elemento m\u00ednimo em uma lista.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#iteracao-de-elementos","title":"Itera\u00e7\u00e3o de elementos","text":"<p>Para iterar sobre os elementos de uma lista, podemos utilizar o la\u00e7o <code>for</code>. Por exemplo:</p> <pre><code>for item in minha_lista:\n    print(item)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#list-comprehension","title":"List Comprehension","text":"<p>List Comprehension \u00e9 uma maneira concisa e elegante de criar listas em Python. Ela permite criar listas de forma mais eficiente e leg\u00edvel, muitas vezes em uma \u00fanica linha de c\u00f3digo.</p> <p>A sintaxe utilizada \u00e9 apresentada na sequ\u00eancia. Observe que <code>express\u00e3o</code> define cada elemento da nova lista, enquanto <code>item</code> corresponde ao elemento presente em <code>iter\u00e1vel</code> do atual ciclo de itera\u00e7\u00e3o.</p> <pre><code>[express\u00e3o for item in iter\u00e1vel]\n</code></pre> <p>Vejamos alguns exemplos concretos:</p> <ol> <li>Criando uma lista de n\u00fameros ao quadrado:</li> </ol> <pre><code>quadrados = [x ** 2 for x in range(1, 6)]\n</code></pre> <ol> <li>Filtrando uma lista para conter apenas n\u00fameros pares:</li> </ol> <pre><code>numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\npares = [x for x in numeros if x % 2 == 0]\n</code></pre> <ol> <li>Criando uma lista de tuplas com valores invertidos:</li> </ol> <pre><code>tuplas = [(x, y) for x in range(1, 4) for y in range(1, 4)]\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#tuplas","title":"Tuplas","text":"<p>Uma tupla \u00e9 uma estrutura de dados semelhante a uma lista, mas com a diferen\u00e7a crucial de que ela \u00e9 imut\u00e1vel, o que significa que uma vez que uma tupla \u00e9 criada, seus elementos n\u00e3o podem ser alterados. As tuplas s\u00e3o definidas utilizando par\u00eanteses <code>()</code>.</p> <p>Tuplas s\u00e3o utilizadas para agregar dados diversos, mantendo-os imut\u00e1veis e dispostos de uma determinada ordem.</p> <pre><code>minha_tupla = (1, 2, 3, 4, 5)\ntupla_vazia = ()\n</code></pre> <p>Se houver apenas um elemento na tupla, \u00e9 necess\u00e1rio incluir uma v\u00edrgula ap\u00f3s o elemento para diferenci\u00e1-lo de uma express\u00e3o entre par\u00eanteses. Por exemplo:</p> <pre><code>tupla_com_um_elemento = (10,)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#acessando-elementos","title":"Acessando Elementos","text":"<p>Para acessar os elementos de uma tupla utilizando \u00edndices, da mesma forma que faria com uma lista:</p> <pre><code>print(minha_tupla[0])  # Sa\u00edda: 1\nprint(minha_tupla[2])  # Sa\u00edda: 3\n</code></pre> <p>Lembre-se que as tuplas s\u00e3o imut\u00e1veis. Isso significa que uma vez que uma tupla \u00e9 criada, voc\u00ea n\u00e3o pode adicionar, remover ou modificar elementos.  </p> <p>Claro! Aqui est\u00e1 uma documenta\u00e7\u00e3o detalhada sobre dicion\u00e1rios em Python:</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#dicionarios","title":"Dicion\u00e1rios","text":"<p>Um dicion\u00e1rio em Python \u00e9 uma estrutura de dados que armazena pares chave-valor. Ele \u00e9 uma das estruturas de dados mais utilizadas devido \u00e0 sua efici\u00eancia e flexibilidade. Os dicion\u00e1rios s\u00e3o mut\u00e1veis, o que significa que voc\u00ea pode adicionar, modificar e remover itens conforme necess\u00e1rio. Cada chave em um dicion\u00e1rio deve ser \u00fanica e associada a um \u00fanico valor. As chaves podem ser de qualquer tipo imut\u00e1vel, como strings, n\u00fameros e tuplas.</p> <p>Para criar um dicion\u00e1rio, devemos utilizar a sintaxe de chaves <code>{}</code> e especificar os pares chave-valor separados por v\u00edrgulas. Por exemplo:</p> <pre><code>meu_dicionario = {\"nome\": \"Alice\", \"idade\": 30, \"cidade\": \"Nova York\"}\n</code></pre> <p>Tamb\u00e9m \u00e9 poss\u00edvel criar um dicion\u00e1rio vazio e adicionar itens posteriormente:</p> <pre><code>outro_dicionario = {}\noutro_dicionario[\"marca\"] = \"Toyota\"\noutro_dicionario[\"modelo\"] = \"Corolla\"\n</code></pre> <p>O acesso aos valores de um dicion\u00e1rio se d\u00e1 por meio das chaves correspondentes. Por exemplo:</p> <pre><code>print(meu_dicionario[\"nome\"])\nprint(meu_dicionario[\"idade\"])\n</code></pre> <p>Se a chave n\u00e3o existir no dicion\u00e1rio, ser\u00e1 lan\u00e7ada uma exce\u00e7\u00e3o <code>KeyError</code>. Para evitar isso, podemos utilizar usar o m\u00e9todo <code>get()</code>:</p> <pre><code>print(meu_dicionario.get(\"cidade\", \"N\u00e3o encontrado\"))  # Sa\u00edda: Nova York\nprint(meu_dicionario.get(\"profiss\u00e3o\", \"N\u00e3o encontrado\"))  # Sa\u00edda: N\u00e3o encontrado\n</code></pre> <p>Para remover um par chave-valor, utilizamos o comando <code>del</code>:</p> <pre><code>del meu_dicionario[\"idade\"]\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#metodos-uteis","title":"M\u00e9todos \u00dateis","text":"<ul> <li><code>keys()</code>: Retorna uma lista contendo todas as chaves do dicion\u00e1rio.</li> <li><code>values()</code>: Retorna uma lista contendo todos os valores do dicion\u00e1rio.</li> <li><code>items()</code>: Retorna uma lista de tuplas contendo todos os pares chave-valor do dicion\u00e1rio.</li> <li><code>update()</code>: Atualiza o dicion\u00e1rio com os pares chave-valor de outro dicion\u00e1rio ou de uma sequ\u00eancia de pares chave-valor.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#conjuntos","title":"Conjuntos","text":"<p>Um conjunto \u00e9 uma estrutura de dados que armazena elementos \u00fanicos e n\u00e3o ordenados. Os conjuntos s\u00e3o muito \u00fateis para realizar opera\u00e7\u00f5es de conjunto oriundos da Matem\u00e1tica, como uni\u00e3o, interse\u00e7\u00e3o, diferen\u00e7a e teste de pertencimento. Os conjuntos s\u00e3o mut\u00e1veis, assim como listas e dicion\u00e1rios.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#criando-um-conjunto","title":"Criando um Conjunto","text":"<p>Para criar um conjunto utilizamos a fun\u00e7\u00e3o <code>set()</code> ou a sintaxe de chaves <code>{}</code>. Por exemplo:</p> <p><pre><code>meu_conjunto = {1, 2, 3, 4, 5}\n</code></pre> J\u00e1 para criar um conjunto vazio, a \u00fanica op\u00e7\u00e3o \u00e9 usar <code>set()</code>:</p> <pre><code>conjunto_vazio = set()\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#adicionar-e-remover-elementos","title":"Adicionar e Remover Elementos","text":"<p>Para adicionar elementos, utilizamos o m\u00e9todo <code>add()</code>:</p> <pre><code>meu_conjunto.add(6)\n</code></pre> <p>Para remover um elemento, temos os m\u00e9todos <code>remove()</code> ou <code>discard()</code>. A diferen\u00e7a \u00e9 que <code>remove()</code> gera um erro se o elemento n\u00e3o estiver presente no conjunto, enquanto <code>discard()</code> n\u00e3o gera nenhum erro:</p> <pre><code>meu_conjunto.remove(5)\nmeu_conjunto.discard(2)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#operacoes-de-conjunto","title":"Opera\u00e7\u00f5es de Conjunto","text":"<p>Tal qual ocorre na Matem\u00e1tica, o uso de conjuntos no Python oferece suporte \u00e0s mesmas opera\u00e7\u00f5es. Para fins did\u00e1ticos, vamos utilizar como exemplo dois conjuntos de n\u00fameros inteiros, identificados pelas vari\u00e1veis <code>conjunto_a</code> e <code>conjunto_b</code>. Tais conjuntos cont\u00e9m os seguintes valores:</p> <pre><code>conjunto_a = {1, 3, 5, 7, 9}\nconjunto_b = {2, 4, 6, 8, 10}\n\nprint(\"Conjunto A:\", conjunto_a)\nprint(\"Conjunto B:\", conjunto_b)\n</code></pre> <p>Agora, vamos \u00e0s opera\u00e7\u00f5es:</p> <ul> <li><code>union()</code>, <code>|</code>: Retorna um novo conjunto com todos os elementos de ambos os conjuntos.</li> </ul> <pre><code>conjunto_uniao = conjunto_a | conjunto_b\nprint(\"Conjunto Uni\u00e3o:\", conjunto_uniao)\n</code></pre> <ul> <li><code>intersection()</code>, <code>&amp;</code>: Retorna o que h\u00e1 de comum entre ambos os conjuntos.</li> </ul> <pre><code>conjunto_inserseccao = conjunto_a &amp; conjunto_b\nprint(\"Conjunto Intersec\u00e7\u00e3o:\", conjunto_inserseccao)\n</code></pre> <ul> <li><code>difference()</code>, <code>-</code>: Retorna um novo conjunto com os elementos presentes no primeiro conjunto que n\u00e3o est\u00e3o no segundo.</li> </ul> <pre><code>conjunto_diferenca = conjunto_a - conjunto_b\nprint(\"Conjunto Diferen\u00e7a:\", conjunto_diferenca)\n</code></pre> <ul> <li><code>symmetric_difference()</code>, <code>^</code>: Retorna um novo conjunto contendo os elementos que est\u00e3o em apenas um dos conjuntos, nunca em ambos.</li> </ul> <pre><code>conjunto_diferenca = conjunto_a ^ conjunto_b\nprint(\"Conjunto Diferen\u00e7a:\", conjunto_diferenca)\n</code></pre> <ul> <li><code>issuperset()</code>, <code>&gt;=</code>: Verifica se um conjunto \u00e9 superconjunto de outro. Para ser superconjunto, \u00e9 necess\u00e1rio ter todos os elementos do outro conjunto avaliado, sendo poss\u00edvel ter elementos adicionais.</li> </ul> <pre><code>conjunto_a &gt;= conjunto_b\n</code></pre> <ul> <li><code>issubset()</code>, <code>&lt;=</code>: Verifica se um conjunto \u00e9 subconjunto de outro. Para ser subconjunto \u00e9 preciso que todos os elementos do conjunto estejam contidos no outro avaliado.</li> </ul> <pre><code>conjunto_a &lt;= conjunto_b\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/colecoes/#iterando-sobre-um-conjunto","title":"Iterando sobre um Conjunto","text":"<p>Assim como listas, podemos iterar conjuntos utilizando um loop <code>for</code>:</p> <pre><code>for elemento in meu_conjunto:\n    print(elemento)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/","title":"Comandos Condicionais","text":"<p>Em Python, assim como em praticamente todas as linguagens de programa\u00e7\u00e3o, os comandos condicionais desempenham um papel fundamental na execu\u00e7\u00e3o de um c\u00f3digo de forma controlada e adapt\u00e1vel. Eles permitem que um programa tome decis\u00f5es com base em condi\u00e7\u00f5es espec\u00edficas, direcionando o fluxo de execu\u00e7\u00e3o do c\u00f3digo de acordo com o resultado dessas condi\u00e7\u00f5es.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#comando-if","title":"Comando IF","text":"<p>O comando condicional mais b\u00e1sico em Python \u00e9 o IF, que permite verificar se uma condi\u00e7\u00e3o \u00e9 verdadeira e executar um bloco de c\u00f3digo associado a ela. </p> <pre><code>idade = 18\n\nif idade &gt;= 18:\n    print(\"Idade igual ou superior a 18 anos.\")\n</code></pre> <p>Neste exemplo, o c\u00f3digo verifica se a vari\u00e1vel <code>idade</code> \u00e9 maior ou igual a 18. Se for, ele imprime a mensagem <code>Idade igual ou superior a 18 anos.</code></p> <p>Al\u00e9m do <code>if</code>, Python tamb\u00e9m oferece o comando <code>else</code>, que pode ser utilizado em conjunto com o <code>if</code> para executar um bloco de c\u00f3digo quando a condi\u00e7\u00e3o especificada n\u00e3o \u00e9 verdadeira:</p> <pre><code>idade = 16\n\nif idade &gt;= 18:\n    print(\"Voc\u00ea \u00e9 maior de idade.\")\nelse:\n    print(\"Voc\u00ea \u00e9 menor de idade.\")\n</code></pre> <p>Neste caso, se a idade for menor que 18, o programa imprime <code>Voc\u00ea \u00e9 menor de idade.</code></p> <p>Por vezes, queremos avaliar m\u00faltiplas condi\u00e7\u00f5es. Para isso, utilizamos o comando <code>elif</code> (abrevia\u00e7\u00e3o de <code>else if</code>), que permite verificar condi\u00e7\u00f5es adicionais ap\u00f3s a condi\u00e7\u00e3o inicial <code>if</code>. Por exemplo:</p> <pre><code>idade = 20\n\nif idade &lt; 18:\n    print(\"Voc\u00ea \u00e9 menor de idade.\")\nelif idade == 18:\n    print(\"Voc\u00ea acabou de atingir a maioridade.\")\nelse:\n    print(\"Voc\u00ea \u00e9 maior de idade.\")\n</code></pre> <p>Neste caso, se a idade for igual a 18, o programa imprime <code>Voc\u00ea acabou de atingir a maioridade.</code> Se a idade for maior que 18, ele imprime <code>Voc\u00ea \u00e9 maior de idade.</code> Se nenhuma das condi\u00e7\u00f5es anteriores for verdadeira, o programa imprime <code>Voc\u00ea \u00e9 menor de idade.</code></p> <p>Os comandos condicionais em Python tamb\u00e9m podem ser aninhados, ou seja, podem conter outros comandos condicionais dentro deles. Isso permite uma l\u00f3gica mais complexa de decis\u00e3o em um programa.</p> <p>Conforme voc\u00ea deve ter observado, o comando <code>if</code> avalia uma express\u00e3o l\u00f3gica, cujos \u00fanicos valores poss\u00edveis s\u00e3o <code>VERDADEIRO</code> ou <code>FALSO</code>. Express\u00f5es nem sempre s\u00e3o t\u00e3o simples, contendo apenas uma premissa. Tipicamente, temos duas ou mais premissas l\u00f3gicas compondo as express\u00f5es. Neste caso, precisamos dos operadores l\u00f3gicos para compor a express\u00e3o.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#operadores-de-comparacao","title":"Operadores de compara\u00e7\u00e3o","text":"<p>Operadores de compara\u00e7\u00e3o s\u00e3o usados para comparar valores e express\u00f5es, resultando em valores booleanos (True ou False) que indicam se a compara\u00e7\u00e3o \u00e9 verdadeira ou falsa. Eles s\u00e3o usados para construir condi\u00e7\u00f5es l\u00f3gicas em instru\u00e7\u00f5es condicionais, loops e em muitas outras partes do c\u00f3digo onde a l\u00f3gica de decis\u00e3o \u00e9 necess\u00e1ria.</p> <p>Python oferece os seguintes operadores de compara\u00e7\u00e3o:</p> <ol> <li>== (igual a): Verifica se dois valores s\u00e3o iguais. N\u00e3o confunda com <code>=</code>, que indica atribui\u00e7\u00e3o.</li> <li>!= (diferente de): Verifica se dois valores s\u00e3o diferentes.</li> <li>&lt; (menor que): Verifica se o valor \u00e0 esquerda \u00e9 menor que o valor \u00e0 direita.</li> <li>&gt; (maior que): Verifica se o valor \u00e0 esquerda \u00e9 maior que o valor \u00e0 direita.</li> <li>&lt;= (menor ou igual a): Verifica se o valor \u00e0 esquerda \u00e9 menor ou igual ao valor \u00e0 direita.</li> <li>&gt;= (maior ou igual a): Verifica se o valor \u00e0 esquerda \u00e9 maior ou igual ao valor \u00e0 direita.</li> </ol> <p>Exemplos:</p> <pre><code>a = 5\nb = 10\n\n# Igual a\nprint(a == b)  # False\n\n# Diferente de\nprint(a != b)  # True\n\n# Menor que\nprint(a &lt; b)   # True\n\n# Maior que\nprint(a &gt; b)   # False\n\n# Menor ou igual a\nprint(a &lt;= b)  # True\n\n# Maior ou igual a\nprint(a &gt;= b)  # False\n</code></pre> <p>Esses operadores s\u00e3o frequentemente usados em instru\u00e7\u00f5es condicionais (como <code>if</code>, <code>elif</code>, <code>else</code>), onde o fluxo do programa depende do resultado das compara\u00e7\u00f5es.</p> <p>Tamb\u00e9m \u00e9 importante mencionar que os operadores de compara\u00e7\u00e3o podem ser combinados com operadores l\u00f3gicos (<code>and</code>, <code>or</code>, <code>not</code>) para criar condi\u00e7\u00f5es mais complexas. Isso permite construir l\u00f3gicas de decis\u00e3o mais elaboradas em um programa.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#operadores-logicos","title":"Operadores l\u00f3gicos","text":"<p>Operadores l\u00f3gicos s\u00e3o elementos fundamentais em linguagens de programa\u00e7\u00e3o que permitem combinar e avaliar condi\u00e7\u00f5es booleanas. Eles s\u00e3o essenciais para controlar o fluxo de execu\u00e7\u00e3o de um programa com base em diversas situa\u00e7\u00f5es e crit\u00e9rios.</p> <p>Em Python, existem tr\u00eas operadores l\u00f3gicos principais: <code>and</code>, <code>or</code> e <code>not</code>. Cada um deles desempenha um papel espec\u00edfico na avalia\u00e7\u00e3o e combina\u00e7\u00e3o de express\u00f5es booleanas.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#operador-and","title":"Operador <code>and</code>:","text":"<p>Este operador retorna <code>True</code> se ambas as express\u00f5es que ele conecta forem verdadeiras e <code>False</code> caso contr\u00e1rio. Ele \u00e9 frequentemente utilizado para verificar se m\u00faltiplas condi\u00e7\u00f5es devem ser atendidas para que uma determinada a\u00e7\u00e3o seja tomada. Por exemplo:</p> <pre><code>idade = 25\nif idade &gt;= 18 and idade &lt;= 30:\n    print(\"Voc\u00ea \u00e9 um adulto jovem.\")\n</code></pre> <p>Neste exemplo, a mensagem ser\u00e1 impressa apenas se a idade estiver entre 18 e 30 anos.</p> <p>Tabela Verdade para o Operador <code>and</code> (e)</p> <pre><code>| A     | B     | A and B |\n|-------|-------|---------|\n| True  | True  | True    |\n| True  | False | False   |\n| False | True  | False   |\n| False | False | False   |\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#operador-or","title":"Operador <code>or</code>:","text":"<p>Este operador retorna <code>True</code> se pelo menos uma das express\u00f5es que ele conecta for verdadeira e <code>False</code> apenas se ambas as express\u00f5es forem falsas. Ele \u00e9 \u00fatil quando pelo menos uma de v\u00e1rias condi\u00e7\u00f5es precisa ser verdadeira para que uma a\u00e7\u00e3o seja executada. Por exemplo:</p> <pre><code>sexo = \"feminino\"\nif sexo == \"feminino\" or sexo == \"masculino\":\n    print(\"Sexo v\u00e1lido.\")\n</code></pre> <p>Tabela Verdade para o Operador <code>or</code> (ou)</p> <pre><code>| A     | B     | A or B  |\n|-------|-------|---------|\n| True  | True  | True    |\n| True  | False | True    |\n| False | True  | True    |\n| False | False | False   |\n</code></pre> <p>Neste caso, a mensagem ser\u00e1 impressa se o valor da vari\u00e1vel <code>sexo</code> for <code>feminino</code> ou <code>masculino</code>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#operador-not","title":"Operador <code>not</code>:","text":"<p>Este operador \u00e9 utilizado para inverter o valor de uma express\u00e3o booleana. Se a express\u00e3o original for True, o <code>not</code> a transformar\u00e1 em False, e vice-versa. Ele \u00e9 frequentemente utilizado para verificar se uma condi\u00e7\u00e3o n\u00e3o \u00e9 verdadeira. Por exemplo:</p> <pre><code>idade = 15\nif not idade &gt;= 18:\n    print(\"Voc\u00ea \u00e9 menor de idade.\")\n</code></pre> <p>Neste exemplo, a mensagem ser\u00e1 impressa apenas se a idade n\u00e3o for maior ou igual a 18.</p> <p>Tabela Verdade para o Operador <code>not</code> (nega\u00e7\u00e3o)</p> A not A True False False True","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/condicionais/#match","title":"Match","text":"<p>O comando <code>match</code> foi introduzido no Python a partir da vers\u00e3o 3.10 e oferece uma nova forma de realizar m\u00faltiplas compara\u00e7\u00f5es de padr\u00f5es de forma mais leg\u00edvel e concisa do que as estruturas condicionais tradicionais.</p> <p>Ele \u00e9 especialmente \u00fatil quando se tem m\u00faltiplas condi\u00e7\u00f5es a serem verificadas e quando cada condi\u00e7\u00e3o envolve uma express\u00e3o de padr\u00e3o espec\u00edfica. O <code>match</code> funciona de maneira semelhante ao <code>switch</code> em outras linguagens de programa\u00e7\u00e3o.</p> <p>Vamos ver um exemplo de como o <code>match</code> pode ser usado:</p> <pre><code>def dia_da_semana(numero):\n    match numero:\n        case 1:\n            print(\"Domingo\")\n        case 2:\n            print(\"Segunda-feira\")\n        case 3:\n            print(\"Ter\u00e7a-feira\")\n        case 4:\n            print(\"Quarta-feira\")\n        case 5:\n            print(\"Quinta-feira\")\n        case 6:\n            print(\"Sexta-feira\")\n        case 7:\n            print(\"S\u00e1bado\")\n        case _:\n            print(\"N\u00famero inv\u00e1lido\")\n</code></pre> <p>Neste exemplo, a fun\u00e7\u00e3o <code>dia_da_semana</code> recebe um n\u00famero e utiliza o comando <code>match</code> para verificar qual dia da semana corresponde a esse n\u00famero. Se o n\u00famero corresponder a um dos casos especificados (de 1 a 7), o programa imprime o nome do dia correspondente. Caso contr\u00e1rio, imprime <code>N\u00famero inv\u00e1lido</code>.</p> <p>O <code>match</code> permite a combina\u00e7\u00e3o de padr\u00f5es mais complexos usando a sintaxe <code>case &lt;padr\u00e3o&gt; if &lt;condi\u00e7\u00e3o&gt;:</code>, onde <code>&lt;padr\u00e3o&gt;</code> \u00e9 um padr\u00e3o a ser verificado e <code>&lt;condi\u00e7\u00e3o&gt;</code> \u00e9 uma express\u00e3o booleana que tamb\u00e9m deve ser verdadeira para que a correspond\u00eancia seja feita.</p> <p><pre><code>match valor:\n    case valor if valor&gt;0 and valor%2==0:\n        print(\"PAR e POSITIVO\")\n    case valor if valor&gt;0 and valor%2!=0:\n        print(\"\u00cdMPAR e POSITIVO\")\n    case valor if valor&lt;0 and valor%2==0:\n        print(\"PAR e NEGATIVO\")\n    case valor if valor&lt;0 and valor%2!=0:\n        print(\"\u00cdMPAR e NEGATIVO\")\n    case _:\n        print(\"ZERO\")\n</code></pre> Tamb\u00e9m podemos testar v\u00e1rios valores em cada caso utilizando o operador <code>|</code>. Veja o exemplo.</p> <pre><code>match codigo:\n    case 0 | -1:\n        print(\"Valor 0 ou -1\")\n    case 1 | 2 | 3:\n        print(\"Valor 1, 2, ou 3.\")\n    case _:\n        print(\"Algum outro valor\")\n</code></pre> <p>Saiba mais em PEP 636 e Oficial Reference.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/excecoes/","title":"Python - Strings","text":"<p>O <code>try</code>, <code>except</code>, <code>finally</code> \u00e9 uma estrutura em Python que permite lidar com exce\u00e7\u00f5es de forma controlada e garantir que determinadas a\u00e7\u00f5es sejam executadas independentemente de ocorrer uma exce\u00e7\u00e3o ou n\u00e3o.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Try-Catch"]},{"location":"programacao/python/excecoes/#sintaxe","title":"Sintaxe:","text":"<p>A estrutura b\u00e1sica \u00e9 composta por tr\u00eas blocos:</p> <pre><code>try:\n    # C\u00f3digo que pode gerar exce\u00e7\u00f5es\n    # Se ocorrer uma exce\u00e7\u00e3o, o controle ser\u00e1 transferido para o bloco except correspondente\nexcept Excecao_Tipo_1:\n    # Bloco executado se ocorrer uma exce\u00e7\u00e3o do tipo ExcecaoTipo1\nexcept Excecao_Tipo_2:\n    # Bloco executado se ocorrer uma exce\u00e7\u00e3o do tipo ExcecaoTipo2\nelse:\n    # Bloco opcional executado se nenhuma exce\u00e7\u00e3o ocorrer no bloco try\nfinally:\n    # Bloco opcional executado sempre, independentemente de ocorrer uma exce\u00e7\u00e3o ou n\u00e3o\n</code></pre> <ul> <li> <p><code>try</code>: Este bloco cont\u00e9m o c\u00f3digo que pode gerar exce\u00e7\u00f5es.</p> </li> <li> <p><code>except</code>: Este bloco captura exce\u00e7\u00f5es espec\u00edficas que podem ocorrer dentro do bloco <code>try</code>. \u00c9 poss\u00edvel ter v\u00e1rios blocos <code>except</code> para diferentes tipos de exce\u00e7\u00f5es.</p> </li> <li> <p><code>else</code>: \u00c9 opcional e executado apenas se nenhuma exce\u00e7\u00e3o ocorrer dentro do bloco <code>try</code>. \u00c9 \u00fatil para c\u00f3digo que deve ser executado apenas se n\u00e3o houver exce\u00e7\u00f5es.</p> </li> <li> <p><code>finally</code>: O bloco <code>finally</code> \u00e9 sempre executado, independentemente de ocorrer uma exce\u00e7\u00e3o ou n\u00e3o dentro do bloco <code>try</code>. \u00c9 usado para garantir que determinadas a\u00e7\u00f5es, como a libera\u00e7\u00e3o de recursos, sejam executadas, mesmo em caso de exce\u00e7\u00e3o.</p> </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Try-Catch"]},{"location":"programacao/python/excecoes/#exemplo-de-uso","title":"Exemplo de Uso:","text":"<pre><code>try:\n    arquivo = open(\"arquivo.txt\", \"r\")\n    conteudo = arquivo.read()\n    print(conteudo)\nexcept FileNotFoundError:\n    print(\"O arquivo n\u00e3o foi encontrado.\")\nelse:\n    print(\"O arquivo foi lido com sucesso.\")\nfinally:\n    arquivo.close()  # Garante que o arquivo seja fechado, mesmo se ocorrer uma exce\u00e7\u00e3o\n</code></pre> <p>Neste exemplo:</p> <ul> <li> <p>O bloco <code>try</code> tenta abrir e ler um arquivo.</p> </li> <li> <p>Se o arquivo n\u00e3o for encontrado, uma exce\u00e7\u00e3o <code>FileNotFoundError</code> ser\u00e1 levantada e o bloco <code>except</code> correspondente ser\u00e1 executado, exibindo uma mensagem apropriada.</p> </li> <li> <p>Se o arquivo for lido com sucesso, o bloco <code>else</code> ser\u00e1 executado, indicando que o arquivo foi lido sem problemas.</p> </li> <li> <p>O bloco <code>finally</code> garante que o arquivo seja fechado, independentemente de ter sido lido com sucesso ou n\u00e3o.</p> </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Try-Catch"]},{"location":"programacao/python/excecoes/#utilizacoes-comuns","title":"Utiliza\u00e7\u00f5es Comuns:","text":"<ul> <li> <p>Manipula\u00e7\u00e3o de Arquivos: Usado para abrir, ler e fechar arquivos de forma segura, garantindo que os recursos sejam liberados adequadamente.</p> </li> <li> <p>Conex\u00f5es de Rede e Banco de Dados: \u00c9 comum usar <code>try</code>, <code>except</code>, <code>finally</code> ao lidar com opera\u00e7\u00f5es de rede ou banco de dados para garantir a limpeza adequada de recursos, como fechar conex\u00f5es.</p> </li> <li> <p>Valida\u00e7\u00e3o de Entrada de Usu\u00e1rio: Pode ser usado para validar entrada de usu\u00e1rio e lidar com erros de entrada de forma elegante.</p> </li> </ul> <p>A lista de exce\u00e7\u00f5es nativas do Python pode ser encontrada na documenta\u00e7\u00e3o oficial.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Try-Catch"]},{"location":"programacao/python/funcoes/","title":"Python - Fun\u00e7\u00f5es","text":"<p>Uma fun\u00e7\u00e3o \u00e9 um bloco de c\u00f3digo reutiliz\u00e1vel que realiza uma tarefa espec\u00edfica, geralmente encapsulando um conjunto de instru\u00e7\u00f5es para evitar a repeti\u00e7\u00e3o de c\u00f3digo e para modularizar um programa. O conceito de fun\u00e7\u00e3o \u00e9 fundamental na programa\u00e7\u00e3o, facilitando a escrita, a leitura, a manuten\u00e7\u00e3o e a reutiliza\u00e7\u00e3o do c\u00f3digo. Al\u00e9m disso, utilizar fun\u00e7\u00f5es melhora a testabilidade do c\u00f3digo, que uma propriedade muito importante em termos de qualidade.</p> <p>Toda fun\u00e7\u00e3o deve ser declarada para ent\u00e3o ser utilizada em outras partes do c\u00f3digo. A declara\u00e7\u00e3o da fun\u00e7\u00e3o compreende definir seu nome, uma lista de par\u00e2metros opcionais e um corpo que cont\u00e9m as instru\u00e7\u00f5es a serem executadas. Em Python, isso \u00e9 feito usando a palavra-chave <code>def</code>.</p> <pre><code>def minha_funcao(param1, param2):        \n    return param1 + param2\n</code></pre> <p>Uma vez definida, a fun\u00e7\u00e3o pode ser chamada ou invocada em qualquer parte do programa, passando os argumentos necess\u00e1rios, quando estes tiverem sido definidos.</p> <pre><code>    resultado = minha_funcao(10, 5)\n    print(resultado) \n</code></pre> <p>Vamos detalhar cada um dos componentes da declara\u00e7\u00e3o e invoca\u00e7\u00e3o de uma fun\u00e7\u00e3o na sequ\u00eancia:</p> <ul> <li>Nome da fun\u00e7\u00e3o: identificador \u00fanico que diferencia uma fun\u00e7\u00e3o das outras. Segue as regras de nomenclatura de vari\u00e1veis na linguagem de programa\u00e7\u00e3o. </li> <li>Par\u00e2metros: vari\u00e1veis listadas na defini\u00e7\u00e3o da fun\u00e7\u00e3o, que recebem os valores dos argumentos passados durante a chamada da fun\u00e7\u00e3o. S\u00e3o valores que a fun\u00e7\u00e3o ir\u00e1 receber do mundo externo e s\u00e3o utilizados para torn\u00e1-la gen\u00e9rica em prop\u00f3sito de uso. Lembre que par\u00e2metros s\u00e3o opcionais.</li> <li>Argumentos: nome formal dado aos valores passados para os respectivos par\u00e2metros da fun\u00e7\u00e3o quando ela \u00e9 chamada.</li> <li>Corpo da fun\u00e7\u00e3o: corresponde ao bloco de c\u00f3digo que define as opera\u00e7\u00f5es realizadas pela fun\u00e7\u00e3o. Esse bloco \u00e9 executado quando a fun\u00e7\u00e3o \u00e9 chamada. \u00c9 sua implementa\u00e7\u00e3o.</li> <li>Valor de retorno: O resultado que a fun\u00e7\u00e3o devolve ao ponto onde foi chamada, usando a palavra-chave <code>return</code>. Uma fun\u00e7\u00e3o pode n\u00e3o retornar nenhum valor. Neste caso, em Python, o valor <code>None</code> \u00e9 implicitamente retornado. Outras linguagens chamam de <code>void</code>.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/funcoes/#funcoes-com-numero-de-argumentos-variaveis","title":"Fun\u00e7\u00f5es com n\u00famero de argumentos vari\u00e1veis","text":"<p>H\u00e1 casos espec\u00edficos onde \u00e9 conveniente permitir que uma fun\u00e7\u00e3o possa receber uma quantidade indeterminada de argumentos. Para este fim, a linguagem Python oferece dois recursos distintos: usando <code>*args</code> para argumentos posicionais vari\u00e1veis e <code>**kwargs</code> para argumentos nomeados vari\u00e1veis.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/funcoes/#argumentos-posicionais-variaveis-args","title":"Argumentos Posicionais Vari\u00e1veis (<code>*args</code>)","text":"<p>Quando n\u00e3o sabemos de antem\u00e3o quantos argumentos ser\u00e3o passados para uma fun\u00e7\u00e3o, \u00e9 poss\u00edvel usar <code>*args</code> na defini\u00e7\u00e3o da fun\u00e7\u00e3o. <code>*args</code> permite que a fun\u00e7\u00e3o receba um n\u00famero arbitr\u00e1rio de argumentos posicionais, que s\u00e3o recebidos internamente como uma tupla.</p> <pre><code>def soma(*args):\n    return sum(args)\n\nprint(soma(1, 2, 3))        \nprint(soma(10, 20, 30, 40)) \n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/funcoes/#argumentos-nomeados-variaveis-kwargs","title":"Argumentos Nomeados Vari\u00e1veis (<code>**kwargs</code>)","text":"<p>Para o case de uma quantidade vari\u00e1vel de argumentos nomeados, utilizamos <code>**kwargs</code>. <code>**kwargs</code> permite que a fun\u00e7\u00e3o receba um n\u00famero arbitr\u00e1rio de argumentos nomeados, que s\u00e3o recebidos internamente como um dicion\u00e1rio.</p> <pre><code>def imprimir_dados(**kwargs):     \n    for chave, valor in kwargs.items():\n        print(f\"{chave}: {valor}\")\n\nimprimir_dados(nome=\"Alice\", idade=30, cidade=\"S\u00e3o Paulo\")\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/funcoes/#combinacao-de-args-e-kwargs","title":"Combina\u00e7\u00e3o de <code>*args</code> e <code>**kwargs</code>","text":"<p>\u00c9 poss\u00edvel combinar <code>*args</code> e <code>**kwargs</code> na mesma fun\u00e7\u00e3o para aceitar uma quantidade vari\u00e1vel de argumentos posicionais e nomeados. Quando usados juntos, <code>*args</code> deve vir antes de <code>**kwargs</code> na defini\u00e7\u00e3o da fun\u00e7\u00e3o.</p> <pre><code>def misturar_argumentos(a, b, *args, **kwargs):\n    print(f\"a: {a}, b: {b}\")\n    print(\"args:\", args)\n    print(\"kwargs:\", kwargs)\nmisturar_argumentos(1, 2, 3, 4, 5, x=10, y=20)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/funcoes/#escopo-e-ciclo-de-vida-de-variaveis","title":"Escopo e Ciclo de Vida de Vari\u00e1veis","text":"<p>Quando trabalhamos com fun\u00e7\u00f5es, assim como ocorre com outros comandos de bloco, devemos estar cientes do escopo de visibilidade das vari\u00e1veis e de seu ciclo de vida. O escopo de uma vari\u00e1vel refere-se ao contexto dentro do qual essa vari\u00e1vel \u00e9 reconhecida e pode ser utilizada na programa\u00e7\u00e3o.</p> <p>No escopo local, vari\u00e1veis ali definidas existem somente naquele contexto, n\u00e3o sendo acess\u00edveis fora dele. \u00c9 o caso de vari\u00e1veis criadas dentro de fun\u00e7\u00f5es. Sua exist\u00eancia se restringe ao corpo da fun\u00e7\u00e3o.</p> <pre><code>def minha_funcao():\n    x = 10  # X s\u00f3 existe no contexto desta fun\u00e7\u00e3o\n    print(x)\n</code></pre> <p>Est\u00e3o no escopo global, por sua vez, vari\u00e1veis definidas fora de qualquer fun\u00e7\u00e3o. Estas s\u00e3o acess\u00edveis em qualquer parte do programa. Sempre que poss\u00edvel, o escopo global deve ser evitado.</p> <pre><code>x = 10  # Esta vari\u00e1vel vale para todo o programa\ndef minha_funcao():\n    print(x)\n</code></pre> <p>Para certas situa\u00e7\u00f5es, \u00e9 necess\u00e1rio utilizar as palavras reservadas <code>global</code> e <code>nonlocal</code> para resolver quest\u00f5es associadas com escopo de vari\u00e1veis no Python.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/","title":"Python - Introdu\u00e7\u00e3o","text":"<p>Python \u00e9 uma linguagem de programa\u00e7\u00e3o de alto n\u00edvel, interpretada, multiparadigma e de tipagem din\u00e2mica. Desenvolvida por Guido van Rossum e lan\u00e7ada pela primeira vez em 1991, Python ganhou imensa popularidade devido \u00e0 sua sintaxe simples e legibilidade, tornando-a uma escolha preferida para uma variedade de aplica\u00e7\u00f5es, desde desenvolvimento web, ci\u00eancia de dados, engenharia de dados e automa\u00e7\u00e3o de tarefas, por exemplo. Possui um ecossistema muito rico em bibliotecas e ferramentas, as quais ajudaram a tornar a linguagem t\u00e3o popular no mercado de tecnologia. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#variaveis-e-constantes","title":"Vari\u00e1veis e Constantes","text":"<p>Em Python, as vari\u00e1veis s\u00e3o utilizadas para armazenar valores e s\u00e3o declaradas atribuindo um valor a um nome espec\u00edfico. Ao contr\u00e1rio de outras linguagens, Python n\u00e3o exige a declara\u00e7\u00e3o expl\u00edcita de tipos de dados, pois opera sob o princ\u00edpio da tipagem din\u00e2mica (o tipo de dado \u00e9 inferido pelo intepretador na medida que o c\u00f3digo \u00e9 analisado).</p> <p>No exemplo a seguir estamos declarando duas vari\u00e1veis. A primeira chama-se <code>numero</code> e a segunda, <code>nome</code>. Na primeira, o tipo de dado \u00e9 inteiro e sabemos disso a partir do valor atribu\u00eddo. J\u00e1 na segunda linha, a vari\u00e1vel <code>nome</code> \u00e9 inicializada com uma cadeia de caracteres, tamb\u00e9m conhecida como <code>string</code>.</p> <pre><code>numero = 10\nnome = \"Maria\"\n</code></pre> <p>No Python n\u00e3o temos palavra reservada para declarar constantes. Neste caso, utilizamos uma conven\u00e7\u00e3o, colocando o nome em caixa alta. Todavia, s\u00e3o vari\u00e1veis como qualquer outra.</p> <pre><code>PI = 3.14159\nGRAVIDADE = 9.8\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#tipos-de-dados","title":"Tipos de Dados","text":"<p>Python oferece diversos tipos de dados embutidos, incluindo:</p> <ul> <li>Inteiros (int): N\u00fameros inteiros, como <code>1</code>, <code>100</code>, <code>-5</code>.</li> <li>Float (float): N\u00fameros de ponto flutuante, como <code>3.14</code>, <code>2.0</code>, <code>-0.5</code>.</li> <li>String (str): Sequ\u00eancia de caracteres, como <code>\"Ol\u00e1, mundo!\"</code>, <code>'Python \u00e9 legal'</code>. (perceba que podemos inicializar com aspas simples ou duplas)</li> <li>Booleano (bool): Valores verdadeiro (<code>True</code>) ou falso (<code>False</code>).</li> <li>Lista (list): Cole\u00e7\u00e3o ordenada e mut\u00e1vel de itens.</li> <li>Tupla (tuple): Cole\u00e7\u00e3o ordenada e imut\u00e1vel de itens.</li> <li>Dicion\u00e1rio (dict): Cole\u00e7\u00e3o n\u00e3o ordenada de pares de chave-valor.</li> <li>Conjunto (set): Cole\u00e7\u00e3o n\u00e3o ordenada de itens \u00fanicos.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#entrada-e-saida","title":"Entrada e Sa\u00edda","text":"<p>Para receber entrada do usu\u00e1rio, Python oferece a fun\u00e7\u00e3o <code>input()</code>. O valor retornado ap\u00f3s executar a fun\u00e7\u00e3o foi o que o usu\u00e1rio digitou no terminal. Aqui estamos falando de entrada em terminal, ou seja, sem uso de interface gr\u00e1fica.</p> <p>No trecho de c\u00f3digo que segue, a mensagem <code>Digite seu nome:</code> \u00e9 impressa na tela e o cursor fica aguardando a entrada do usu\u00e1rio. Ap\u00f3s o usu\u00e1rio digitar os dados e pressionar ENTER, o valor \u00e9 armazenado na vari\u00e1vel <code>nome</code>.</p> <pre><code>nome = input(\"Digite seu nome: \")\n</code></pre> <p>J\u00e1 para exibir informa\u00e7\u00f5es para o usu\u00e1rio, podemos usar a fun\u00e7\u00e3o <code>print()</code>, conforme o exemplo a seguir. No c\u00f3digo em quest\u00e3o, ser\u00e1 impresso na tela a mensagem <code>Ol\u00e1,</code> acompanhada do valor da vari\u00e1vel <code>nome</code>.</p> <pre><code>print(\"Ol\u00e1,\", nome)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#operadores-aritmeticos","title":"Operadores Aritm\u00e9ticos","text":"<p>Em Python, os operadores aritm\u00e9ticos s\u00e3o utilizados para realizar opera\u00e7\u00f5es matem\u00e1ticas em valores num\u00e9ricos. S\u00e3o operadores como o de adi\u00e7\u00e3o, subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o, divis\u00e3o, por exemplo. Na sequ\u00eancia vamos apresentar eles.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#adicao","title":"Adi\u00e7\u00e3o (+)","text":"<p>O operador de adi\u00e7\u00e3o (+) \u00e9 utilizado para somar dois valores. Por exemplo:</p> <pre><code>resultado = 5 + 3\n# resultado ser\u00e1 igual a 8\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#subtracao-","title":"Subtra\u00e7\u00e3o (-)","text":"<p>O operador de subtra\u00e7\u00e3o (-) \u00e9 utilizado para subtrair um valor de outro. Por exemplo:</p> <pre><code>resultado = 10 - 7\n# resultado ser\u00e1 igual a 3\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#multiplicacao","title":"Multiplica\u00e7\u00e3o (*)","text":"<p>O operador de multiplica\u00e7\u00e3o (*) \u00e9 utilizado para multiplicar dois valores. Por exemplo:</p> <pre><code>resultado = 4 * 6\n# resultado ser\u00e1 igual a 24\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#divisao","title":"Divis\u00e3o (/)","text":"<p>O operador de divis\u00e3o (/) \u00e9 utilizado para dividir um valor pelo outro. Por exemplo:</p> <pre><code>resultado = 20 / 5\n# resultado ser\u00e1 igual a 4.0 (resultado sempre ser\u00e1 um float em Python 3.x)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#divisao-inteira","title":"Divis\u00e3o Inteira (//)","text":"<p>O operador de divis\u00e3o inteira (//) divide um valor pelo outro e retorna apenas a parte inteira do resultado. Por exemplo:</p> <pre><code>resultado = 20 // 6\n# resultado ser\u00e1 igual a 3\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#resto-da-divisao","title":"Resto da Divis\u00e3o (%)","text":"<p>O operador de resto da divis\u00e3o (%) retorna o resto da divis\u00e3o de um valor pelo outro. Por exemplo:</p> <pre><code>resto = 20 % 6\n# resto ser\u00e1 igual a 2 (porque 20 dividido por 6 \u00e9 igual a 3, com um resto de 2)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#exponenciacao","title":"Exponencia\u00e7\u00e3o (**)","text":"<p>O operador de exponencia\u00e7\u00e3o (**) \u00e9 utilizado para elevar um n\u00famero a uma pot\u00eancia. Por exemplo:</p> <pre><code>resultado = 2 ** 3\n# resultado ser\u00e1 igual a 8 (2 elevado \u00e0 pot\u00eancia de 3)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#comentarios","title":"Coment\u00e1rios","text":"<p>Coment\u00e1rios s\u00e3o trechos de texto dentro do c\u00f3digo fonte que s\u00e3o ignorados pelo interpretador Python durante a execu\u00e7\u00e3o do programa. Eles s\u00e3o utilizados para explicar o c\u00f3digo, fazer anota\u00e7\u00f5es, fornecer documenta\u00e7\u00e3o ou desativar temporariamente partes do c\u00f3digo. Seu uso \u00e9 altamente recomend\u00e1vel, pois auxilia na compreens\u00e3o do c\u00f3digo. </p> <p>Temos a disposi\u00e7\u00e3o diferentes duas maneiras distintas de comentar c\u00f3digo: coment\u00e1rio de linha e coment\u00e1rio de bloco.</p> <p>Coment\u00e1rios de linha come\u00e7am com o s\u00edmbolo <code>#</code> e continuam at\u00e9 o final da linha. Eles s\u00e3o \u00fateis para adicionar breves explica\u00e7\u00f5es ou notas em uma \u00fanica linha de c\u00f3digo. Por exemplo:</p> <pre><code># Este \u00e9 um coment\u00e1rio de linha\nnumero = 10  # Este coment\u00e1rio segue o c\u00f3digo na mesma linha\n</code></pre> <p>J\u00e1 os coment\u00e1rios em bloco s\u00e3o utilizados para comentar v\u00e1rias linhas de c\u00f3digo e s\u00e3o delimitados por tr\u00eas aspas simples (<code>'''</code>) ou tr\u00eas aspas duplas (<code>\"\"\"</code>). Eles s\u00e3o frequentemente utilizados para documentar fun\u00e7\u00f5es, classes ou trechos de c\u00f3digo mais extensos. Por exemplo:</p> <pre><code>'''\nEste \u00e9 um coment\u00e1rio em bloco.\nEle pode abranger v\u00e1rias linhas.\n'''\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#boas-praticas-de-uso","title":"Boas Pr\u00e1ticas de Uso","text":"<ul> <li>Seja descritivo: Escreva coment\u00e1rios que explicam o que o c\u00f3digo faz, n\u00e3o o \u00f3bvio. Isso ajuda a entenderem o prop\u00f3sito do c\u00f3digo.</li> <li>Mantenha os doment\u00e1rios atualizados: Se o c\u00f3digo for alterado, lembre-se de atualizar os coment\u00e1rios correspondentes para manter a precis\u00e3o.</li> <li>Evite coment\u00e1rios \u00f3bvios: Coment\u00e1rios que simplesmente repetem o que o c\u00f3digo faz sem adicionar valor s\u00e3o desnecess\u00e1rios e podem poluir o c\u00f3digo. </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#indentacao-de-codigo","title":"Indenta\u00e7\u00e3o de c\u00f3digo","text":"<p>Em Python, a indenta\u00e7\u00e3o \u00e9 um conceito fundamental e parte integrante da sintaxe da linguagem. Diferentemente de muitas outras linguagens de programa\u00e7\u00e3o, que utilizam chaves <code>{}</code> para delimitar blocos de c\u00f3digo, Python utiliza a indenta\u00e7\u00e3o para definir a estrutura e a organiza\u00e7\u00e3o do c\u00f3digo.</p> <p>A indenta\u00e7\u00e3o \u00e9 utilizada para indicar a estrutura hier\u00e1rquica do c\u00f3digo, especialmente em constru\u00e7\u00f5es como loops, condicionais, fun\u00e7\u00f5es e classes. Ela define quais linhas de c\u00f3digo est\u00e3o dentro de um determinado bloco e quais est\u00e3o fora.</p> <p>Por conven\u00e7\u00e3o, \u00e9 recomendado utilizar quatro espa\u00e7os para cada n\u00edvel de indenta\u00e7\u00e3o. Embora o uso de tabula\u00e7\u00f5es (tab) seja permitido, \u00e9 uma pr\u00e1tica comum e recomendada seguir a conven\u00e7\u00e3o de espa\u00e7os. Isso garante consist\u00eancia em todo o c\u00f3digo e evita problemas de formata\u00e7\u00e3o em diferentes ambientes de desenvolvimento.</p> <pre><code>if idade &gt;= 18:\n    print(\"Voc\u00ea \u00e9 maior de idade.\")\nelse:\n    print(\"Voc\u00ea \u00e9 menor de idade.\")\n</code></pre> <p>No exemplo acima, as linhas de c\u00f3digo dentro do bloco <code>if</code> e <code>else</code> est\u00e3o indentadas com quatro espa\u00e7os, indicando que elas pertencem a esses blocos condicionais.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#erros-de-indentacao","title":"Erros de Indenta\u00e7\u00e3o","text":"<p>Erros de indenta\u00e7\u00e3o s\u00e3o comuns em Python e podem levar a resultados inesperados ou a mensagens de erro. Por exemplo, se a indenta\u00e7\u00e3o n\u00e3o estiver correta, o c\u00f3digo pode n\u00e3o funcionar como esperado ou gerar um erro de sintaxe. Logo, \u00e9 importante manter as boas pr\u00e1ticas enquanto escrevemos c\u00f3digo.</p> <p>Neste aspecto, o uso de IDEs especializadas para desenvolvimento auxilia o programador, pois a formata\u00e7\u00e3o do c\u00f3digo \u00e9 automaticamente ajustada pelo editor.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#conversoes-de-dados","title":"Convers\u00f5es de Dados","text":"<p>Mesmo sendo uma linguagem dinamicamente tipada, o Python oferece fun\u00e7\u00f5es embutidas para converter entre diferentes tipos de dados. Essas convers\u00f5es s\u00e3o \u00fateis, e em certos casos necess\u00e1rias, para modificar o tipo de dado de uma vari\u00e1vel para um uso espec\u00edfico. Vejamos alguns casos de convers\u00e3o na sequ\u00eancia.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#conversao-de-inteiro-para-string","title":"Convers\u00e3o de Inteiro para String","text":"<p>Para converter um n\u00famero inteiro em uma string, utilizamos a fun\u00e7\u00e3o <code>str()</code>.</p> <pre><code>numero = 10\nnumero_string = str(numero)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#conversao-de-string-para-inteiro","title":"Convers\u00e3o de String para Inteiro","text":"<p>Para converter uma string em um n\u00famero inteiro, utilizamos a fun\u00e7\u00e3o <code>int()</code>.</p> <pre><code>numero_string = \"10\"\nnumero = int(numero_string)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#conversao-de-string-para-float","title":"Convers\u00e3o de String para Float","text":"<p>Para converter uma string em um n\u00famero de ponto flutuante (float), utilizamos a fun\u00e7\u00e3o <code>float()</code>.</p> <pre><code>numero_string = \"3.14\"\nnumero_float = float(numero_string)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#conversao-de-float-para-inteiro","title":"Convers\u00e3o de Float para Inteiro","text":"<p>Para converter um n\u00famero de ponto flutuante em um n\u00famero inteiro, aplicamos a fun\u00e7\u00e3o <code>int()</code>. Isso porque a fun\u00e7\u00e3o remove a parte decimal do valor.</p> <pre><code>numero_float = 3.14\nnumero_inteiro = int(numero_float)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/introducao/#fonte","title":"Fonte","text":"<ul> <li>Documenta\u00e7\u00e3o oficial do Python: python.org</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python"]},{"location":"programacao/python/lacos/","title":"Python - La\u00e7os de Repeti\u00e7\u00e3o","text":"<p>La\u00e7os de repeti\u00e7\u00e3o s\u00e3o estruturas de controle que permitem criar itera\u00e7\u00f5es, ou seja, repeti\u00e7\u00e3o de instru\u00e7\u00f5es. No Python, as principais estruturas s\u00e3o o <code>for</code> e o <code>while</code>. Abaixo, seguem detalhes e exemplos destes dois la\u00e7os de repeti\u00e7\u00e3o</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","La\u00e7os de Repeti\u00e7\u00e3o"]},{"location":"programacao/python/lacos/#laco-for","title":"La\u00e7o <code>for</code>:","text":"<p>O la\u00e7o <code>for</code> em Python \u00e9 usado para iterar sobre uma sequ\u00eancia (como uma lista, tupla, dicion\u00e1rio, conjunto ou string) ou outro objeto iter\u00e1vel. Ele executa um bloco de c\u00f3digo para cada item da sequ\u00eancia, logo seu uso \u00e9 destinado justamente para situa\u00e7\u00f5es em que conhecemos de antem\u00e3o a quantidade de ciclos (itera\u00e7\u00f5es) necess\u00e1rias.</p> <pre><code># Lista de valores\nlista = [1, 2, 3, 4, 5]\nfor numero in lista:\n    print(numero)\n\n# Caracteres de uma string\npalavra = \"Python\"\nfor letra in palavra:\n    print(letra)\n\n# Dicion\u00e1rios\ndicionario = {'a': 1, 'b': 2, 'c': 3}\nfor chave, valor in dicionario.items():\n    print(chave, valor)\n\n# Intervalo de valores\nfor i in range(1, 6):  \n    print(i)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","La\u00e7os de Repeti\u00e7\u00e3o"]},{"location":"programacao/python/lacos/#laco-while","title":"La\u00e7o <code>while</code>:","text":"<p>J\u00e1 o la\u00e7o <code>while</code>, por sua vez, \u00e9 usado para repetir um bloco de c\u00f3digo enquanto uma condi\u00e7\u00e3o especificada for verdadeira.</p> <pre><code># Imprimindo n\u00fameros de 1 a 5 usando while\ncontador = 1\nwhile contador &lt;= 5:\n    print(contador)\n    contador += 1\n\n# Pedindo entrada ao usu\u00e1rio at\u00e9 que ele insira \"sair\"\nwhile True:\n    entrada = input(\"Digite algo (ou 'sair' para sair): \")\n    if entrada == 'sair':\n        break  # Sai do la\u00e7o\n    print(\"Voc\u00ea digitou:\", entrada)\n</code></pre> <p>Utilizamos <code>while</code> comumente em situa\u00e7\u00f5es onde o n\u00famero de itera\u00e7\u00f5es n\u00e3o \u00e9 conhecido de antem\u00e3o. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","La\u00e7os de Repeti\u00e7\u00e3o"]},{"location":"programacao/python/lacos/#comandos-break-continue-e-else","title":"Comandos <code>break</code>, <code>continue</code> e <code>else</code>","text":"<p>O comando <code>continue</code> \u00e9 utilizado para interromper a itera\u00e7\u00e3o atual de um loop e passar para a pr\u00f3xima itera\u00e7\u00e3o, ignorando o restante do c\u00f3digo que segue.  No c\u00f3digo que segue, quando <code>i</code> tiver valor igual a <code>3</code>, o comando <code>print(i)</code> n\u00e3o ser\u00e1 executado. Isso porque, executar a instru\u00e7\u00e3o <code>continue</code>, o interpretador ir\u00e1 retornar para o in\u00edcio do la\u00e7o, iniciando a pr\u00f3xima itera\u00e7\u00e3o.</p> <pre><code>for i in range(1, 6):\n    if i == 3:\n        continue\n    print(i)\n</code></pre> <p>J\u00e1 o comando <code>break</code> \u00e9 utilizado para interromper completamente a execu\u00e7\u00e3o de um loop. Quando o break \u00e9 encontrado dentro de um loop, o controle do programa \u00e9 transferido para a instru\u00e7\u00e3o imediatamente ap\u00f3s o bloco de loop. Em nosso exemplo, quando <code>i</code> tiver o valor <code>3</code>, o la\u00e7o \u00e9 interrompido e o interpretador segue com o pr\u00f3ximo comando ap\u00f3s o <code>for</code>, que no caso \u00e9 <code>x = 10</code>.</p> <pre><code>for i in range(1, 6):\n    if i == 3:\n        break\n    print(i)\nx = 10\n</code></pre> <p>Tanto <code>for</code> quanto <code>while</code> podem conter um bloco <code>else</code> em sua defini\u00e7\u00e3o. O uso assemelha-se ao <code>else</code> da constru\u00e7\u00e3o <code>try except</code>. No caso dos la\u00e7os, o bloco <code>else</code> ser\u00e1 executado sempre que o la\u00e7o concluir suas itera\u00e7\u00f5es normalmente, ou seja, sem o uso de <code>break</code>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","La\u00e7os de Repeti\u00e7\u00e3o"]},{"location":"programacao/python/lacos/#funcao-range","title":"Fun\u00e7\u00e3o <code>range</code>","text":"<p>A fun\u00e7\u00e3o <code>range()</code> gera uma sequ\u00eancia de n\u00fameros inteiros em um intervalo especificado. Esta fun\u00e7\u00e3o \u00e9 comumente utilizada em la\u00e7os (loops), como <code>for</code>, para iterar sobre uma sequ\u00eancia de n\u00fameros.</p> <p>A sintaxe b\u00e1sica da fun\u00e7\u00e3o <code>range()</code> \u00e9 a seguinte:</p> <pre><code>range(start, stop, step)\n</code></pre> <p>Onde:</p> <ul> <li> <p><code>start</code>: O valor inicial da sequ\u00eancia (opcional). Se n\u00e3o especificado, o padr\u00e3o \u00e9 0.</p> </li> <li> <p><code>stop</code>: O valor final da sequ\u00eancia (obrigat\u00f3rio). A sequ\u00eancia gerada n\u00e3o inclui este valor.</p> </li> <li> <p><code>step</code>: O incremento entre os n\u00fameros na sequ\u00eancia (opcional). Se n\u00e3o especificado, o padr\u00e3o \u00e9 1.</p> </li> </ul> <p>Veja um exemplo que utiliza a fun\u00e7\u00e3o <code>range()</code> com seus tr\u00eas argumentos (<code>start</code>, <code>stop</code>, e <code>step</code>) preenchidos.</p> <pre><code>for i in range(1, 10, 2):\n    print(i)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","La\u00e7os de Repeti\u00e7\u00e3o"]},{"location":"programacao/python/strings/","title":"Python - Strings","text":"<p>As strings s\u00e3o usadas para representar texto e s\u00e3o imut\u00e1veis, o que significa que uma vez que uma string \u00e9 criada, ela n\u00e3o pode ser alterada. Python fornece uma variedade de m\u00e9todos embutidos para manipular e operar em strings de maneira eficiente. Vamos explorar alguns dos m\u00e9todos mais comuns. Caso voc\u00ea queira conhecer em detalhes todos os m\u00e9todos, acesse  a documenta\u00e7\u00e3o oficial sobre cadeias de caracteres da linguagem.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#len","title":"<code>len()</code>","text":"<p>Retorna o comprimento da string, ou seja, o n\u00famero de caracteres presentes nela.</p> <pre><code>string = \"Ol\u00e1, mundo!\"\nprint(len(string))\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#upper-e-lower","title":"<code>upper()</code> e <code>lower()</code>","text":"<p><code>upper()</code> converte todos os caracteres da string para mai\u00fasculo, enquanto <code>lower()</code> os converte para min\u00fasculo.</p> <pre><code>string = \"Ol\u00e1, Mundo!\"\nprint(string.upper())\nprint(string.lower())\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#strip-lstrip-e-rstrip","title":"<code>strip()</code>, <code>lstrip()</code> e <code>rstrip()</code>","text":"<p>Removem espa\u00e7os em branco e caracteres especiais do in\u00edcio e/ou final da string.</p> <p>Exemplo: <pre><code>string = \"   Ol\u00e1, Mundo!   \"\nprint(string.strip())\nprint(string.lstrip())\nprint(string.rstrip())\n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#split-e-join","title":"<code>split()</code> e <code>join()</code>","text":"<p><code>split()</code> divide a string em uma lista de substrings com base em um separador, enquanto <code>join()</code> junta uma lista de strings em uma \u00fanica string.</p> <pre><code>string = \"Python \u00e9 uma linguagem de programa\u00e7\u00e3o\"\nlista = string.split()\nprint(lista) \n\nstring_nova = \"-\".join(lista)\nprint(string_nova)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#replace","title":"<code>replace()</code>","text":"<p>Substitui todas as ocorr\u00eancias de uma substring por outra.</p> <pre><code>string = \"Python \u00e9 incr\u00edvel!\"\nnova_string = string.replace(\"incr\u00edvel\", \"fant\u00e1stica\")\nprint(nova_string)\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#startswith-e-endswith","title":"<code>startswith()</code> e <code>endswith()</code>","text":"<p>Verificam se a string come\u00e7a ou termina com uma determinada substring, respectivamente.</p> <p>Exemplo: <pre><code>string = \"Ol\u00e1, Mundo!\"\nprint(string.startswith(\"Ol\u00e1\"))\nprint(string.endswith(\"!\"))     \n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#find-e-index","title":"<code>find()</code> e <code>index()</code>","text":"<p><code>find()</code> retorna a primeira ocorr\u00eancia de uma substring na string, enquanto <code>index()</code> retorna o \u00edndice da primeira ocorr\u00eancia. A diferen\u00e7a \u00e9 que <code>index()</code> gera uma exce\u00e7\u00e3o se a substring n\u00e3o for encontrada.</p> <pre><code>string = \"Python \u00e9 uma linguagem de programa\u00e7\u00e3o\"\nprint(string.find(\"linguagem\"))\nprint(string.index(\"linguagem\"))\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#count","title":"<code>count()</code>","text":"<p>Conta o n\u00famero de ocorr\u00eancias de uma substring na string.</p> <p>Exemplo: <pre><code>string = \"Python \u00e9 uma linguagem de programa\u00e7\u00e3o, e Python \u00e9 incr\u00edvel!\"\nprint(string.count(\"Python\"))\n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#strtranslatetable","title":"<code>str.translate(table)</code>","text":"<p>O m\u00e9todo <code>translate()</code> retorna uma c\u00f3pia da string original onde cada caractere foi traduzido usando a tabela de tradu\u00e7\u00e3o fornecida.</p> <pre><code>tabela = str.maketrans(\"aeiou\", \"12345\")\nstring_original = \"Ol\u00e1, mundo!\"\nstring_traduzida = string_original.translate(tabela)\nprint(string_traduzida)\n</code></pre> <p>O m\u00e9todo <code>translate()</code> \u00e9 \u00fatil para realizar opera\u00e7\u00f5es de tradu\u00e7\u00e3o em strings de maneira eficiente e r\u00e1pida. Ele \u00e9 especialmente \u00fatil quando voc\u00ea precisa substituir caracteres por outros em grandes volumes de dados.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#slicing","title":"Slicing","text":"<p>Slicing \u00e9 uma t\u00e9cnica que permite extrair partes espec\u00edficas de uma string, criando subtrings com base em \u00edndices espec\u00edficos. O operador de slicing \u00e9 de grande valia para manipula\u00e7\u00e3o de strings de maneira eficiente e flex\u00edvel no Python.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#sintaxe","title":"Sintaxe:","text":"<p>A sintaxe b\u00e1sica para slicing em Python \u00e9:</p> <pre><code>string[in\u00edcio:fim:passo]\n</code></pre> <ul> <li><code>in\u00edcio</code>: \u00cdndice onde o slicing come\u00e7a. Se n\u00e3o especificado, \u00e9 considerado o in\u00edcio da string.</li> <li><code>fim</code>: \u00cdndice onde o slicing termina. Este \u00edndice n\u00e3o \u00e9 inclu\u00eddo na substring resultante. Se n\u00e3o especificado, \u00e9 considerado o final da string.</li> <li><code>passo</code>: Opcional. Define o intervalo entre os caracteres a serem considerados durante o slicing. Se n\u00e3o especificado, o padr\u00e3o \u00e9 1.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/strings/#exemplos-de-uso","title":"Exemplos de Uso:","text":"<ol> <li>Extraindo Substrings:</li> </ol> <pre><code>s = \"Python\"\nprint(s[2:5])  # Sa\u00edda: thon\n</code></pre> <ol> <li>Invertendo uma String:</li> </ol> <pre><code>s = \"Python\"\nprint(s[::-1])  # Sa\u00edda: nohtyP\n</code></pre> <ol> <li>Extraindo Partes com Intervalos Espec\u00edficos:</li> </ol> <pre><code>s = \"Python Programming\"\nprint(s[0:10:2])  # Sa\u00edda: Pto rg\n</code></pre> <ol> <li>Obtendo Todos os Caracteres a Partir de um \u00cdndice Espec\u00edfico:</li> </ol> <pre><code>s = \"Python\"\nprint(s[3:])  # Sa\u00edda: hon\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Python","Strings"]},{"location":"programacao/python/res/notebooks/aula-1/","title":"Vari\u00e1veis, entrada e sa\u00edda","text":"In\u00a0[\u00a0]: Copied! <pre># Resposta da exerc\u00edcio 1 aqui\n</pre> # Resposta da exerc\u00edcio 1 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 2 aqui\n</pre> # Resposta do exerc\u00edcio 2 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 3 aqui\n</pre> # Resposta do exerc\u00edcio 3 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta da exerc\u00edcio 4 aqui\n</pre> # Resposta da exerc\u00edcio 4 aqui In\u00a0[1]: Copied! <pre># Resposta da exerc\u00edcio 5 aqui\n</pre> # Resposta da exerc\u00edcio 5 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 6 aqui\n</pre> # Resposta do exerc\u00edcio 6 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 7 aqui\n</pre> # Resposta do exerc\u00edcio 7 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 8 aqui\n</pre> # Resposta do exerc\u00edcio 8 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 9 aqui\n</pre> # Resposta do exerc\u00edcio 9 aqui In\u00a0[\u00a0]: Copied! <pre># Resposta do exerc\u00edcio 10 aqui\n</pre> # Resposta do exerc\u00edcio 10 aqui"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Solicite ao usu\u00e1rio dois n\u00fameros inteiros, aqui chamados de a e b. Ap\u00f3s lidos, o programa deve calcular o resultado da express\u00e3o $a*3 + 4*b$, escrevendo na sa\u00edda padr\u00e3o (console) o valor correspondente. Lembre-se das mensagens antes de leituras e sa\u00eddas para explicar ao usu\u00e1rio o que est\u00e1 sendo feito. Veja o exemplo abaixo:</p> <p>Mensagens</p> <pre><code>Informe o primeiro valor inteiro:\nInforme o segundo valor inteiro:\nO resultado da express\u00e3o \u00e9 ...\n\n</code></pre>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Uma imobili\u00e1ria vende terrenos retangulares ou quadrados para seus clientes. O valor de venda do terreno \u00e9 determinado pela \u00e1rea do im\u00f3vel e o respectivo valor do metro quadrado.</p> <p>Desenvolva um programa para calcular automaticamente o valor de venda dos terrenos.</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>Um motorista precisa de um programa para calcular o custo de suas corridas. Seu autom\u00f3vel \u00e9 movido a gasolina e tem consumo m\u00e9dio de 10KM/l. Al\u00e9m do combust\u00edvel, h\u00e1 um custo de R$ 0.25 por KM rodado para fins de manuten\u00e7\u00e3o e seguro. Na cidade onde reside, o custo da gasolina \u00e9 R$ 5.50 por litro atualmente.</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-4","title":"Exerc\u00edcio 4\u00b6","text":"<p>Ei, a quantos segundos equivale 10h e 30 min? Que tal fazer um programa para responder essa pergunta? Mas aten\u00e7\u00e3o: ele deve ser capaz de converter qualquer valor de horas e minutos em segundos. N\u00e3o esque\u00e7a de orientar o usu\u00e1rio por meio de mensagens na tela!</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-5","title":"Exerc\u00edcio 5\u00b6","text":"<p>No plano de ensino disponibilizado pelo professor est\u00e1 informado que a m\u00e9dia final da disciplina \u00e9 calculada com base em tr\u00eas avalia\u00e7\u00f5es. A primeira corresponde a um trabalho, com peso de 20% na m\u00e9dia. A segunda avalia\u00e7\u00e3o \u00e9 uma prova e seu peso \u00e9 de 30%. A prova final preenche os demais 50% da m\u00e9dia.</p> <p>Considerando que as notas s\u00e3o estabelecidas no intervalo entre 0 e 10, desenvolva um programa para auxiliar voc\u00ea e seus colegas a calcular m\u00e9dia final.</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-6","title":"Exerc\u00edcio 6\u00b6","text":"<p>Desenvolva um programa que leia a idade de uma pessoa expressa em anos, meses e dias e mostre a quantidade total de dias que corresponde a sua idade.</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-7","title":"Exerc\u00edcio 7\u00b6","text":"<p>Desenvolva a idade de uma pessoa expressa em dias e a apresente expressa em anos, meses e dias. Considere anos de 365 dias e meses de 30 dias em seu c\u00e1lculo.</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-8","title":"Exerc\u00edcio 8\u00b6","text":"<p>Voc\u00ea emprestou dinheiro a um amigo e agora precisa calcular o total de juro a cobrar. Na \u00e9poca do empr\u00e9stimo, voc\u00eas combinaram juros compostos de 10% ao ano. Desde ent\u00e3o se passaram 5 anos e est\u00e1 em tempo de receber os R$ 5.000,00.</p> <p>Para facilitar o c\u00e1lculo deste empr\u00e9stimo e de outros futuros, desenvolva um programa para calcular o montante devido (considerando juros compostos).</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-9","title":"Exerc\u00edcio 9\u00b6","text":"<p>Vamos ter uma elei\u00e7\u00e3o em nossa turma para represente da classe. Precisamos de um programa para computar o n\u00famero de votos brancos, nulos e v\u00e1lidos e ent\u00e3o calcular e escrever o percentual que cada um representa em rela\u00e7\u00e3o ao total de eleitores.</p>"},{"location":"programacao/python/res/notebooks/aula-1/#exercicio-10","title":"Exerc\u00edcio 10\u00b6","text":"<p>O custo de um autom\u00f3vel para consumidor final corresponde a soma do custo de fabrica\u00e7\u00e3o acrescido de 45% em impostos, 10% de custos de log\u00edstica e 5% de comiss\u00e3o no ato da venda. Precisamos de um programa que realize o c\u00e1lculo do custo final dos ve\u00edculos de uma concession\u00e1ria.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/","title":"Aula 1 respostas","text":"In\u00a0[\u00a0]: Copied! <pre>a = int(input(\"Informe o primeiro valor inteiro\"))\nb = int(input(\"Informe o segundo valor inteiro\"))\nresultado = a*3 + 4*b\nprint(\"O resultado da express\u00e3o \u00e9 \", resultado)\n</pre> a = int(input(\"Informe o primeiro valor inteiro\")) b = int(input(\"Informe o segundo valor inteiro\")) resultado = a*3 + 4*b print(\"O resultado da express\u00e3o \u00e9 \", resultado) In\u00a0[5]: Copied! <pre>largura =float( input(\"Informe a largura do terreno (m)\"))\ncomprimento =float( input(\"Informe a comprimento do terreno (m)\"))\nvlr_m2 = float( input(\"Informe o valor do (m2)\")) \n\nvlr_terreno = largura * comprimento * vlr_m2\n\n#aqui estamos usando interpola\u00e7\u00e3o de strings\nprint(f\"O terreno com {largura * comprimento} m2 tem valor final de R$ {vlr_terreno}\")\n</pre> largura =float( input(\"Informe a largura do terreno (m)\")) comprimento =float( input(\"Informe a comprimento do terreno (m)\")) vlr_m2 = float( input(\"Informe o valor do (m2)\"))   vlr_terreno = largura * comprimento * vlr_m2  #aqui estamos usando interpola\u00e7\u00e3o de strings print(f\"O terreno com {largura * comprimento} m2 tem valor final de R$ {vlr_terreno}\")  <pre>O terreno com 6.0 m2 tem valor final de R$ 12.0\n</pre> In\u00a0[9]: Copied! <pre>distancia = float(input(\"Informe a dist\u00e2ncia da corrida\"))\nconsumo_medio = 10\ncusto_man_seg= 0.25\ncusto_combus = 5.50\ngasto_combus = (distancia/consumo_medio)* custo_combus\ngasto_manut_seguro = distancia * custo_man_seg\nvalor_final = gasto_combus + gasto_manut_seguro\nprint(f\"Sua viagem de {distancia} KM ter\u00e1 um custo de R$ {valor_final}\")\n</pre> distancia = float(input(\"Informe a dist\u00e2ncia da corrida\")) consumo_medio = 10 custo_man_seg= 0.25 custo_combus = 5.50 gasto_combus = (distancia/consumo_medio)* custo_combus gasto_manut_seguro = distancia * custo_man_seg valor_final = gasto_combus + gasto_manut_seguro print(f\"Sua viagem de {distancia} KM ter\u00e1 um custo de R$ {valor_final}\")  <pre>Sua viagem de 100.0 KM ter\u00e1 um custo de R$ 80.0\n</pre> In\u00a0[10]: Copied! <pre>horas = int(input(\"Quantas horas?\"))\nminutos = int(input(\"Quantas minutos?\"))\n\nsegundos = (minutos * 60) + (horas * 60 * 60)\n\nprint(f\"Em {horas} horas e {minutos} minutos, temos {segundos} segundos\")\n</pre> horas = int(input(\"Quantas horas?\")) minutos = int(input(\"Quantas minutos?\"))  segundos = (minutos * 60) + (horas * 60 * 60)  print(f\"Em {horas} horas e {minutos} minutos, temos {segundos} segundos\")  <pre>Em 1 horas e 1 minutos, temos 3660 segundos\n</pre> In\u00a0[1]: Copied! <pre>trabalho = float(input(\"Digite a nota do trabalho (0 a 10): \"))\nprova = float(input(\"Digite a nota da prova (0 a 10): \"))\nprova_final = float(input(\"Digite a nota da prova final (0 a 10): \"))\nmedia_final = (trabalho * 0.2) + (prova * 0.3) + (prova_final * 0.5)\n\nprint(\"A m\u00e9dia final \u00e9:\", media_final)\n</pre> trabalho = float(input(\"Digite a nota do trabalho (0 a 10): \")) prova = float(input(\"Digite a nota da prova (0 a 10): \")) prova_final = float(input(\"Digite a nota da prova final (0 a 10): \")) media_final = (trabalho * 0.2) + (prova * 0.3) + (prova_final * 0.5)  print(\"A m\u00e9dia final \u00e9:\", media_final) <pre>A m\u00e9dia final \u00e9: 6.3\n</pre> In\u00a0[2]: Copied! <pre>idade_anos = int(input(\"Digite sua idade em anos: \"))\nidade_meses = int(input(\"Digite sua idade em meses: \"))\nidade_dias = int(input(\"Digite sua idade em dias: \"))\ntotal_dias = idade_anos * 365 + idade_meses * 30 + idade_dias\n\nprint(\"Sua idade em dias \u00e9:\", total_dias)\n</pre> idade_anos = int(input(\"Digite sua idade em anos: \")) idade_meses = int(input(\"Digite sua idade em meses: \")) idade_dias = int(input(\"Digite sua idade em dias: \")) total_dias = idade_anos * 365 + idade_meses * 30 + idade_dias  print(\"Sua idade em dias \u00e9:\", total_dias)  <pre>Sua idade em dias \u00e9: 2804\n</pre> In\u00a0[5]: Copied! <pre>idade_dias = int(input(\"Digite a idade em dias: \"))\n\nanos = idade_dias // 365\nmeses = (idade_dias % 365) // 30\ndias = (idade_dias % 365) % 30\n\n\nprint(f\"A idade \u00e9  {anos}  anos, {meses}  meses e {dias} dias.\")\n</pre>  idade_dias = int(input(\"Digite a idade em dias: \"))  anos = idade_dias // 365 meses = (idade_dias % 365) // 30 dias = (idade_dias % 365) % 30   print(f\"A idade \u00e9  {anos}  anos, {meses}  meses e {dias} dias.\")  <pre>A idade \u00e9  94  anos, 8  meses e 17 dias.\n</pre> In\u00a0[12]: Copied! <pre>capital = float(input(\"Informe o capital\"))\ntx_juros = float(input(\"Informe a taxa de juros (ao ano)\"))\ntempo = int(input(\"Informe o tempo (anos)\"))\n\nmontante = capital * (1+tx_juros/100.0)**tempo\n\nprint(f\"O valor final ser\u00e1 de R$ {round(montante,2)}\")\n</pre> capital = float(input(\"Informe o capital\")) tx_juros = float(input(\"Informe a taxa de juros (ao ano)\")) tempo = int(input(\"Informe o tempo (anos)\"))  montante = capital * (1+tx_juros/100.0)**tempo  print(f\"O valor final ser\u00e1 de R$ {round(montante,2)}\")   <pre>O valor final ser\u00e1 de R$ 8052.55\n</pre> In\u00a0[14]: Copied! <pre>nr_eleitores = int(input(\"N\u00famero de eleitores\"))\nnr_vt_validos = int(input(\"N\u00famero de votos v\u00e1lidos\"))\nnr_vt_brancos = int(input(\"N\u00famero de votos em branco\"))\nnr_vt_nulos = int(input(\"N\u00famero de votos nulos\"))\n\nper_vt_validos = round( (nr_vt_validos *100)/nr_eleitores, 2 )\nper_vt_brancos = round( (nr_vt_brancos *100)/nr_eleitores, 2 )\nper_vt_nulos = round( (nr_vt_nulos *100)/nr_eleitores, 2 )\n\nprint(f\"Percentual de votos v\u00e1lidos: {per_vt_validos}%\")\nprint(f\"Percentual de votos brancos: {per_vt_brancos}%\")\nprint(f\"Percentual de votos nulos: {per_vt_nulos}%\")\n</pre> nr_eleitores = int(input(\"N\u00famero de eleitores\")) nr_vt_validos = int(input(\"N\u00famero de votos v\u00e1lidos\")) nr_vt_brancos = int(input(\"N\u00famero de votos em branco\")) nr_vt_nulos = int(input(\"N\u00famero de votos nulos\"))  per_vt_validos = round( (nr_vt_validos *100)/nr_eleitores, 2 ) per_vt_brancos = round( (nr_vt_brancos *100)/nr_eleitores, 2 ) per_vt_nulos = round( (nr_vt_nulos *100)/nr_eleitores, 2 )  print(f\"Percentual de votos v\u00e1lidos: {per_vt_validos}%\") print(f\"Percentual de votos brancos: {per_vt_brancos}%\") print(f\"Percentual de votos nulos: {per_vt_nulos}%\") <pre>Percentual de votos v\u00e1lidos: 30.0%\nPercentual de votos brancos: 20.0%\nPercentual de votos nulos: 10.0%\n</pre> In\u00a0[6]: Copied! <pre>custo_fabricacao = float(input(\"Digite o custo de fabrica\u00e7\u00e3o do ve\u00edculo: \"))\nimpostos = custo_fabricacao * 0.45\ncustos_logistica = custo_fabricacao * 0.10\ncomissao = custo_fabricacao * 0.05\ncusto_final = custo_fabricacao + impostos + custos_logistica + comissao\nprint(\"O custo final do ve\u00edculo \u00e9 R$ \", round(custo_final,2))\n</pre> custo_fabricacao = float(input(\"Digite o custo de fabrica\u00e7\u00e3o do ve\u00edculo: \")) impostos = custo_fabricacao * 0.45 custos_logistica = custo_fabricacao * 0.10 comissao = custo_fabricacao * 0.05 custo_final = custo_fabricacao + impostos + custos_logistica + comissao print(\"O custo final do ve\u00edculo \u00e9 R$ \", round(custo_final,2))  <pre>O custo final do ve\u00edculo \u00e9: 40000.0\n</pre>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Solicite ao usu\u00e1rio dois n\u00fameros inteiros, aqui chamados de a e b. Ap\u00f3s lidos, o programa deve calcular o resultado da express\u00e3o $a*3 + 4*b$, escrevendo na sa\u00edda padr\u00e3o (console) o valor correspondente. Lembre-se das mensagens antes de leituras e sa\u00eddas para explicar ao usu\u00e1rio o que est\u00e1 sendo feito. Veja o exemplo abaixo:</p> <p>Mensagens</p> <pre><code>Informe o primeiro valor inteiro:\nInforme o segundo valor inteiro:\nO resultado da express\u00e3o \u00e9 ...\n\n</code></pre>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Uma imobili\u00e1ria vende terrenos retangulares ou quadrados para seus clientes. O valor de venda do terreno \u00e9 determinado pela \u00e1rea do im\u00f3vel e o respectivo valor do metro quadrado.</p> <p>Desenvolva um programa para calcular automaticamente o valor de venda dos terrenos.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>Um motorista precisa de um programa para calcular o custo de suas corridas. Seu autom\u00f3vel \u00e9 movido a gasolina e tem consumo m\u00e9dio de 10KM/l. Al\u00e9m do combust\u00edvel, h\u00e1 um custo de R$ 0.25 por KM rodado para fins de manuten\u00e7\u00e3o e seguro. Na cidade onde reside, o custo da gasolina \u00e9 R$ 5.50 por litro atualmente.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-4","title":"Exerc\u00edcio 4\u00b6","text":"<p>Ei, a quantos segundos equivale 10h e 30 min? Que tal fazer um programa para responder essa pergunta? Mas aten\u00e7\u00e3o: ele deve ser capaz de converter qualquer valor de horas e minutos em segundos. N\u00e3o esque\u00e7a de orientar o usu\u00e1rio por meio de mensagens na tela!</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-5","title":"Exerc\u00edcio 5\u00b6","text":"<p>No plano de ensino disponibilizado pelo professor est\u00e1 informado que a m\u00e9dia final da disciplina \u00e9 calculada com base em tr\u00eas avalia\u00e7\u00f5es. A primeira corresponde a um trabalho, com peso de 20% na m\u00e9dia. A segunda avalia\u00e7\u00e3o \u00e9 uma prova e seu peso \u00e9 de 30%. A prova final preenche os demais 50% da m\u00e9dia.</p> <p>Considerando que as notas s\u00e3o estabelecidas no intervalo entre 0 e 10, desenvolva um programa para auxiliar voc\u00ea e seus colegas a calcular m\u00e9dia final.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-6","title":"Exerc\u00edcio 6\u00b6","text":"<p>Desenvolva um programa que leia a idade de uma pessoa expressa em anos, meses e dias e mostre a quantidade total de dias que corresponde a sua idade.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-7","title":"Exerc\u00edcio 7\u00b6","text":"<p>Desenvolva a idade de uma pessoa expressa em dias e a apresente expressa em anos, meses e dias. Considere anos de 365 dias e meses de 30 dias em seu c\u00e1lculo.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-8","title":"Exerc\u00edcio 8\u00b6","text":"<p>Voc\u00ea emprestou dinheiro a um amigo e agora precisa calcular o total de juro a cobrar. Na \u00e9poca do empr\u00e9stimo, voc\u00eas combinaram juros compostos de 10% ao ano. Desde ent\u00e3o se passaram 5 anos e est\u00e1 em tempo de receber os R$ 5.000,00.</p> <p>Para facilitar o c\u00e1lculo deste empr\u00e9stimo e de outros futuros, desenvolva um programa para calcular o montante devido (considerando juros compostos).</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-9","title":"Exerc\u00edcio 9\u00b6","text":"<p>Vamos ter uma elei\u00e7\u00e3o em nossa turma para represente da classe. Precisamos de um programa para computar o n\u00famero de votos brancos, nulos e v\u00e1lidos e ent\u00e3o calcular e escrever o percentual que cada um representa em rela\u00e7\u00e3o ao total de eleitores.</p>"},{"location":"programacao/python/res/notebooks/aula-1_respostas/#exercicio-10","title":"Exerc\u00edcio 10\u00b6","text":"<p>O custo de um autom\u00f3vel para consumidor final corresponde a soma do custo de fabrica\u00e7\u00e3o acrescido de 45% em impostos, 10% de custos de log\u00edstica e 5% de comiss\u00e3o no ato da venda. Precisamos de um programa que realize o c\u00e1lculo do custo final dos ve\u00edculos de uma concession\u00e1ria.</p>"},{"location":"programacao/python/res/notebooks/aula-2/","title":"Estruturas de decis\u00e3o","text":"In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Informe sua resposta aqui\n</pre> # Informe sua resposta aqui"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Desenvolva um programa para ler\u00a0tr\u00eas valores num\u00e9ricos inteiros (<code>x</code>, <code>y</code> e <code>z</code>), que ser\u00e3o informados pelo usu\u00e1rio. Destes valores recebidos, identificar o maior, o menor e o intermedi\u00e1rio, apresentando-os em tela.</p>"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Solicite ao usu\u00e1rio um valor inteiro. Avalie a paridade do valor informado, escrevendo em tela PAR ou \u00cdMPAR.</p>"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>A Universidade de Passo Fundo passar\u00e1 a utilizar um sistema de avalia\u00e7\u00e3o baseado em conceitos. Contudo, seus professores est\u00e3o acostumados a mensurar o aprendizado dos estudantes em uma escala de 0 a 100 pontos. Para tornar o processo de transi\u00e7\u00e3o mais simples, a Pr\u00f3-reitoria de Ensino encaminhou uma tabela de convers\u00e3o de notas para conceitos. Assim, a m\u00e9dia ponderada das avalia\u00e7\u00f5es semestrais de cada disciplina dever\u00e3o ser convertidas pelos professores com base nesta tabela de refer\u00eancia. Cabe ressaltar que todo professor \u00e9 obrigado a realizar <code>3</code> avalia\u00e7\u00f5es a cada semestre, com pesos <code>20</code>, <code>30</code> e <code>50</code>, respectivamente.</p> Intervalo de notas\u00a0 Conceito\u00a0 Resultado\u00a0 \u00a00 - 20 E\u00a0 REPROVADO 21 - 40 D REPROVADO 41 - 60 C EXAME 61 - 80 B APROVADO 81 - 100 A APROVADO <p>Com base nisso, pede-se que seja criado um programa que leia 3 notas (valores num\u00e9ricos entre 0 e 100, obrigatoriamente). Com os valores lidos, apresente para o usu\u00e1rio a m\u00e9dia final obtida, conceito correspondente e o respectivo resultado. Se o usu\u00e1rio informar para qualquer uma das notas valores fora do intervalo permitido $0 \\leq nota \\leq 100$, o programa deve gerar como sa\u00edda o texto NOTA INV\u00c1LIDA.</p> <p> </p>"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-4","title":"Exerc\u00edcio 4\u00b6","text":"<p>Em F\u00edsica, podemos medir a temperatura de corpos utilizando diferentes escalas termom\u00e9tricas. No Brasil, por exemplo, \u00e9 comum utilizarmos Celsius\u00a0(\u00baC), enquanto que nos Estados Unidos utiliza-se Fahrenheit (\u00baF). No meio cient\u00edfico, contudo, utiliza-se a Escala Kelvin $K$.</p> <p>Embora o c\u00e1lculo de convers\u00e3o entre escalas n\u00e3o seja complexo, ter em m\u00e3os uma forma r\u00e1pida de faz\u00ea-lo \u00e9 bem-vinda. E nada melhor que um programa em Python para resolver todo e qualquer problema, n\u00e3o \u00e9?!</p> <p>Nosso programa deve receber duas informa\u00e7\u00f5es: escala e temperatura. Para escala, aceitar apenas $C$, $F$ ou $K$, representando a escala de origem e para temperatura, apenas n\u00fameros (com ou sem casas decimais). Como sa\u00edda, o programa deve apresentar a temperatura convertida para as demais escalas.</p> <p>Vamos \u00e0s f\u00f3rmulas:</p> <ul> <li>Kelvin para Celsius: $T_K - 273,15$</li> <li>Fahrenheit para Celsius:\u00a0$\\frac{T_F -32}{1,8}$</li> <li>Celsius para Kelvin:\u00a0\u00a0$T_C + 273,15$</li> <li>Celsius para\u00a0Fahrenheit:\u00a0$T_C*1,8 + 32$</li> </ul>"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-5","title":"Exerc\u00edcio 5\u00b6","text":"<p>Desenvolva um programa que solicite dois valores inteiros ao usu\u00e1rio. Obrigatoriamente, o primeiro valor deve ser menor que o segundo e ambos devem ser positivos, maiores que zero e pares. Com os dois valores lidos, o programa deve apresentar a imagem da fun\u00e7\u00e3o abaixo, considerando que o valor do dom\u00ednio compreende a m\u00e9dia aritm\u00e9tica dos valores recebidos.</p> <p>$f(x) = \\dfrac{x}{3} + x^{3} - \\dfrac{(x + x*4)}{2}$</p> <p> </p>"},{"location":"programacao/python/res/notebooks/aula-2/#validacoes","title":"Valida\u00e7\u00f5es\u00b6","text":"<ul> <li>Quando o primeiro valor for maior que o segundo, a sa\u00edda deve ser PRIMEIRO VALOR \u00c9 MAIOR QUE O SEGUNDO - INV\u00c1LIDO</li> <li>Quando um dos valores (ou ambos) for \u00edmpar,\u00a0\u00a0a sa\u00edda deve ser \u00cdMPAR - INV\u00c1LIDO</li> <li>Quando um dos valores (ou ambos) for menor ou igual a que zero, informar NEGATIVO OU ZERO - INV\u00c1LIDO</li> <li>A sequ\u00eancia de valida\u00e7\u00f5es no c\u00f3digo deve respeitar a ordem acima.</li> </ul>"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-6","title":"Exerc\u00edcio 6\u00b6","text":"<p>O calend\u00e1rio gregoriano introduziu o conceito de ano bissexto como uma forma de corrigir, a cada 4 anos, a diferen\u00e7a\u00a0 de tempo entre o ano sideral (tempo de transla\u00e7\u00e3o da Terra em torno do Sol) e o tempo de um ano do calend\u00e1rio. Em anos bissextos, o calend\u00e1rio \u00e9 acrescido de 1 dia (24 horas).</p> <p>Podemos determinar se um ano \u00e9 bissexto atrav\u00e9s de c\u00e1lculos de resto de divis\u00e3o inteira. Todo ano bissexto deve atender \u00e0s seguintes condi\u00e7\u00f5es:</p> <ul> <li>Se 400 for um divisor do ano, ent\u00e3o \u00e9 bissexto;</li> <li>Ou, se o ano for divis\u00edvel por 4, mas n\u00e3o por 100, ele \u00e9 considerado bissexto.</li> </ul> <p>Sabendo os crit\u00e9rios para identificar anos bissextos, iremos agora desenvolver um programa que far\u00e1 este trabalho para n\u00f3s. Basta que este programa solicite ao usu\u00e1rio o ano e, como sa\u00edda, informar uma das mensagens abaixo, a depender do resultado.</p> <ul> <li>BISSEXTO</li> <li>N\u00c3O \u00c9 BISSEXTO</li> <li>ANO INV\u00c1LIDO (caso seja informado valor igual ou inferior a zero)</li> </ul>"},{"location":"programacao/python/res/notebooks/aula-2/#exercicio-7","title":"Exerc\u00edcio 7\u00b6","text":"<p>Leia a idade de um nadador e escreva em tela a respectiva categoria em que se enquadra. Os intervalos de idade est\u00e3o descritos na tabela que segue.</p> \u00a0infantil A \u00a05 - 7 anos\u00a0 \u00a0infantil B\u00a0 \u00a08-10 anos \u00a0juvenil A\u00a0 \u00a011-13 anos\u00a0 \u00a0juvenil B\u00a0 \u00a014-17 anos\u00a0 \u00a0adulto \u00a0maiores de 18 anos"},{"location":"programacao/python/res/notebooks/aula-2_respostas/","title":"Aula 2 respostas","text":"In\u00a0[3]: Copied! <pre>v1 = int(input(\"Informe o primeiro valor: \"))\nv2 = int(input(\"Informe o segundo valor: \"))\nv3 = int(input(\"Informe o terceiro valor: \"))\n\nmaior = v1\nif v2 &gt; maior:\n    maior = v2\nif v3 &gt; maior:\n    maior = v3\n\nmenor = v1\nif v2 &lt; menor:\n    menor = v2\nif v3 &lt; menor:\n    menor = v3\n\nprint(menor, (v1+v2+v3) - (maior+menor), maior)\n</pre> v1 = int(input(\"Informe o primeiro valor: \")) v2 = int(input(\"Informe o segundo valor: \")) v3 = int(input(\"Informe o terceiro valor: \"))  maior = v1 if v2 &gt; maior:     maior = v2 if v3 &gt; maior:     maior = v3  menor = v1 if v2 &lt; menor:     menor = v2 if v3 &lt; menor:     menor = v3  print(menor, (v1+v2+v3) - (maior+menor), maior)      <pre>3 8 8\n</pre> In\u00a0[5]: Copied! <pre>v1 = int(input(\"Informe um valor\"))\n\nprint(v1, \"PAR\" if v1%2==0 else \"\u00cdMPAR\")\n</pre> v1 = int(input(\"Informe um valor\"))  print(v1, \"PAR\" if v1%2==0 else \"\u00cdMPAR\") <pre>4 PAR\n</pre> In\u00a0[8]: Copied! <pre>n1 = int(input(\"Informe a nota 1\"))\nn2 = int(input(\"Informe a nota 2\"))\nn3 = int(input(\"Informe a nota 3\"))\n\nif n1 &lt; 0 or n1 &gt; 100  or n2 &lt; 0 or n2 &gt; 100 or n3 &lt; 0 or n3 &gt; 100:\n    print(\"NOTA INV\u00c1LIDA\")\nelse:\n    media_final = n1 * 0.2 + n2 * 0.3 + n3 * 0.5\n    conceito_resultado = \"\"\n    if 0.0 &lt;= media_final and media_final&lt; 21.0:\n        conceito_resultado = \"E Reprovado\"\n    elif 21.0 &lt;= media_final and media_final &lt; 41.0:\n        conceito_resultado = \"D Reprovado\"\n    elif 41.0 &lt;= media_final and media_final &lt; 61.0:\n        conceito_resultado = \"C Exame\"\n    elif 61.0 &lt;= media_final and media_final &lt; 81.0:\n        conceito_resultado = \"B Aprovado\"\n    else:\n        conceito_resultado = \"A Aprovado\"\n\n    print(\"{:.2f} {}\".format(media_final, conceito_resultado))\n</pre>   n1 = int(input(\"Informe a nota 1\")) n2 = int(input(\"Informe a nota 2\")) n3 = int(input(\"Informe a nota 3\"))  if n1 &lt; 0 or n1 &gt; 100  or n2 &lt; 0 or n2 &gt; 100 or n3 &lt; 0 or n3 &gt; 100:     print(\"NOTA INV\u00c1LIDA\") else:     media_final = n1 * 0.2 + n2 * 0.3 + n3 * 0.5     conceito_resultado = \"\"     if 0.0 &lt;= media_final and media_final&lt; 21.0:         conceito_resultado = \"E Reprovado\"     elif 21.0 &lt;= media_final and media_final &lt; 41.0:         conceito_resultado = \"D Reprovado\"     elif 41.0 &lt;= media_final and media_final &lt; 61.0:         conceito_resultado = \"C Exame\"     elif 61.0 &lt;= media_final and media_final &lt; 81.0:         conceito_resultado = \"B Aprovado\"     else:         conceito_resultado = \"A Aprovado\"      print(\"{:.2f} {}\".format(media_final, conceito_resultado))  <pre>NOTA INV\u00c1LIDA\n</pre> In\u00a0[10]: Copied! <pre>escala = input(\"Digite a escala de origem (C, F ou K): \")\nt = float(input(\"Digite a temperatura: \"))\n\nmatch escala.upper():\n    case 'C':\n        temp_kelvin = t + 273.15\n        temp_fahrenheit = t * 1.8 + 32\n        print(\"Kelvin:\", temp_kelvin)\n        print(\"Fahrenheit:\", temp_fahrenheit)\n    case 'F':\n        temp_celsius = (t - 32) / 1.8\n        temp_kelvin = temp_celsius + 273.15\n        print(\"Celsius:\", temp_celsius)\n        print(\"Kelvin:\", temp_kelvin)\n    case 'K':\n        temp_celsius = t - 273.15\n        temp_fahrenheit = temp_celsius * 1.8 + 32\n        print(\"Celsius:\", temp_celsius)\n        print(\"Fahrenheit:\", temp_fahrenheit)\n</pre> escala = input(\"Digite a escala de origem (C, F ou K): \") t = float(input(\"Digite a temperatura: \"))  match escala.upper():     case 'C':         temp_kelvin = t + 273.15         temp_fahrenheit = t * 1.8 + 32         print(\"Kelvin:\", temp_kelvin)         print(\"Fahrenheit:\", temp_fahrenheit)     case 'F':         temp_celsius = (t - 32) / 1.8         temp_kelvin = temp_celsius + 273.15         print(\"Celsius:\", temp_celsius)         print(\"Kelvin:\", temp_kelvin)     case 'K':         temp_celsius = t - 273.15         temp_fahrenheit = temp_celsius * 1.8 + 32         print(\"Celsius:\", temp_celsius)         print(\"Fahrenheit:\", temp_fahrenheit)  <pre>Temperatura em Celsius: 14.444444444444445\nTemperatura em Kelvin: 287.59444444444443\n</pre> In\u00a0[\u00a0]: Copied! <pre>valor1 = int(input(\"Digite o primeiro valor inteiro e par: \"))\nvalor2 = int(input(\"Digite o segundo valor inteiro e par, maior que o primeiro: \"))\n\n\nif valor1 &gt;= valor2:\n    print(\"PRIMEIRO VALOR \u00c9 MAIOR QUE O SEGUNDO - INV\u00c1LIDO\")\n\nelif valor1 % 2 != 0 or valor2 % 2 != 0:\n    print(\"\u00cdMPAR - INV\u00c1LIDO\")\n\nelif valor1 &lt;= 0 or valor2 &lt;= 0:\n    print(\"NEGATIVO OU ZERO - INV\u00c1LIDO\")\nelse:\n    dominio = (valor1 + valor2) / 2 \n    resultado = (dominio / 3) + dominio ** 3 - ((dominio + dominio * 4) / 2)\n    print(\"RESULTADO: \", resultado)\n</pre>  valor1 = int(input(\"Digite o primeiro valor inteiro e par: \")) valor2 = int(input(\"Digite o segundo valor inteiro e par, maior que o primeiro: \"))   if valor1 &gt;= valor2:     print(\"PRIMEIRO VALOR \u00c9 MAIOR QUE O SEGUNDO - INV\u00c1LIDO\")  elif valor1 % 2 != 0 or valor2 % 2 != 0:     print(\"\u00cdMPAR - INV\u00c1LIDO\")  elif valor1 &lt;= 0 or valor2 &lt;= 0:     print(\"NEGATIVO OU ZERO - INV\u00c1LIDO\") else:     dominio = (valor1 + valor2) / 2      resultado = (dominio / 3) + dominio ** 3 - ((dominio + dominio * 4) / 2)     print(\"RESULTADO: \", resultado)  In\u00a0[11]: Copied! <pre>ano = int(input(\"ANO: \"))\n\nif ano &lt;= 0:\n    print(\"ANO INV\u00c1LIDO\")\nelse:\n    if (ano % 400 == 0) or (ano % 4 == 0 and ano % 100 != 0):\n        print(\"BISSEXTO\")\n    else:\n        print(\"N\u00c3O \u00c9 BISSEXTO\")\n</pre>  ano = int(input(\"ANO: \"))  if ano &lt;= 0:     print(\"ANO INV\u00c1LIDO\") else:     if (ano % 400 == 0) or (ano % 4 == 0 and ano % 100 != 0):         print(\"BISSEXTO\")     else:         print(\"N\u00c3O \u00c9 BISSEXTO\") <pre>N\u00c3O \u00c9 BISSEXTO\n</pre> In\u00a0[12]: Copied! <pre>idade = int(input(\"Digite a idade do nadador: \"))\n\n\nif 5 &lt;= idade and idade &lt;= 7:\n    print(\"Infantil A\")\nelif 8 &lt;= idade and idade &lt;= 10:\n    print(\"Infantil B\")\nelif 11 &lt;= idade and idade &lt;= 13:\n    print(\"Juvenil A\")\nelif 14 &lt;= idade and idade &lt;= 17:\n    print(\"Juvenil B\")\nelif idade &gt;= 18:\n    print(\"Adulto\")\nelse:\n    print(\"Idade inv\u00e1lida\")\n</pre>  idade = int(input(\"Digite a idade do nadador: \"))   if 5 &lt;= idade and idade &lt;= 7:     print(\"Infantil A\") elif 8 &lt;= idade and idade &lt;= 10:     print(\"Infantil B\") elif 11 &lt;= idade and idade &lt;= 13:     print(\"Juvenil A\") elif 14 &lt;= idade and idade &lt;= 17:     print(\"Juvenil B\") elif idade &gt;= 18:     print(\"Adulto\") else:     print(\"Idade inv\u00e1lida\")  <pre>Infantil B\n</pre>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Desenvolva um programa para ler\u00a0tr\u00eas valores num\u00e9ricos inteiros (<code>x</code>, <code>y</code> e <code>z</code>), que ser\u00e3o informados pelo usu\u00e1rio. Destes valores recebidos, identificar o maior, o menor e o intermedi\u00e1rio, apresentando-os em tela.</p>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Solicite ao usu\u00e1rio um valor inteiro. Avalie a paridade do valor informado, escrevendo em tela PAR ou \u00cdMPAR.</p>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>A Universidade de Passo Fundo passar\u00e1 a utilizar um sistema de avalia\u00e7\u00e3o baseado em conceitos. Contudo, seus professores est\u00e3o acostumados a mensurar o aprendizado dos estudantes em uma escala de 0 a 100 pontos. Para tornar o processo de transi\u00e7\u00e3o mais simples, a Pr\u00f3-reitoria de Ensino encaminhou uma tabela de convers\u00e3o de notas para conceitos. Assim, a m\u00e9dia ponderada das avalia\u00e7\u00f5es semestrais de cada disciplina dever\u00e3o ser convertidas pelos professores com base nesta tabela de refer\u00eancia. Cabe ressaltar que todo professor \u00e9 obrigado a realizar <code>3</code> avalia\u00e7\u00f5es a cada semestre, com pesos <code>20</code>, <code>30</code> e <code>50</code>, respectivamente.</p> Intervalo de notas\u00a0 Conceito\u00a0 Resultado\u00a0 \u00a00 - 20 E\u00a0 REPROVADO 21 - 40 D REPROVADO 41 - 60 C EXAME 61 - 80 B APROVADO 81 - 100 A APROVADO <p>Com base nisso, pede-se que seja criado um programa que leia 3 notas (valores num\u00e9ricos entre 0 e 100, obrigatoriamente). Com os valores lidos, apresente para o usu\u00e1rio a m\u00e9dia final obtida, conceito correspondente e o respectivo resultado. Se o usu\u00e1rio informar para qualquer uma das notas valores fora do intervalo permitido $0 \\leq nota \\leq 100$, o programa deve gerar como sa\u00edda o texto NOTA INV\u00c1LIDA.</p> <p> </p>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-4","title":"Exerc\u00edcio 4\u00b6","text":"<p>Em F\u00edsica, podemos medir a temperatura de corpos utilizando diferentes escalas termom\u00e9tricas. No Brasil, por exemplo, \u00e9 comum utilizarmos Celsius\u00a0(\u00baC), enquanto que nos Estados Unidos utiliza-se Fahrenheit (\u00baF). No meio cient\u00edfico, contudo, utiliza-se a Escala Kelvin $K$.</p> <p>Embora o c\u00e1lculo de convers\u00e3o entre escalas n\u00e3o seja complexo, ter em m\u00e3os uma forma r\u00e1pida de faz\u00ea-lo \u00e9 bem-vinda. E nada melhor que um programa em Python para resolver todo e qualquer problema, n\u00e3o \u00e9?!</p> <p>Nosso programa deve receber duas informa\u00e7\u00f5es: escala e temperatura. Para escala, aceitar apenas $C$, $F$ ou $K$, representando a escala de origem e para temperatura, apenas n\u00fameros (com ou sem casas decimais). Como sa\u00edda, o programa deve apresentar a temperatura convertida para as demais escalas.</p> <p>Vamos \u00e0s f\u00f3rmulas:</p> <ul> <li>Kelvin para Celsius: $T_K - 273,15$</li> <li>Fahrenheit para Celsius:\u00a0$\\frac{T_F -32}{1,8}$</li> <li>Celsius para Kelvin:\u00a0\u00a0$T_C + 273,15$</li> <li>Celsius para\u00a0Fahrenheit:\u00a0$T_C*1,8 + 32$</li> </ul>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-5","title":"Exerc\u00edcio 5\u00b6","text":"<p>Desenvolva um programa que solicite dois valores inteiros ao usu\u00e1rio. Obrigatoriamente, o primeiro valor deve ser menor que o segundo e ambos devem ser positivos, maiores que zero e pares. Com os dois valores lidos, o programa deve apresentar a imagem da fun\u00e7\u00e3o abaixo, considerando que o valor do dom\u00ednio compreende a m\u00e9dia aritm\u00e9tica dos valores recebidos.</p> <p>$f(x) = \\dfrac{x}{3} + x^{3} - \\dfrac{(x + x*4)}{2}$</p> <p> </p>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#validacoes","title":"Valida\u00e7\u00f5es\u00b6","text":"<ul> <li>Quando o primeiro valor for maior que o segundo, a sa\u00edda deve ser PRIMEIRO VALOR \u00c9 MAIOR QUE O SEGUNDO - INV\u00c1LIDO</li> <li>Quando um dos valores (ou ambos) for \u00edmpar,\u00a0\u00a0a sa\u00edda deve ser \u00cdMPAR - INV\u00c1LIDO</li> <li>Quando um dos valores (ou ambos) for menor ou igual a que zero, informar NEGATIVO OU ZERO - INV\u00c1LIDO</li> <li>A sequ\u00eancia de valida\u00e7\u00f5es no c\u00f3digo deve respeitar a ordem acima.</li> </ul>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-6","title":"Exerc\u00edcio 6\u00b6","text":"<p>O calend\u00e1rio gregoriano introduziu o conceito de ano bissexto como uma forma de corrigir, a cada 4 anos, a diferen\u00e7a\u00a0 de tempo entre o ano sideral (tempo de transla\u00e7\u00e3o da Terra em torno do Sol) e o tempo de um ano do calend\u00e1rio. Em anos bissextos, o calend\u00e1rio \u00e9 acrescido de 1 dia (24 horas).</p> <p>Podemos determinar se um ano \u00e9 bissexto atrav\u00e9s de c\u00e1lculos de resto de divis\u00e3o inteira. Todo ano bissexto deve atender \u00e0s seguintes condi\u00e7\u00f5es:</p> <ul> <li>Se 400 for um divisor do ano, ent\u00e3o \u00e9 bissexto;</li> <li>Ou, se o ano for divis\u00edvel por 4, mas n\u00e3o por 100, ele \u00e9 considerado bissexto.</li> </ul> <p>Sabendo os crit\u00e9rios para identificar anos bissextos, iremos agora desenvolver um programa que far\u00e1 este trabalho para n\u00f3s. Basta que este programa solicite ao usu\u00e1rio o ano e, como sa\u00edda, informar uma das mensagens abaixo, a depender do resultado.</p> <ul> <li>BISSEXTO</li> <li>N\u00c3O \u00c9 BISSEXTO</li> <li>ANO INV\u00c1LIDO (caso seja informado valor igual ou inferior a zero)</li> </ul>"},{"location":"programacao/python/res/notebooks/aula-2_respostas/#exercicio-7","title":"Exerc\u00edcio 7\u00b6","text":"<p>Leia a idade de um nadador e escreva em tela a respectiva categoria em que se enquadra. Os intervalos de idade est\u00e3o descritos na tabela que segue.</p> \u00a0infantil A \u00a05 - 7 anos\u00a0 \u00a0infantil B\u00a0 \u00a08-10 anos \u00a0juvenil A\u00a0 \u00a011-13 anos\u00a0 \u00a0juvenil B\u00a0 \u00a014-17 anos\u00a0 \u00a0adulto \u00a0maiores de 18 anos"},{"location":"programacao/python/res/notebooks/aula-3/","title":"Strings e tratamento de exce\u00e7\u00f5es","text":"In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Resposta aqui\n</pre> # Resposta aqui"},{"location":"programacao/python/res/notebooks/aula-3/#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Elabore um programa que recebe uma string do usu\u00e1rio com, no m\u00ednimo, 10 caracteres. A partir deste texto recebido, apresente na sa\u00edda padr\u00e3o o que se pede na sequ\u00eancia:</p> <ol> <li>Contagem de caracteres</li> <li>A primeiro e o \u00faltimo caractere</li> <li>O caracter na posi\u00e7\u00e3o 5</li> <li>O caractere na posi\u00e7\u00e3o 5, considerando a string do final para o in\u00edcio</li> <li>Apresentar a string com todos os caracteres em mai\u00fasculo</li> <li>Apresentar a string com todos os caracteres em min\u00fasculo</li> <li>Apresentar a contagem de palavras</li> <li>Substitua todos os caracteres <code>a</code> por <code>*</code></li> <li>Verificar se h\u00e1 n\u00fameros na strings, informando <code>Sim</code> ou <code>N\u00e3o</code></li> <li>Inverter a string</li> <li>Verificar se a string \u00e9 um pal\u00edndromo</li> </ol>"},{"location":"programacao/python/res/notebooks/aula-3/#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Crie um programa que leia dois n\u00fameros reais. Apresente o valor da divis\u00e3o do primeiro pelo segundo. Certifique-se de tratar com a exce\u00e7\u00e3o  que corresponde a divis\u00e3o por zero.</p>"},{"location":"programacao/python/res/notebooks/aula-3/#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>Desenvolva um programa que leia o <code>raio</code> de um c\u00edrculo (n\u00famero de ponto flutuante). Apresente como sa\u00edda a \u00e1rea e o per\u00edmetro elemento geom\u00e9trico. Trate as exce\u00e7\u00f5es que podem ocorrer durante a execu\u00e7\u00e3o.</p>"},{"location":"programacao/python/res/notebooks/colecoes/","title":"Cole\u00e7\u00f5es de dados","text":"In\u00a0[\u00a0]: Copied! <pre>#sua resposta aqui\n</pre> #sua resposta aqui In\u00a0[\u00a0]: Copied! <pre>#sua resposta aqui\n</pre> #sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui"},{"location":"programacao/python/res/notebooks/colecoes/#exercicios-sobre-colecoes-de-dados","title":"Exerc\u00edcios sobre cole\u00e7\u00f5es de dados\u00b6","text":""},{"location":"programacao/python/res/notebooks/colecoes/#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Leia uma quantidade indeterminada de palavras, at\u00e9 encontrar <code>STOP</code> como valor. Armazene o resultado em uma lista. Imprima em tela a lista de palavras em mai\u00fasculo.</p>"},{"location":"programacao/python/res/notebooks/colecoes/#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Leia uma quantidade indeterminada de palavras, at\u00e9 encontrar <code>STOP</code> como valor. Imprima como sa\u00edda cada palavra lida e a quantidade de vezes que ela foi informada pelo usu\u00e1rio.</p>"},{"location":"programacao/python/res/notebooks/colecoes/#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>Leia tr\u00eas conjuntos de n\u00fameros de CPF separados por v\u00edrgula. Apresente em tela quais CPFs est\u00e3o presentes em todas elas.</p>"},{"location":"programacao/python/res/notebooks/colecoes/#exercicio-4","title":"Exerc\u00edcio 4\u00b6","text":"<p>Leia o nome de 10 pa\u00edses e os armazene em uma tupla. Mostre em tela em que posi\u00e7\u00e3o cada pa\u00eds foi armazenado.</p>"},{"location":"programacao/python/res/notebooks/colecoes/#exercicio-5","title":"Exerc\u00edcio 5\u00b6","text":"<p>Escreva um programa que recebe uma lista de n\u00fameros de tamanho indeterminado. Voc\u00ea dever\u00e1 receber todos os valores em uma \u00fanica entrada, separados por v\u00edrgula. Ap\u00f3s, escreva em tela a lista de valores, ordenada do menor para o maior, sem valores repetidos.</p>"},{"location":"programacao/python/res/notebooks/colecoes/#exercicio-6","title":"Exerc\u00edcio 6\u00b6","text":"<p>Voc\u00ea tem um supermercado e precisa calcular o total de vendas por categoria de produto (higiene, limpeza, bazar, etc.) diariamente. Voc\u00ea recebe uma quantidade indeterminada de valores com 3 informa\u00e7\u00f5es cada (separadas por ;): <code>produto;categoria;valor total vendas</code>. A \u00faltima entrada sempre ser\u00e1 o valor <code>;;</code>.</p> <p>Como sa\u00edda, o programa dever\u00e1 imprimir o total em vendas de cada categoria, do maior valor para o menor.</p>"},{"location":"programacao/python/res/notebooks/funcoes/","title":"Fun\u00e7\u00f5es","text":"In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"programacao/python/res/notebooks/funcoes/#questao-1","title":"Quest\u00e3o 1\u00b6","text":"<p>Voc\u00ea est\u00e1 codificando a funcionalidade de fechamento do carinho de compras de um e-commerce. O arquiteto do projeto solicitou a voc\u00ea a cria\u00e7\u00e3o de uma fun\u00e7\u00e3o chamada <code>fechar_carinho_compras</code>, que ir\u00e1 receber como argumento uma lista de produtos, conforme o exemplo abaixo. Sua fun\u00e7\u00e3o dever\u00e1 retornar o valor total do carrinho a ser pago pelo cliente.</p> <pre><code>pytyon\n\ncarinho =[\n    {\n        'produto':'teclado',\n        'qtde':1,\n        'vlr_unit': 150.56\n    },\n    {\n        'produto':'smartphone',\n        'qtde':1,\n        'vlr_unit': 900.00\n    },\n    {\n        'produto':'Pilha AA',\n        'qtde':45,\n        'vlr_unit': 3.00\n    },\n]\n\n</code></pre>"},{"location":"programacao/python/res/notebooks/funcoes/#questao-2","title":"Quest\u00e3o 2\u00b6","text":"<p>Desenvolva uma fun\u00e7\u00e3o para verificar se um determinado valor de texto informado como argumento \u00e9 um CPF v\u00e1lido. O retorno deve ser booleano (<code>True</code> ou <code>False</code>). Veja a regra de valida\u00e7\u00e3o aqui.</p>"},{"location":"programacao/python/res/notebooks/funcoes/#questao-3","title":"Quest\u00e3o 3\u00b6","text":"<p>Desenvolva uma fun\u00e7\u00e3o que retorna a classe de um endere\u00e7o IP V4 informado como par\u00e2metro. Saiba mais sobre classes IP aqui.</p>"},{"location":"programacao/python/res/notebooks/funcoes/#questao-4","title":"Quest\u00e3o 4\u00b6","text":"<p>Desenvolva uma fun\u00e7\u00e3o que retorne a proje\u00e7\u00e3o de rendimentos dos <code>n</code> meses informados como argumento, de um investimento cujo rendimento \u00e9 determinado pelo juros compostos mensais. O retorno deve ser o total de juros obtidos do m\u00eas <code>1</code> ao <code>n</code>.</p>"},{"location":"programacao/python/res/notebooks/lacos-respostas/","title":"Lacos respostas","text":"<p>Escreva um programa que solicite ao usu\u00e1rio um n\u00famero e imprima a soma de todos os digitos que o comp\u00f5em.</p> In\u00a0[\u00a0]: Copied! <pre>valor = input(\"Informe um valor\")\n\ntry:\n    soma = 0\n    for caractere in valor:\n        soma+= int(caractere)\n    \n    print(f\"SOMA DOS DIGITOS DE {valor} \u00e9 {soma} \")\nexcept ValueError:\n    print(\"Valor inv\u00e1lido\")\n</pre> valor = input(\"Informe um valor\")  try:     soma = 0     for caractere in valor:         soma+= int(caractere)          print(f\"SOMA DOS DIGITOS DE {valor} \u00e9 {soma} \") except ValueError:     print(\"Valor inv\u00e1lido\") <p>Escreva um programa que solicite ao usu\u00e1rio um n\u00famero e imprima se \u00e9 primo ou n\u00e3o</p> In\u00a0[\u00a0]: Copied! <pre>try:\n    valor = int(input(\"Informe um valor\"))\n    divisores = False\n    for div in range(2,valor//2):\n        if valor%div ==0:\n            divisores=True\n            break\n    \n    if not divisores:\n        print(f\"{valor} \u00e9 PRIMO\")\n    else:\n        print(f\"{valor} N\u00c3O \u00e9 PRIMO\")\nexcept ValueError:\n    print(\"Valor inv\u00e1lido\")\n</pre> try:     valor = int(input(\"Informe um valor\"))     divisores = False     for div in range(2,valor//2):         if valor%div ==0:             divisores=True             break          if not divisores:         print(f\"{valor} \u00e9 PRIMO\")     else:         print(f\"{valor} N\u00c3O \u00e9 PRIMO\") except ValueError:     print(\"Valor inv\u00e1lido\") <p>Escreva um programa que imprima os n\u00fameros pares de 1 a 100 usando um loop for de 3 em 3 unidades.</p> In\u00a0[\u00a0]: Copied! <pre>for x in range(1,101,3):\n    if x%2==0:\n        print(x)\n</pre> for x in range(1,101,3):     if x%2==0:         print(x) <p>Escreva um programa que solicite ao usu\u00e1rio um n\u00famero e imprima a tabuada desse n\u00famero.</p> In\u00a0[\u00a0]: Copied! <pre>try:\n    valor = int(input(\"Gerar tabuada do nr?\"))\n   \n    for x in range(0,11):\n        print(f\"{valor} * {x} = {valor * x} \")   \nexcept ValueError:\n    print(\"Valor inv\u00e1lido\")\n</pre> try:     valor = int(input(\"Gerar tabuada do nr?\"))         for x in range(0,11):         print(f\"{valor} * {x} = {valor * x} \")    except ValueError:     print(\"Valor inv\u00e1lido\")  <p>Escreva um programa que imprima os n\u00fameros de 1 a 30 usando um loop while.</p> In\u00a0[\u00a0]: Copied! <pre>numero = 1\nwhile numero&lt;=30:\n    print(numero)\n    numero = numero + 1\n</pre> numero = 1 while numero&lt;=30:     print(numero)     numero = numero + 1   <p>Precisamos desenvolver um programa que calcule a m\u00e9dia aritm\u00e9tica dos n\u00fameros pares e dos n\u00fameros \u00edmpares de sequ\u00eancias num\u00e9ricas de tamanhos vari\u00e1veis. Sobre a entrada de dados ao programa, devemos considerar que ser\u00e1 uma quantidade x de valores inteiros. A finaliza\u00e7\u00e3o da sequ\u00eancia ser\u00e1 estabelecida pelo valor \u22121 ou \u22122. Observe a diferen\u00e7a:</p> <ul> <li>Ao receber \u22121, o programa deve apresentar a m\u00e9dia aritm\u00e9tica dos valores pares e dos valores \u00edmpares da sequ\u00eancia (desconsiderando o  \u22121 ) e ent\u00e3o aguardar a entrada de uma nova sequ\u00eancia.</li> <li>Ao receber \u22122, o programa deve apresentar a m\u00e9dia dos valores pares e dos valores \u00edmpares da sequ\u00eancia  (desconsiderando o  \u22122) e finalizar o programa.</li> </ul> <p>Exemplo de entrada:</p> ENTRADA 177  278  117  263  196  295  167  12  -1 206  201  193  276  215  171  -2 <p>Exemplo de sa\u00edda:</p> SA\u00cdDA MP = 162 MI = 203.8 MP = 241 MI = 195 In\u00a0[\u00a0]: Copied! <pre>soma_par=0\nsoma_impar=0\nqtd_pares=0\nqtd_impares=0\nwhile True:\n    numero = 0\n    try:\n        numero = int(input(\"Informe o pr\u00f3ximo valor\"))\n    except ValueError:\n        print(\"Valor n\u00e3o inteiro\")\n        continue\n\n    match numero:\n        case -1|-2:\n            media_p = soma_par/qtd_pares\n            media_i = soma_impar/qtd_impares\n            print(f\"MP = {media_p} MI = {media_i}\")\n            soma_par=0\n            soma_impar=0\n            qtd_pares=0\n            qtd_impares=0\n            if numero==-2:\n                break\n        case numero if numero%2==0:\n            soma_par = soma_par + numero\n            qtd_pares = qtd_pares + 1\n        case _:    \n            soma_impar = soma_impar + numero\n            qtd_impares = qtd_impares + 1\n</pre> soma_par=0 soma_impar=0 qtd_pares=0 qtd_impares=0 while True:     numero = 0     try:         numero = int(input(\"Informe o pr\u00f3ximo valor\"))     except ValueError:         print(\"Valor n\u00e3o inteiro\")         continue      match numero:         case -1|-2:             media_p = soma_par/qtd_pares             media_i = soma_impar/qtd_impares             print(f\"MP = {media_p} MI = {media_i}\")             soma_par=0             soma_impar=0             qtd_pares=0             qtd_impares=0             if numero==-2:                 break         case numero if numero%2==0:             soma_par = soma_par + numero             qtd_pares = qtd_pares + 1         case _:                 soma_impar = soma_impar + numero             qtd_impares = qtd_impares + 1 <p>Caixas eletr\u00f4nicos precisam ter a capacidade de estipular a combina\u00e7\u00e3o correta de c\u00e9dulas necess\u00e1rias para chegar a um determinado valor solicitado pelo correntista em opera\u00e7\u00f5es de saque. De forma semelhante, alguns sistemas de venda ao consumidor apresentam tal informa\u00e7\u00e3o para auxiliar o operador na elabora\u00e7\u00e3o do troco.</p> <p>Vamos considerar nossa moeda, o Real, como contexto para elabora\u00e7\u00e3o do programa. Sabemos que est\u00e3o dispon\u00edveis c\u00e9dulas com valores de R$ 200, R$ 100, R$ 50, R$ 20,R$ 10, R$ 5 e R$ 2  e moedas de R$ 1.00, R$ 0.50, R$ 0.25, R$ 0.10,  R$ 0.05 e R$ 0.01.</p> <p>A entrada do programa ser\u00e1 um valor real arbitr\u00e1rio, positivo, com duas casas decimais. A sa\u00edda, por sua vez, ser\u00e1 a lista de c\u00e9dulas e moedas, com as respectivas quantidades, necess\u00e1rias para chegar ao valor informado.</p> <p>Por exemplo, se informado 9.69, o resultado esperado \u00e9:</p> SA\u00cdDA 1 NOTAS DE R$ 5 2 NOTAS DE R$ 2 1 MOEDAS DE R$ 0.50 1 MOEDAS DE R$ 0.10 1 MOEDAS DE R$ 0.05 4 MOEDAS DE R$ 0.01 In\u00a0[\u00a0]: Copied! <pre>cedulas = [200,100,50,20,10,5,2,1,.5,.25,.1,.05,.01]\n\ntry:\n    valor = float(input(\"Valor: \"))\n    for cedula in cedulas:\n        if cedula&lt;= valor:\n            qtd_cedulas = valor//cedula\n            print(f\"{int(qtd_cedulas)} {'NOTAS' if cedula &gt;=2 else 'MOEDAS'} {cedula}\")\n            valor=round(valor%cedula,2)\nexcept ValueError:\n    print(\"Valor informado \u00e9 inv\u00e1lido\")\n</pre> cedulas = [200,100,50,20,10,5,2,1,.5,.25,.1,.05,.01]  try:     valor = float(input(\"Valor: \"))     for cedula in cedulas:         if cedula&lt;= valor:             qtd_cedulas = valor//cedula             print(f\"{int(qtd_cedulas)} {'NOTAS' if cedula &gt;=2 else 'MOEDAS'} {cedula}\")             valor=round(valor%cedula,2) except ValueError:     print(\"Valor informado \u00e9 inv\u00e1lido\") <p>Ser\u00e1 realizado um concurso p\u00fablico para preencher vagas no poder executivo de uma prefeitura qualquer. As regras de aprova\u00e7\u00e3o que o edital especifica s\u00e3o:</p> <ul> <li>Nota nas disciplinas de Matem\u00e1tica, Direito Constitucional e Direito P\u00fablico iguais ou superiores a 70 pontos;</li> <li>Nota na Reda\u00e7\u00e3o superior a 600 pontos.</li> </ul> <p>Para agilizar a apresenta\u00e7\u00e3o dos resultados, a prefeitura nos solicitou o desenvolvimento de um programa para apresentar a lista de aprovados. Nesta lista, al\u00e9m de constar o nome do candidato, dever\u00e1 estar presente:</p> <ul> <li>Pontua\u00e7\u00e3o total do candidato (soma dos pontos obtidos nas disciplinas e reda\u00e7\u00e3o);</li> <li>Ap\u00f3s o \u00faltimo candidato, apresentar a contagem de aprovados e m\u00e9dia das notas finais deste grupo.</li> </ul> <p>Como entradas, o programa dever\u00e1 receber um n\u00famero ilimitado de candidatos e suas respectivas notas, somente finalizando ao encontrar como valor para nome a palavra FIM. As informa\u00e7\u00f5es de candidato devem ser lidas na seguinte sequ\u00eancia: nome, nota em matem\u00e1tica, nota em direito constitucional, nota em direito p\u00fablico e nota na reda\u00e7\u00e3o. Veja o exemplo que segue:</p> <p>Exemplo de entrada</p> ENTRADA CANDIDATO1 94 91 93 800 CANDIDATO2 81 62 68 601 CANDIDATO3 88 96 84 600 CANDIDATO4 76 100 78 500 CANDIDATO5 85 82 80 650 CANDIDATO6 79 75 71 895 CANDIDATO7 95 64 97 425 CANDIDATO8 63 69 65 900 CANDIDATO9 67 74 89 658 CANDIDATO10 83 86 99 758 CANDIDATO11 73 66 77 864 CANDIDATO12 87 98 61 560 CANDIDATO13 60 72 70 500 CANDIDATO14 92 90 85 868 FIM <p>Resultado da entrada anterior:</p> SA\u00cdDA CANDIDATO1 - 1078 PONTOS CANDIDATO5 - 897 PONTOS CANDIDATO6 - 1120 PONTOS CANDIDATO10 - 1026 PONTOS CANDIDATO14 - 1135 PONTOS APROVADOS: 5 M\u00c9DIA: 1051.20 In\u00a0[\u00a0]: Copied! <pre>nr_aprovados=0\nsoma_aprovados=0\nwhile True:\n    entrada = input(\"Candidato ou FIM\")\n    if entrada.strip().upper() == 'FIM':\n        break\n    dados = entrada.split(\" \")\n    if int(dados[1])&gt;=70 and int(dados[2])&gt;=70 and int(dados[3])&gt;=70 and int(dados[4])&gt;600:\n        nota = int(dados[1]) + int(dados[2]) + int(dados[3]) + int(dados[4])\n        soma_aprovados = soma_aprovados + nota\n        nr_aprovados+=1\n        print(f\"{dados[0]} - {nota} PONTOS\")\n\nprint(f\"APROVADOS: {nr_aprovados}\")\nif nr_aprovados&gt;0:\n    print(\"M\u00c9DIA: {:.2f}\".format(soma_aprovados/nr_aprovados))\n</pre> nr_aprovados=0 soma_aprovados=0 while True:     entrada = input(\"Candidato ou FIM\")     if entrada.strip().upper() == 'FIM':         break     dados = entrada.split(\" \")     if int(dados[1])&gt;=70 and int(dados[2])&gt;=70 and int(dados[3])&gt;=70 and int(dados[4])&gt;600:         nota = int(dados[1]) + int(dados[2]) + int(dados[3]) + int(dados[4])         soma_aprovados = soma_aprovados + nota         nr_aprovados+=1         print(f\"{dados[0]} - {nota} PONTOS\")  print(f\"APROVADOS: {nr_aprovados}\") if nr_aprovados&gt;0:     print(\"M\u00c9DIA: {:.2f}\".format(soma_aprovados/nr_aprovados))        <pre>\nO Kernel deu pane ao executar o c\u00f3digo na c\u00e9lula atual ou em uma c\u00e9lula anterior. \n\nAnalise o c\u00f3digo nas c\u00e9lulas para identificar uma poss\u00edvel causa da pane. \n\nClique &lt;a href='https://aka.ms/vscodeJupyterKernelCrash'&gt;aqui&lt;/a&gt; para obter mais informa\u00e7\u00f5es. \n\nConsulte Jupyter &lt;a href='command:jupyter.viewOutput'&gt;log&lt;/a&gt; para obter mais detalhes.</pre>"},{"location":"programacao/python/res/notebooks/lacos/","title":"La\u00e7os de repeti\u00e7\u00e3o","text":"<p>Escreva um programa que solicite ao usu\u00e1rio um n\u00famero e imprima a soma de todos os digitos que o comp\u00f5em.</p> In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui <p>Escreva um programa que solicite ao usu\u00e1rio um n\u00famero e imprima se \u00e9 primo ou n\u00e3o</p> In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui <p>Escreva um programa que imprima os n\u00fameros pares de 1 a 100 usando um loop for de 3 em 3 unidades.</p> In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui <p>Escreva um programa que solicite ao usu\u00e1rio um n\u00famero e imprima a tabuada desse n\u00famero.</p> In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui <p>Escreva um programa que imprima os n\u00fameros de 1 a 30 usando um loop while.</p> In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui <p>Precisamos desenvolver um programa que calcule a m\u00e9dia aritm\u00e9tica dos n\u00fameros pares e dos n\u00fameros \u00edmpares de sequ\u00eancias num\u00e9ricas de tamanhos vari\u00e1veis. Sobre a entrada de dados ao programa, devemos considerar que ser\u00e1 uma quantidade x de valores inteiros. A finaliza\u00e7\u00e3o da sequ\u00eancia ser\u00e1 estabelecida pelo valor \u22121 ou \u22122. Observe a diferen\u00e7a:</p> <ul> <li>Ao receber \u22121, o programa deve apresentar a m\u00e9dia aritm\u00e9tica dos valores pares e dos valores \u00edmpares da sequ\u00eancia (desconsiderando o  \u22121 ) e ent\u00e3o aguardar a entrada de uma nova sequ\u00eancia.</li> <li>Ao receber \u22122, o programa deve apresentar a m\u00e9dia dos valores pares e dos valores \u00edmpares da sequ\u00eancia  (desconsiderando o  \u22122) e finalizar o programa.</li> </ul> <p>Exemplo de entrada:</p> ENTRADA 177  278  117  263  196  295  167  12  -1 206  201  193  276  215  171  -2 <p>Exemplo de sa\u00edda:</p> SA\u00cdDA MP = 162 MI = 203.8 MP = 241 MI = 195 In\u00a0[\u00a0]: Copied! <pre>#Sua resposta aqui\n</pre> #Sua resposta aqui <p>Caixas eletr\u00f4nicos precisam ter a capacidade de estipular a combina\u00e7\u00e3o correta de c\u00e9dulas necess\u00e1rias para chegar a um determinado valor solicitado pelo correntista em opera\u00e7\u00f5es de saque. De forma semelhante, alguns sistemas de venda ao consumidor apresentam tal informa\u00e7\u00e3o para auxiliar o operador na elabora\u00e7\u00e3o do troco.</p> <p>Vamos considerar nossa moeda, o Real, como contexto para elabora\u00e7\u00e3o do programa. Sabemos que est\u00e3o dispon\u00edveis c\u00e9dulas com valores de R$ 200, R$ 100, R$ 50, R$ 20,R$ 10, R$ 5 e R$ 2  e moedas de R$ 1.00, R$ 0.50, R$ 0.25, R$ 0.10,  R$ 0.05 e R$ 0.01.</p> <p>A entrada do programa ser\u00e1 um valor real arbitr\u00e1rio, positivo, com duas casas decimais. A sa\u00edda, por sua vez, ser\u00e1 a lista de c\u00e9dulas e moedas, com as respectivas quantidades, necess\u00e1rias para chegar ao valor informado.</p> <p>Por exemplo, se informado 9.69, o resultado esperado \u00e9:</p> SA\u00cdDA 1 NOTAS DE R$ 5 2 NOTAS DE R$ 2 1 MOEDAS DE R$ 0.50 1 MOEDAS DE R$ 0.10 1 MOEDAS DE R$ 0.05 4 MOEDAS DE R$ 0.01 In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui <p>Ser\u00e1 realizado um concurso p\u00fablico para preencher vagas no poder executivo de uma prefeitura qualquer. As regras de aprova\u00e7\u00e3o que o edital especifica s\u00e3o:</p> <ul> <li>Nota nas disciplinas de Matem\u00e1tica, Direito Constitucional e Direito P\u00fablico iguais ou superiores a 70 pontos;</li> <li>Nota na Reda\u00e7\u00e3o superior a 600 pontos.</li> </ul> <p>Para agilizar a apresenta\u00e7\u00e3o dos resultados, a prefeitura nos solicitou o desenvolvimento de um programa para apresentar a lista de aprovados. Nesta lista, al\u00e9m de constar o nome do candidato, dever\u00e1 estar presente:</p> <ul> <li>Pontua\u00e7\u00e3o total do candidato (soma dos pontos obtidos nas disciplinas e reda\u00e7\u00e3o);</li> <li>Ap\u00f3s o \u00faltimo candidato, apresentar a contagem de aprovados e m\u00e9dia das notas finais deste grupo.</li> </ul> <p>Como entradas, o programa dever\u00e1 receber um n\u00famero ilimitado de candidatos e suas respectivas notas, somente finalizando ao encontrar como valor para nome a palavra FIM. As informa\u00e7\u00f5es de candidato devem ser lidas na seguinte sequ\u00eancia: nome, nota em matem\u00e1tica, nota em direito constitucional,** nota em direito p\u00fablico** e nota na reda\u00e7\u00e3o. Veja o exemplo que segue:</p> <p>Exemplo de entrada</p> ENTRADA CANDIDATO1 94 91 93 800 CANDIDATO2 81 62 68 601 CANDIDATO3 88 96 84 600 CANDIDATO4 76 100 78 500 CANDIDATO5 85 82 80 650 CANDIDATO6 79 75 71 895 CANDIDATO7 95 64 97 425 CANDIDATO8 63 69 65 900 CANDIDATO9 67 74 89 658 CANDIDATO10 83 86 99 758 CANDIDATO11 73 66 77 864 CANDIDATO12 87 98 61 560 CANDIDATO13 60 72 70 500 CANDIDATO14 92 90 85 868 FIM <p>Resultado da entrada anterior:</p> SA\u00cdDA CANDIDATO1 - 1078 PONTOS CANDIDATO5 - 897 PONTOS CANDIDATO6 - 1120 PONTOS CANDIDATO10 - 1026 PONTOS CANDIDATO14 - 1135 PONTOS APROVADOS: 5 M\u00c9DIA: 1051.20 In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01-respostas%20copy/","title":"2024 01 respostas copy","text":"<p>Observa\u00e7\u00f5es:</p> <ul> <li>O programa deve ser desenvolvido em Python.</li> <li>N\u00e3o informe mensagens na fun\u00e7\u00e3o <code>input</code>. Lembre-se que a avalia\u00e7\u00e3o \u00e9 autom\u00e1tica e tais mensagens s\u00e3o consideradas como sa\u00edda do programa.</li> <li>A sa\u00edda deve respeitar o formato definido, na caixa dos caracteres e quantidade de espa\u00e7os para ser v\u00e1lida.</li> </ul> In\u00a0[\u00a0]: Copied! <pre>numeros = []\nwhile True:\n    num = input(\"Digite um n\u00famero inteiro ou 'P' para parar: \")\n    if num.lower() == 'p':\n        break\n    try:\n        num = int(num)\n        numeros.append(num)\n    except ValueError:\n        continue\n\nimpares = [x for x in numeros if x % 2 != 0]\npares = [x for x in numeros if x % 2 == 0]\n\nif impares:\n    menor_impar = min(impares)\n    print(f\"MIN-IMPAR: {menor_impar}\")\nelse:\n    print(\"NI\")\n\nif pares:\n    maior_par = max(pares)\n    print(f\"MAX-PAR: {maior_par}\")\nelse:\n    print(\"NP\")\n</pre> numeros = [] while True:     num = input(\"Digite um n\u00famero inteiro ou 'P' para parar: \")     if num.lower() == 'p':         break     try:         num = int(num)         numeros.append(num)     except ValueError:         continue  impares = [x for x in numeros if x % 2 != 0] pares = [x for x in numeros if x % 2 == 0]  if impares:     menor_impar = min(impares)     print(f\"MIN-IMPAR: {menor_impar}\") else:     print(\"NI\")  if pares:     maior_par = max(pares)     print(f\"MAX-PAR: {maior_par}\") else:     print(\"NP\")   In\u00a0[8]: Copied! <pre>valores = [\n    1, 'A', 2, 'B', 3, 'C', 4, 'D', 5, 'E', 6, 'F', 7, 'G', 8, 'H', 9, 'I', 10, 'J',\n    -11, 'K', 12, 'L', 13, 'M', 14, 'N', 15, 'O', 'P'\n]\n\n\n\nnumeros = []\nfor num in valores:\n    try:\n        num = int(num)\n        numeros.append(num)\n    except ValueError:\n        continue\n\nimpares = [x for x in numeros if x % 2 != 0]\npares = [x for x in numeros if x % 2 == 0]\n\nif impares:\n    menor_impar = min(impares)\n    print(f\"MIN-IMPAR: {menor_impar}\")\nelse:\n    print(\"NI\")\n\nif pares:\n    maior_par = max(pares)\n    print(f\"MAX-PAR: {maior_par}\")\nelse:\n    print(\"NP\")\n</pre>  valores = [     1, 'A', 2, 'B', 3, 'C', 4, 'D', 5, 'E', 6, 'F', 7, 'G', 8, 'H', 9, 'I', 10, 'J',     -11, 'K', 12, 'L', 13, 'M', 14, 'N', 15, 'O', 'P' ]    numeros = [] for num in valores:     try:         num = int(num)         numeros.append(num)     except ValueError:         continue  impares = [x for x in numeros if x % 2 != 0] pares = [x for x in numeros if x % 2 == 0]  if impares:     menor_impar = min(impares)     print(f\"MIN-IMPAR: {menor_impar}\") else:     print(\"NI\")  if pares:     maior_par = max(pares)     print(f\"MAX-PAR: {maior_par}\") else:     print(\"NP\")   <pre>MIN-IMPAR: -11\nMAX-PAR: 14\n</pre> In\u00a0[\u00a0]: Copied! <pre>while True:\n    linha = input(\"Valor\")\n    if linha.lower()=='stop':\n        break\n    \n    total = 0\n    for c in linha.lower():\n        if c in ['a','e','i','o','u']:\n            total+=1\n    print(total)\n</pre> while True:     linha = input(\"Valor\")     if linha.lower()=='stop':         break          total = 0     for c in linha.lower():         if c in ['a','e','i','o','u']:             total+=1     print(total) In\u00a0[10]: Copied! <pre>linhas = [\n    \"A pessoa que nunca errou nunca tentou algo novo.\",\n    \"A vida e o que acontece enquanto voce esta ocupado fazendo outros planos.\",\n    \"A mente que se abre a uma nova ideia jamais voltara ao seu tamanho original.\",\n    \"A imaginacao e mais importante que o conhecimento. Conhecimento auxilia por fora, mas so o amor socorre por dentro.\",\n    \"O verdadeiro sucesso e encontrar trabalho que satisfa\u00e7a sua alma.\",\n    \"A felicidade esta onde voce a coloca.\",\n    \"A melhor maneira de prever o futuro e inventa-lo.\",\n    \"A unica maneira de fazer um otimo trabalho e amar o que voce faz.\",\n    \"A mente e tudo. Voce se torna aquilo que voce pensa.\",\n    \"Eu nao falhei. So descobri 10.000 maneiras que nao funcionam.\",\n    \"A felicidade e nao ter medo.\",\n    \"Tudo o que um sonho precisa para ser realizado e alguem que acredite que ele possa ser realizado.\",\n    \"O sucesso e a soma de pequenos esforcos repetidos dia apos dia.\",\n    \"Voce nunca e velho demais\",\n    \"stop\"\n]\n\n\nfor linha in linhas:\n   # linha = input(\"Valor\")\n    if linha.lower()=='stop':\n        break\n    \n    total = 0\n    for c in linha.lower():\n        if c in ['a','e','i','o','u']:\n            total+=1\n    print(total)\n</pre>  linhas = [     \"A pessoa que nunca errou nunca tentou algo novo.\",     \"A vida e o que acontece enquanto voce esta ocupado fazendo outros planos.\",     \"A mente que se abre a uma nova ideia jamais voltara ao seu tamanho original.\",     \"A imaginacao e mais importante que o conhecimento. Conhecimento auxilia por fora, mas so o amor socorre por dentro.\",     \"O verdadeiro sucesso e encontrar trabalho que satisfa\u00e7a sua alma.\",     \"A felicidade esta onde voce a coloca.\",     \"A melhor maneira de prever o futuro e inventa-lo.\",     \"A unica maneira de fazer um otimo trabalho e amar o que voce faz.\",     \"A mente e tudo. Voce se torna aquilo que voce pensa.\",     \"Eu nao falhei. So descobri 10.000 maneiras que nao funcionam.\",     \"A felicidade e nao ter medo.\",     \"Tudo o que um sonho precisa para ser realizado e alguem que acredite que ele possa ser realizado.\",     \"O sucesso e a soma de pequenos esforcos repetidos dia apos dia.\",     \"Voce nunca e velho demais\",     \"stop\" ]   for linha in linhas:    # linha = input(\"Valor\")     if linha.lower()=='stop':         break          total = 0     for c in linha.lower():         if c in ['a','e','i','o','u']:             total+=1     print(total) <pre>20\n31\n34\n46\n26\n16\n19\n27\n21\n23\n12\n41\n26\n10\n</pre> In\u00a0[\u00a0]: Copied! <pre>outras_medias = {}\n\n\n\nfor _ in range(1,6):\n    entrada = input(\"Informe as m\u00e9dias\")\n    dados = entrada.split(\";\")\n    nome = dados[0]\n    notas = list(map(float, dados[1:]))\n    media = sum(notas) / len(notas)\n    outras_medias[nome] = media\n\n\nnome_maior_media_outras = max(outras_medias, key=outras_medias.get)\nmaior_media_outras = outras_medias[nome_maior_media_outras]\n\nprint(f\"{nome_maior_media_outras}: {maior_media_outras}\")\n</pre> outras_medias = {}    for _ in range(1,6):     entrada = input(\"Informe as m\u00e9dias\")     dados = entrada.split(\";\")     nome = dados[0]     notas = list(map(float, dados[1:]))     media = sum(notas) / len(notas)     outras_medias[nome] = media   nome_maior_media_outras = max(outras_medias, key=outras_medias.get) maior_media_outras = outras_medias[nome_maior_media_outras]  print(f\"{nome_maior_media_outras}: {maior_media_outras}\")  In\u00a0[25]: Copied! <pre>entradas = [\n\"Ana;7.5;8.3\",\n\"Jo\u00e3o;6.8;7.2\",\n\"Maria;9.1;8.7\",\n\"Pedro;5.6;6.4\",\n\"Carla;8.3;9.0\"\n\n]\n\nmedia_m=0\nnome_m=\"\"\n\n\nfor entrada in entradas:\n     \n    dados = entrada.split(\";\")\n    nome = dados[0]\n    notas = list(map(float, dados[1:]))\n    media = sum(notas) / len(notas)\n    if media &gt; media_m:\n        media_m = media\n        nome_m = nome\n\nprint(f\"{nome_m}: {round(media_m,2)}\")\n</pre>  entradas = [ \"Ana;7.5;8.3\", \"Jo\u00e3o;6.8;7.2\", \"Maria;9.1;8.7\", \"Pedro;5.6;6.4\", \"Carla;8.3;9.0\"  ]  media_m=0 nome_m=\"\"   for entrada in entradas:           dados = entrada.split(\";\")     nome = dados[0]     notas = list(map(float, dados[1:]))     media = sum(notas) / len(notas)     if media &gt; media_m:         media_m = media         nome_m = nome  print(f\"{nome_m}: {round(media_m,2)}\")  <pre>Maria: 8.9\n</pre> In\u00a0[\u00a0]: Copied! <pre>from functools import reduce\n\n\nwhile True:\n    entrada = input(\"\")\n    valores = entrada.split(\" \")\n    medidas = list(map(float,valores[1:]))\n    if not all(medidas):\n            break\n    area=0\n    match valores[0].upper():\n        case 'Q'|'R':\n            area = reduce(lambda a, b: a*b,medidas)\n        case 'T':\n            area = ((medidas[0]+medidas[1])*medidas[2])/2\n    print(\"{:.2f}\".format(area))\n</pre> from functools import reduce   while True:     entrada = input(\"\")     valores = entrada.split(\" \")     medidas = list(map(float,valores[1:]))     if not all(medidas):             break     area=0     match valores[0].upper():         case 'Q'|'R':             area = reduce(lambda a, b: a*b,medidas)         case 'T':             area = ((medidas[0]+medidas[1])*medidas[2])/2     print(\"{:.2f}\".format(area)) In\u00a0[\u00a0]: Copied! <pre>from functools import reduce\n\nentradas = [\n    \"Q 3.2 3.2\",\n    \"R 5.5 8.7\",\n    \"T 7.1 4.8 6.3\",\n    \"Q 6.4 6.4\",\n    \"R 9.2 3.1\",\n    \"T 4.5 3.2 5.7\",\n    \"Q 7.8 7.8\",\n    \"R 4.7 6.9\",\n    \"T 6.6 5.4 7.2\",\n    \"Q 4.9 4.9\",\n    \"R 8.3 5.6\",\n    \"T 3.8 6.1 4.5\",\n    \"Q 5.7 5.7\",\n    \"R 7.2 9.8\",\n    \"T 9.5 7.3 8.1\",\n    \"Q 6.1 6.1\",\n    \"R 3.5 8.2\",\n    \"T 7.6 4.9 5.7\",\n    \"Q 8.4 8.4\",\n    \"R 5.8 9.3\",\n    \"T 3.2 5.9 4.1\",\n    \"Q 4.3 4.3\",\n    \"R 9.1 6.5\",\n    \"T 7.9 6.2 8.5\",\n    \"Q 3.9 3.9\",\n    \"R 8.8 4.6\",\n    \"T 5.6 4.7 6.9\",\n    \"Q 7.2 7.2\",\n    \"R 6.3 9.5\",\n    \"T 8.3 5.6 7.8\",\n    \"Q 5.4 5.4\",\n    \"R 4.6 8.9\",\n    \"T 6.7 4.8 6.2\",\n    \"Q 8.7 8.7\",\n    \"R 3.9 7.4\",\n    \"T 5.8 4.1 5.6\",\n    \"Q 9.3 9.3\",\n    \"R 7.6 9.2\",\n    \"T 8.9 6.3 8.1\"\n]\n\n\nfor entrada in entradas:\n    valores = entrada.split(\" \")\n    medidas = list(map(float,valores[1:]))\n    if not all(medidas):\n            break\n    area=0\n    match valores[0].upper():\n        case 'Q'|'R':\n            area = reduce(lambda a, b: a*b,medidas)\n        case 'T':\n            area = ((medidas[0]+medidas[1])*medidas[2])/2\n    print(\"{:.2f}\".format(area))\n</pre> from functools import reduce  entradas = [     \"Q 3.2 3.2\",     \"R 5.5 8.7\",     \"T 7.1 4.8 6.3\",     \"Q 6.4 6.4\",     \"R 9.2 3.1\",     \"T 4.5 3.2 5.7\",     \"Q 7.8 7.8\",     \"R 4.7 6.9\",     \"T 6.6 5.4 7.2\",     \"Q 4.9 4.9\",     \"R 8.3 5.6\",     \"T 3.8 6.1 4.5\",     \"Q 5.7 5.7\",     \"R 7.2 9.8\",     \"T 9.5 7.3 8.1\",     \"Q 6.1 6.1\",     \"R 3.5 8.2\",     \"T 7.6 4.9 5.7\",     \"Q 8.4 8.4\",     \"R 5.8 9.3\",     \"T 3.2 5.9 4.1\",     \"Q 4.3 4.3\",     \"R 9.1 6.5\",     \"T 7.9 6.2 8.5\",     \"Q 3.9 3.9\",     \"R 8.8 4.6\",     \"T 5.6 4.7 6.9\",     \"Q 7.2 7.2\",     \"R 6.3 9.5\",     \"T 8.3 5.6 7.8\",     \"Q 5.4 5.4\",     \"R 4.6 8.9\",     \"T 6.7 4.8 6.2\",     \"Q 8.7 8.7\",     \"R 3.9 7.4\",     \"T 5.8 4.1 5.6\",     \"Q 9.3 9.3\",     \"R 7.6 9.2\",     \"T 8.9 6.3 8.1\" ]   for entrada in entradas:     valores = entrada.split(\" \")     medidas = list(map(float,valores[1:]))     if not all(medidas):             break     area=0     match valores[0].upper():         case 'Q'|'R':             area = reduce(lambda a, b: a*b,medidas)         case 'T':             area = ((medidas[0]+medidas[1])*medidas[2])/2     print(\"{:.2f}\".format(area)) In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01-respostas%20copy/#questao-1-25-pontos","title":"Quest\u00e3o 1 [2.5 pontos]\u00b6","text":"<p>Desenvolva um programa em Python que leia uma quantidade indefinida de valores fornecidos pelo usu\u00e1rio, at\u00e9 que seja inserida a letra <code>P</code>. Ao receber <code>P</code> , o programa dever\u00e1 determinar e exibir o menor n\u00famero \u00edmpar e o maior n\u00famero par dentre os valores inteiros fornecidos.</p> <p>Orienta\u00e7\u00f5es</p> <ul> <li>O programa deve solicitar ao usu\u00e1rio valores repetidamente enquanto <code>P</code> n\u00e3o for informado.</li> <li>A caixa dos caracteres n\u00e3o importa</li> <li>O programa deve calcular e exibir corretamente o menor n\u00famero \u00edmpar e o maior n\u00famero par entre os n\u00fameros fornecidos.</li> <li>O programa deve lidar adequadamente com poss\u00edveis entradas inv\u00e1lidas, como letras ou s\u00edmbolos n\u00e3o reconhecidos como n\u00fameros inteiros, ignorando-as.</li> </ul> <p>Entrada</p> <p>A entrada ser\u00e1 composta por um n\u00famero indeterminado de valores (num\u00e9ricos e n\u00e3o num\u00e9ricos). Todo valor n\u00e3o inteiro deve ser desconsiderado pelo programa (com exce\u00e7\u00e3o de <code>P</code>) e uma nova entrada deve ser solicitada.</p> <p>Sa\u00edda</p> <p>Ao receber o valor <code>P</code>, o programa deve exibir o maior valor par e menor valor \u00edmpar. Aten\u00e7\u00e3o ao padr\u00e3o de sa\u00edda esperado:</p> <ul> <li>NI - Utilizar quando n\u00e3o houver \u00edmpares na entrada.</li> <li>NP - Utilizar quando n\u00e3o houver pares na entrada.</li> <li>MIN-IMPAR - Utilizar para apresentar o menor valor \u00edmpar.</li> <li>MAX-PAR - Utilizar para apresentar o maior valor par.</li> </ul> <p>Exemplo</p> Entrada Sa\u00edda Esperada 35 7 9 2 4 P MIN-IMPAR: 3MAX-PAR: 4 10 20 30 P NIMAX-PAR: 30"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01-respostas%20copy/#questao-2-25-pontos","title":"Quest\u00e3o 2 [2.5 pontos]\u00b6","text":"<p>Elabora um programa para ler uma quantidade indefinida de strings. Apresentar, para cada string lida, a quantidade de vogais nelas existentes. Considere que a entrada n\u00e3o ter\u00e1 caracteres acentuados.</p> <p>O programa deve encerrar quando receber o valor <code>STOP</code>.</p> Exemplo de Entrada Sa\u00edda Ol\u00e1 mundo 4 Python \u00e9 incr\u00edvel 6 Programa\u00e7\u00e3o \u00e9 divertida 8 STOP"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01-respostas%20copy/#questao-3-25-pontos","title":"Quest\u00e3o 3 [2.5 pontos]\u00b6","text":"<p>Elabore um programa para calcular a m\u00e9dia final (aritm\u00e9tica) de 5 estudantes da disciplina de Algoritmos e Programa\u00e7\u00e3o \ud83d\ude01. Cada entrada compreender\u00e1 o primeiro nome do estudante, nota da prova e nota do trabalho, estando os valores separados por <code>;</code>. Ao final, apresente o nome do estudante com a maior m\u00e9dia acompanhado da sua respectiva m\u00e9dia (2 casas decimais).</p> <p>Entrada</p> <p>| ENTRADA                                                                  \t| SA\u00cdDA      \t| |--------------------------------------------------------------------------\t|------------\t| | Emily;8.7;9.3Daniel;7.9;8.5Sophia;9.1;7.8Jacob;8.3;9.0Olivia;7.6;8.9 \t| Emily: 9.0 \t| | Aiden;8.2;7.5Emma;9.4;8.6Liam;7.8;9.2Ava;8.9;7.7Noah;9.1;8.3         \t| Emma: 9.0  \t|</p> <p>Dica: Para imprimir um valor real com duas casas decimais, voc\u00ea pode utilizar um comando o m\u00e9todo format da string. Por exemplo, <code>print(\"{:.2f}\".format(2.445677))</code> ir\u00e1 imprimir <code>2.45</code>.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01-respostas%20copy/#questao-4-25-pontos","title":"Quest\u00e3o 4 [2.5 pontos]\u00b6","text":"<p>Um estudante de engenharia precisa calcular a \u00e1rea de uma grande quantidade de formas geom\u00e9tricas, de tr\u00eas tipos diferentes: quadrados, trap\u00e9zios e ret\u00e2ngulos. Com o objetivo de facilitar seu trabalho, o estudante pensa desenvolver um programa em Python para realizar todos os c\u00e1lculos de maneira autom\u00e1tica.</p> <p>F\u00f3rmulas</p> <ul> <li>Para calcular a \u00e1rea de quadrados e ret\u00e2ngulos, aplica-se a f\u00f3rmula:</li> </ul> <p>$$area = lado * lado$$</p> <ul> <li>E para \u00e1rea do trap\u00e9zio:</li> </ul> <p>$$area = \\frac{base\\_maior + base\\_menor}{2} * altura$$</p> <p>Entrada</p> <p>A entrada do programa ser\u00e1 composto por uma quantidade indeterminada de medidas de lados, conforme o modelo da tabela que segue. Os valores estar\u00e3o separados por um espa\u00e7o. Importante salientar que, ao receber todas as medidas iguais a <code>0</code>, o programa deve parar sua execu\u00e7\u00e3o.</p> <p>|   Forma   \t| Padr\u00e3o de Entrada \t|                                           Descri\u00e7\u00e3o                                                                                               \t| |:---------:\t|:-----------------:\t|:-----------------------------------------------------------------------------------------------------------------------:\t                            | |  Quadrado \t|       Q 1 1       \t| Q indica que \u00e9 um quadrado; 1 1 representam a medida dos lados; Valores s\u00e3o separados por espa\u00e7o                        \t                        | | Ret\u00e2ngulo \t|       R 1 1       \t| R indica que \u00e9 um ret\u00e2ngulo; 1 1 representam a medida dos lados; Valores s\u00e3o separados por espa\u00e7o                                             \t| |  Trap\u00e9zio \t|      T 1 1 1      \t| T indica que \u00e9 um trap\u00e9zio; 1 1 1 representam, respectivamente, a medida da base maior, base menor e altura; Valores s\u00e3o separados por espa\u00e7o. \t|</p> <p>Sa\u00edda</p> <p>Para cada conjunto de medidas de lados, o programa deve imprimir \u00e1rea calculada, utilizando 2 casas decimais.</p> <p>Exemplos</p> Entrada Sa\u00edda Q 5 5 25 R 4 6 24 T 3 4 5 17.5 Q 7 7 49 R 8 3 24 T 6 5 4 22 Q 9 9 81 R 5 10 50 T 7 8 6 45 Q 3 3 9 Q 0 0"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01/","title":"2024 01","text":"In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui  In\u00a0[\u00a0]: Copied! <pre># sua resposta aqui\n</pre> # sua resposta aqui"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01/#observacoes","title":"Observa\u00e7\u00f5es\u00b6","text":"<ul> <li>Os programas devem ser desenvolvido em Python.</li> <li>N\u00e3o informe mensagens na fun\u00e7\u00e3o <code>input</code>. Lembre-se que a avalia\u00e7\u00e3o ser\u00e1 autom\u00e1tica e tais mensagens s\u00e3o consideradas como sa\u00edda do programa.</li> <li>A sa\u00edda deve respeitar o formato definido, em termos de caixa dos caracteres e quantidade de espa\u00e7os para ser v\u00e1lida.</li> <li>A entrega deve ser feita no Moodle (notebook) e na plataforma BeeCrowd.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01/#questao-1-25-pontos","title":"Quest\u00e3o 1 [2.5 pontos]\u00b6","text":"<p>Desenvolva um programa em Python que leia uma quantidade indefinida de valores fornecidos pelo usu\u00e1rio, at\u00e9 que seja inserida a letra <code>P</code>. Ao receber <code>P</code> , o programa dever\u00e1 determinar e exibir o menor n\u00famero \u00edmpar e o maior n\u00famero par dentre os valores inteiros fornecidos.</p> <p>Orienta\u00e7\u00f5es</p> <ul> <li>O programa deve solicitar ao usu\u00e1rio valores repetidamente enquanto <code>P</code> n\u00e3o for informado.</li> <li>A caixa dos caracteres n\u00e3o importa</li> <li>O programa deve calcular e exibir corretamente o menor n\u00famero \u00edmpar e o maior n\u00famero par entre os n\u00fameros fornecidos.</li> <li>O programa deve lidar adequadamente com poss\u00edveis entradas inv\u00e1lidas, como letras ou s\u00edmbolos n\u00e3o reconhecidos como n\u00fameros inteiros, ignorando-as.</li> </ul> <p>Entrada</p> <p>A entrada ser\u00e1 composta por um n\u00famero indeterminado de valores (num\u00e9ricos e n\u00e3o num\u00e9ricos). Todo valor n\u00e3o inteiro deve ser desconsiderado pelo programa (com exce\u00e7\u00e3o de <code>P</code>) e uma nova entrada deve ser solicitada.</p> <p>Sa\u00edda</p> <p>Ao receber o valor <code>P</code>, o programa deve exibir o maior valor par e menor valor \u00edmpar. Aten\u00e7\u00e3o ao padr\u00e3o de sa\u00edda esperado:</p> <ul> <li>NI - Utilizar quando n\u00e3o houver \u00edmpares na entrada.</li> <li>NP - Utilizar quando n\u00e3o houver pares na entrada.</li> <li>MIN-IMPAR - Utilizar para apresentar o menor valor \u00edmpar.</li> <li>MAX-PAR - Utilizar para apresentar o maior valor par.</li> </ul> <p>Exemplo</p> Entrada Sa\u00edda Esperada 35 7 9 2 4 P MIN-IMPAR: 3MAX-PAR: 4 10 20 30 P NIMAX-PAR: 30"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01/#questao-2-25-pontos","title":"Quest\u00e3o 2 [2.5 pontos]\u00b6","text":"<p>Elabora um programa para ler uma quantidade indefinida de strings. Apresentar, para cada string lida, a quantidade de vogais nelas existentes. Considere que a entrada n\u00e3o ter\u00e1 caracteres acentuados.</p> <p>O programa deve encerrar quando receber o valor <code>STOP</code>.</p> Exemplo de Entrada Sa\u00edda Ol\u00e1 mundo 4 Python \u00e9 incr\u00edvel 6 Programa\u00e7\u00e3o \u00e9 divertida 8 STOP"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01/#questao-3-25-pontos","title":"Quest\u00e3o 3 [2.5 pontos]\u00b6","text":"<p>Elabore um programa para calcular a m\u00e9dia final (aritm\u00e9tica) de 5 estudantes da disciplina de Algoritmos e Programa\u00e7\u00e3o \ud83d\ude01. Cada entrada compreender\u00e1 o primeiro nome do estudante, nota da prova e nota do trabalho, estando os valores separados por <code>;</code>. Ao final, apresente o nome do estudante com a maior m\u00e9dia acompanhado da sua respectiva m\u00e9dia (2 casas decimais).</p> <p>Entrada</p> <p>| ENTRADA                                                                  \t| SA\u00cdDA      \t| |--------------------------------------------------------------------------\t|------------\t| | Emily;8.7;9.3Daniel;7.9;8.5Sophia;9.1;7.8Jacob;8.3;9.0Olivia;7.6;8.9 \t| Emily: 9.0 \t| | Aiden;8.2;7.5Emma;9.4;8.6Liam;7.8;9.2Ava;8.9;7.7Noah;9.1;8.3         \t| Emma: 9.0  \t|</p> <p>Dica: Para imprimir um valor real com duas casas decimais, voc\u00ea pode utilizar um comando o m\u00e9todo format da string. Por exemplo, <code>print(\"{:.2f}\".format(2.445677))</code> ir\u00e1 imprimir <code>2.45</code>.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av1/2024-01/#questao-4-25-pontos","title":"Quest\u00e3o 4 [2.5 pontos]\u00b6","text":"<p>Um estudante de engenharia precisa calcular a \u00e1rea de uma grande quantidade de formas geom\u00e9tricas, de tr\u00eas tipos diferentes: quadrados, trap\u00e9zios e ret\u00e2ngulos. Com o objetivo de facilitar seu trabalho, o estudante pensa desenvolver um programa em Python para realizar todos os c\u00e1lculos de maneira autom\u00e1tica.</p> <p>F\u00f3rmulas</p> <ul> <li>Para calcular a \u00e1rea de quadrados e ret\u00e2ngulos, aplica-se a f\u00f3rmula:</li> </ul> <p>$$area = lado * lado$$</p> <ul> <li>E para \u00e1rea do trap\u00e9zio:</li> </ul> <p>$$area = (\\frac{base\\_maior + base\\_menor}{2}) * altura$$</p> <p>Entrada</p> <p>A entrada do programa ser\u00e1 composto por uma quantidade indeterminada de medidas de lados, conforme o modelo da tabela que segue. Os valores estar\u00e3o separados por um espa\u00e7o. Importante salientar que, ao receber todas as medidas iguais a <code>0</code>, o programa deve parar sua execu\u00e7\u00e3o.</p> <p>|   Forma   \t| Padr\u00e3o de Entrada \t|                                           Descri\u00e7\u00e3o                                                                                               \t| |:---------:\t|:-----------------:\t|:-----------------------------------------------------------------------------------------------------------------------:\t                            | |  Quadrado \t|       Q 1 1       \t| Q indica que \u00e9 um quadrado; 1 1 representam a medida dos lados; Valores s\u00e3o separados por espa\u00e7o                        \t                        | | Ret\u00e2ngulo \t|       R 1 1       \t| R indica que \u00e9 um ret\u00e2ngulo; 1 1 representam a medida dos lados; Valores s\u00e3o separados por espa\u00e7o                                             \t| |  Trap\u00e9zio \t|      T 1 1 1      \t| T indica que \u00e9 um trap\u00e9zio; 1 1 1 representam, respectivamente, a medida da base maior, base menor e altura; Valores s\u00e3o separados por espa\u00e7o. \t|</p> <p>Sa\u00edda</p> <p>Para cada conjunto de medidas de lados, o programa deve imprimir \u00e1rea calculada, utilizando 2 casas decimais.</p> <p>Exemplos</p> Entrada Sa\u00edda Q 5 5 25 R 4 6 24 T 3 4 5 17.5 Q 7 7 49 R 8 3 24 T 6 5 4 22 Q 9 9 81 R 5 10 50 T 7 8 6 45 Q 3 3 9 Q 0 0"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2%20b/","title":"2024 2 b","text":"In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre>#Sua reposta aqui\n</pre> #Sua reposta aqui In\u00a0[\u00a0]: Copied! <pre>#Sua reposta aqui\n</pre> #Sua reposta aqui"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2%20b/#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<ul> <li>Esta avalia\u00e7\u00e3o tem peso 4 na m\u00e9dia final da disciplina</li> <li>Fa\u00e7a os exerc\u00edcios com aten\u00e7\u00e3o. Em caso de d\u00favidas, pe\u00e7a ajuda ao professor</li> <li>N\u00c3O \u00e9 permitido acesso \u00e0 Internet ou meios de comunica\u00e7\u00e3o durante a realiza\u00e7\u00e3o da avalia\u00e7\u00e3o</li> <li>Voc\u00ea pode utilizar qualquer material de consulta, f\u00edsico ou digital, dispon\u00edvel, desde que seja off-line</li> <li>A entrega ser\u00e1 no Moodle, em uma atividade espec\u00edfica.</li> <li>De tempos em tempos salve as altera\u00e7\u00f5es deste documento para n\u00e3o perder seu trabalho em caso de queda de energia ou algo semelhantes.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2%20b/#exercicio-1-25-pontos","title":"Exerc\u00edcio 1 [2.5 pontos]\u00b6","text":"<p>O Instituto Bem Viver est\u00e1 realizando uma pesquisa para identificar a m\u00e9dia aritm\u00e9tica de peso dos adultos com sobrepeso. Segundo a Organiza\u00e7\u00e3o Mundial da Sa\u00fade (OMS), encontra-se em sobrepeso todo indiv\u00edduo cujo \u00cdndice de Massa Corp\u00f3rea (IMC) \u00e9 maior ou igual a 25 e menor que 30. O c\u00e1lculo do IMC ocorre em fun\u00e7\u00e3o do peso (Kg) e da altura (em metros) do indiv\u00edduo por meio da f\u00f3rmula a seguir:</p> <p>$ IMC = \\frac{peso}{altura^2} $</p> <p>Para auxiliar os pesquisadores, voc\u00ea deve desenvolver um programa que leia uma quantia indeterminada de pesos e alturas de indiv\u00edduos. Este processo de leitura deve ser realizado enquanto o peso informado for maior que zero. Ao final, voc\u00ea deve apresentar a m\u00e9dia aritm\u00e9tica dos pesos dos indiv\u00edduos em sobrepeso, somente.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2%20b/#exercicio-2-25-pontos","title":"Exerc\u00edcio 2 [2.5 pontos]\u00b6","text":"<p>Voc\u00ea recebeu a tarefa de desenvolver o c\u00f3digo respons\u00e1vel por testar a for\u00e7a das senhas de uma plataforma web. Os requisitos m\u00ednimos para que a senha seja aceita s\u00e3o:</p> <ul> <li>8 caracteres</li> <li>Presen\u00e7a de letras</li> <li>Presen\u00e7a de n\u00fameros</li> <li>Presen\u00e7a de um destes s\u00edmbolos: (@#$&amp;)</li> </ul> <p>Seu programa dever\u00e1 solicitar a senha, validar de acordo com os crit\u00e9rios e apresentar como sa\u00edda um dos seguintes resultados:</p> <ul> <li>SENHA V\u00c1LIDA</li> <li>SENHA INV\u00c1LIDA - TAMANHO</li> <li>SENHA INV\u00c1LIDA - AUS\u00caNCIA DE LETRAS</li> <li>SENHA INV\u00c1LIDA - AUS\u00caNCIA DE N\u00daMEROS</li> <li>SENHA INV\u00c1LIDA - AUS\u00caNCIA DE CARACTERES ESPECIAIS</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2%20b/#exercicio-3-25-pontos","title":"Exerc\u00edcio 3 [2.5 pontos]\u00b6","text":"<p>Em estat\u00edstica, moda \u00e9 uma medida que define o valor que mais se repete em uma amostra (conjunto de valores). Por exemplo, no conjunto de dados 5, 6, 8, 5, 9 temos 5 como sendo a moda.</p> <p>Sabendo disso, elabore uma fun\u00e7\u00e3o que, a partir de uma lista de valores inteiros informado por par\u00e2metro, retorna a respectiva moda.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2%20b/#exercicio-4-25-pontos","title":"Exerc\u00edcio 4 [2.5 pontos]\u00b6","text":"<p>Elabore um programa que leia um arquivo de entrada contendo registros de temperatura obtidos de uma esta\u00e7\u00e3o metereol\u00f3gica.</p> <p>Cada linha do arquivo de entrada cont\u00e9m os seguintes dados, separados por v\u00edrgulas: data, hora, temperatura medida.</p> <p>O programa deve processar esses dados e gerar um arquivo de sa\u00edda que contenha a m\u00e9dia da temperatura, temperatura m\u00e1xima e temperatura m\u00ednima de todo o per\u00edodo da medi\u00e7\u00e3o, escrevendo em uma \u00fanica linha os tr\u00eas valores separados por ponto-e-v\u00edrgula.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2/","title":"2024 2","text":"In\u00a0[\u00a0]: Copied! <pre>#sua resposta aqui\n</pre> #sua resposta aqui  In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre>#Sua reposta aqui\n</pre> #Sua reposta aqui"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2/#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<ul> <li>Esta avalia\u00e7\u00e3o tem peso 4 na nota final da disciplina</li> <li>Fa\u00e7a os exerc\u00edcios com aten\u00e7\u00e3o. Em caso de d\u00favidas, pe\u00e7a ajuda ao professor</li> <li>N\u00c3O acesse ou fa\u00e7a uso de qualquer recurso de consulta n\u00e3o permitido</li> <li>N\u00c3O utilize qualquer gerador de c\u00f3digo</li> <li>A entrega ser\u00e1 no Moodle, em uma atividade espec\u00edfica.</li> <li>De tempos em tempos salve as altera\u00e7\u00f5es deste documento para n\u00e3o perder seu trabalho em caso de queda de energia ou algo semelhantes.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2/#exercicio-1-25-pontos","title":"Exerc\u00edcio 1 [2.5 pontos]\u00b6","text":"<p>Desenvolva um programa que solicite um n\u00famero inteiro ao usu\u00e1rio. Este n\u00famero ir\u00e1 representar a quantidade de novos n\u00fameros a serem solicitados na sequ\u00eancia. Ap\u00f3s a coleta de todos os demais valores, apresentar em tela o n\u00famero com a maior quantidade de repeti\u00e7\u00f5es e a respectiva quantidade de vezes que ele foi informado.</p> <p>Observe o exemplo a seguir. Nele o usu\u00e1rio informa 5, indicando que deseja informar 5 valores na sequ\u00eancia. Os valores informados foram 8, 21, 8, 12 e 5. Como o n\u00famero 8 \u00e9 o que mais teve ocorr\u00eancias (2), a sa\u00edda foi 8 - 2X.</p> ENTRADA SA\u00cdDA 5 8 21 8 12 5 8 - 2X <p>Aten\u00e7\u00e3o: Caso dois ou mais valores tenham a mesma quantidade de ocorr\u00eancias, informar EMPATE na sa\u00edda.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2/#exercicio-2-25-pontos","title":"Exerc\u00edcio 2 [2.5 pontos]\u00b6","text":"<p>A capacidade m\u00e1xima do elevador do edif\u00edcio UPF Tower \u00e9 856 kg. Elabore um programa que pe\u00e7a o peso de cada nova pessoa que adentra o elevador, enquanto o limite de peso n\u00e3o for excedido. Ao final, apresentar em tela quantas pessoas couberam no elevador e o respectivo peso total obtido.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2/#exercicio-3-25-pontos","title":"Exerc\u00edcio 3 [2.5 pontos]\u00b6","text":"<p>Voc\u00ea recebeu a tarefa de desenvolver uma fun\u00e7\u00e3o respons\u00e1vel por testar a for\u00e7a das senhas de uma plataforma web. Conforme orienta\u00e7\u00f5es da equipe de seguran\u00e7a, os requisitos m\u00ednimos para que a senha seja resiliente a ataques de for\u00e7a bruta s\u00e3o:</p> <ul> <li>8 caracteres</li> <li>Conter letras</li> <li>Conter n\u00fameros</li> <li>Presen\u00e7a de ao menos um dos s\u00edmbolos @#$&amp;</li> </ul> <p>O retorno da fun\u00e7\u00e3o dever\u00e1 ser um valor booleano em que verdadeiro indica que a senha atende os requisitos m\u00ednimos de seguran\u00e7a e falso, em caso oposto.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2/#exercicio-4-25-pontos","title":"Exerc\u00edcio 4 [2.5 pontos]\u00b6","text":"<p>Em estat\u00edstica, moda \u00e9 uma medida que define o valor que mais se repete em uma amostra (conjunto de valores). Por exemplo, no conjunto de dados 5, 6, 8, 5, 9 temos 5 como sendo a moda.</p> <p>Sabendo disso, elabore uma fun\u00e7\u00e3o que, a partir de uma lista de valores inteiros informado por par\u00e2metro, retorna a respectiva moda.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2_respostas/","title":"2024 2 respostas","text":"In\u00a0[\u00a0]: Copied! <pre>soma_pesos = 0\nqtde_sobrepeso=0\n\nwhile True:\n    try:\n        peso = float(input(\"Informe o peso\"))\n        if peso &lt;=0:\n            break\n        altura = float(input(\"Informa sua altura (m)\"))\n    except ValueError:\n        print(\"Valor inv\u00e1lido. Informe novamente\")\n        continue\n    imc = peso/(altura**2)\n    if imc &gt;=25 and imc&lt;30:\n        soma_pesos+=peso\n        qtde_sobrepeso+=1\nif qtde_sobrepeso:\n    print(f\"A m\u00e9dia de peso dos indiv\u00edduos em situa\u00e7\u00e3o de sobrepeso \u00e9 {round(soma_pesos/qtde_sobrepeso)}\")\nelse:\n    print(\"Nenhum indiv\u00edduo encontra-se em sobrepeso\")\n</pre> soma_pesos = 0 qtde_sobrepeso=0  while True:     try:         peso = float(input(\"Informe o peso\"))         if peso &lt;=0:             break         altura = float(input(\"Informa sua altura (m)\"))     except ValueError:         print(\"Valor inv\u00e1lido. Informe novamente\")         continue     imc = peso/(altura**2)     if imc &gt;=25 and imc&lt;30:         soma_pesos+=peso         qtde_sobrepeso+=1 if qtde_sobrepeso:     print(f\"A m\u00e9dia de peso dos indiv\u00edduos em situa\u00e7\u00e3o de sobrepeso \u00e9 {round(soma_pesos/qtde_sobrepeso)}\") else:     print(\"Nenhum indiv\u00edduo encontra-se em sobrepeso\") In\u00a0[\u00a0]: Copied! <pre>senha = input(\"Informe sua senha\")\n\nif len(senha)&lt;8:\n    print(\"SENHA INV\u00c1LIDA - TAMANHO\")\nelse:\n    requisitos = {\n        'numero':0,\n         'letra':0,\n         'especial':0\n\n    }\n    for caractere in senha:\n        if caractere.isdigit():\n            requisitos['numero']+=1\n        if caractere.isalpha():\n            requisitos['letra']+=1\n        if caractere in ['(','@','#','$','&amp;',')']:\n            requisitos['especial']+=1\n    \n    if requisitos['letra']==0:\n        print(\"SENHA INV\u00c1LIDA - AUS\u00caNCIA DE LETRAS\")\n    elif requisitos['numero']==0:\n        print(\"SENHA INV\u00c1LIDA - AUS\u00caNCIA DE N\u00daMEROS\")\n    elif requisitos['especial']==0:\n        print(\"SENHA INV\u00c1LIDA - AUS\u00caNCIA DE CARACTERES ESPECIAIS\")\n    else:\n        print(\"SENHA V\u00c1LIDA\")\n</pre> senha = input(\"Informe sua senha\")  if len(senha)&lt;8:     print(\"SENHA INV\u00c1LIDA - TAMANHO\") else:     requisitos = {         'numero':0,          'letra':0,          'especial':0      }     for caractere in senha:         if caractere.isdigit():             requisitos['numero']+=1         if caractere.isalpha():             requisitos['letra']+=1         if caractere in ['(','@','#','$','&amp;',')']:             requisitos['especial']+=1          if requisitos['letra']==0:         print(\"SENHA INV\u00c1LIDA - AUS\u00caNCIA DE LETRAS\")     elif requisitos['numero']==0:         print(\"SENHA INV\u00c1LIDA - AUS\u00caNCIA DE N\u00daMEROS\")     elif requisitos['especial']==0:         print(\"SENHA INV\u00c1LIDA - AUS\u00caNCIA DE CARACTERES ESPECIAIS\")     else:         print(\"SENHA V\u00c1LIDA\")           In\u00a0[2]: Copied! <pre>def calcular_moda(valores):\n    frequencia={}\n    for valor in valores:\n        if valor not in frequencia:\n            frequencia[valor]=1\n        else:\n            frequencia[valor]+=1\n\n    return max(frequencia,key=frequencia.get)\n\nprint(calcular_moda([5,6,8,5,9]))\nprint(calcular_moda([1, 2, 3, 3, 4, 4, 4, 5, 6]))\n</pre> def calcular_moda(valores):     frequencia={}     for valor in valores:         if valor not in frequencia:             frequencia[valor]=1         else:             frequencia[valor]+=1      return max(frequencia,key=frequencia.get)  print(calcular_moda([5,6,8,5,9])) print(calcular_moda([1, 2, 3, 3, 4, 4, 4, 5, 6]))  <pre>5\n4\n</pre> In\u00a0[21]: Copied! <pre>### Criando o arquivo de exemplo:\n\nwith open(\"temperaturas.txt\",\"w\") as f:\n    f.writelines([\n        '2023-06-26,13:30,25.5\\n',\n        '2023-06-26,14:00,26.0\\n',\n        '2023-06-26,14:30,26.5\\n',\n        '2023-06-26,15:00,27.0\\n',\n        '2023-06-26,15:30,27.5\\n'\n     ]\n    )\n</pre> ### Criando o arquivo de exemplo:  with open(\"temperaturas.txt\",\"w\") as f:     f.writelines([         '2023-06-26,13:30,25.5\\n',         '2023-06-26,14:00,26.0\\n',         '2023-06-26,14:30,26.5\\n',         '2023-06-26,15:00,27.0\\n',         '2023-06-26,15:30,27.5\\n'      ]     ) In\u00a0[25]: Copied! <pre>#Programa que l\u00ea o arquivo\n\ntemperaturas=[]\nwith open(\"temperaturas.txt\",\"r\") as f:\n    for linha in f.readlines():\n        _, _, temp = linha.strip().split(\",\")\n        temperaturas.append( float(temp))\n\nwith open(\"resultado.txt\",\"w\") as f:\n    f.write(f\"{sum(temperaturas)/len(temperaturas)};{max(temperaturas)};{min(temperaturas)}\")\n</pre> #Programa que l\u00ea o arquivo  temperaturas=[] with open(\"temperaturas.txt\",\"r\") as f:     for linha in f.readlines():         _, _, temp = linha.strip().split(\",\")         temperaturas.append( float(temp))  with open(\"resultado.txt\",\"w\") as f:     f.write(f\"{sum(temperaturas)/len(temperaturas)};{max(temperaturas)};{min(temperaturas)}\")"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2_respostas/#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<ul> <li>Esta avalia\u00e7\u00e3o tem peso 4 na m\u00e9dia final da disciplina</li> <li>Fa\u00e7a os exerc\u00edcios com aten\u00e7\u00e3o. Em caso de d\u00favidas, pe\u00e7a ajuda ao professor</li> <li>N\u00c3O \u00e9 permitido acesso \u00e0 Internet ou meios de comunica\u00e7\u00e3o durante a realiza\u00e7\u00e3o da avalia\u00e7\u00e3o</li> <li>Voc\u00ea pode utilizar qualquer material de consulta, f\u00edsico ou digital, dispon\u00edvel, desde que seja off-line</li> <li>A entrega ser\u00e1 no Moodle, em uma atividade espec\u00edfica.</li> <li>De tempos em tempos salve as altera\u00e7\u00f5es deste documento para n\u00e3o perder seu trabalho em caso de queda de energia ou algo semelhantes.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2_respostas/#exercicio-1-25-pontos","title":"Exerc\u00edcio 1 [2.5 pontos]\u00b6","text":"<p>O Instituto Bem Viver est\u00e1 realizando uma pesquisa para identificar a m\u00e9dia aritm\u00e9tica de peso dos adultos com sobrepeso. Segundo a Organiza\u00e7\u00e3o Mundial da Sa\u00fade (OMS), encontra-se em sobrepeso todo indiv\u00edduo cujo \u00cdndice de Massa Corp\u00f3rea (IMC) \u00e9 maior ou igual a 25 e menor que 30. O c\u00e1lculo do IMC ocorre em fun\u00e7\u00e3o do peso (Kg) e da altura (em metros) do indiv\u00edduo por meio da f\u00f3rmula a seguir:</p> <p>$ IMC = \\frac{peso}{altura^2} $</p> <p>Para auxiliar os pesquisadores, voc\u00ea deve desenvolver um programa que leia uma quantia indeterminada de pesos e alturas de indiv\u00edduos. Este processo de leitura deve ser realizado enquanto o peso informado for maior que zero. Ao final, voc\u00ea deve apresentar a m\u00e9dia aritm\u00e9tica dos pesos dos indiv\u00edduos em sobrepeso, somente.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2_respostas/#exercicio-2-25-pontos","title":"Exerc\u00edcio 2 [2.5 pontos]\u00b6","text":"<p>Voc\u00ea recebeu a tarefa de desenvolver o c\u00f3digo respons\u00e1vel por testar a for\u00e7a das senhas de uma plataforma web. Os requisitos m\u00ednimos para que a senha seja aceita s\u00e3o:</p> <ul> <li>8 caracteres</li> <li>Presen\u00e7a de letras</li> <li>Presen\u00e7a de n\u00fameros</li> <li>Presen\u00e7a de um destes s\u00edmbolos: (@#$&amp;)</li> </ul> <p>Seu programa dever\u00e1 solicitar a senha, validar de acordo com os crit\u00e9rios e apresentar como sa\u00edda um dos seguintes resultados:</p> <ul> <li>SENHA V\u00c1LIDA</li> <li>SENHA INV\u00c1LIDA - TAMANHO</li> <li>SENHA INV\u00c1LIDA - AUS\u00caNCIA DE LETRAS</li> <li>SENHA INV\u00c1LIDA - AUS\u00caNCIA DE N\u00daMEROS</li> <li>SENHA INV\u00c1LIDA - AUS\u00caNCIA DE CARACTERES ESPECIAIS</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2_respostas/#exercicio-3-25-pontos","title":"Exerc\u00edcio 3 [2.5 pontos]\u00b6","text":"<p>Em estat\u00edstica, moda \u00e9 uma medida que define o valor que mais se repete em uma amostra (conjunto de valores). Por exemplo, no conjunto de dados 5, 6, 8, 5, 9 temos 5 como sendo a moda.</p> <p>Sabendo disso, elabore uma fun\u00e7\u00e3o que, a partir de uma lista de valores inteiros informado por par\u00e2metro, retorna a respectiva moda.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av2/2024-2_respostas/#exercicio-4-25-pontos","title":"Exerc\u00edcio 4 [2.5 pontos]\u00b6","text":"<p>Elabore um programa que leia um arquivo de entrada contendo registros de temperatura obtidos de uma esta\u00e7\u00e3o metereol\u00f3gica.</p> <p>Cada linha do arquivo de entrada cont\u00e9m os seguintes dados, separados por v\u00edrgulas: data, hora, temperatura medida.</p> <p>O programa deve processar esses dados e gerar um arquivo de sa\u00edda que contenha a m\u00e9dia da temperatura, temperatura m\u00e1xima e temperatura m\u00ednima de todo o per\u00edodo da medi\u00e7\u00e3o, escrevendo em uma \u00fanica linha os tr\u00eas valores separados por ponto-e-v\u00edrgula.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3-respostas/","title":"2024 3 respostas","text":"In\u00a0[\u00a0]: Copied! <pre>def calcular_iptu(area, valor_m2, fator_valorizacao):\n    return (area*valor_m2) + (area*valor_m2)*(fator_valorizacao/100)\n\n\nprint(calcular_iptu(50.56,23,1.8))\n</pre> def calcular_iptu(area, valor_m2, fator_valorizacao):     return (area*valor_m2) + (area*valor_m2)*(fator_valorizacao/100)   print(calcular_iptu(50.56,23,1.8)) In\u00a0[\u00a0]: Copied! <pre>def substituir_digitos(mensagem, substituicao):\n    for caractere, substituto in substituicao.items():\n        mensagem = mensagem.replace(caractere, substituto)\n    return mensagem\n\nmensagem = \"ol\u00e1, vamos contar de 1 a 10\"\nsubstituicao = {\n    '0': '-', \n    '1': '*',\n    '2': '&amp;',\n    '3': '%',\n    '4': '$',\n    '5': '#',\n    '6': '@',\n    '7': '!',\n    '8': '}',\n    '9': '{',\n}\nprint(substituir_digitos(mensagem, substituicao))\n</pre> def substituir_digitos(mensagem, substituicao):     for caractere, substituto in substituicao.items():         mensagem = mensagem.replace(caractere, substituto)     return mensagem  mensagem = \"ol\u00e1, vamos contar de 1 a 10\" substituicao = {     '0': '-',      '1': '*',     '2': '&amp;',     '3': '%',     '4': '$',     '5': '#',     '6': '@',     '7': '!',     '8': '}',     '9': '{', } print(substituir_digitos(mensagem, substituicao)) In\u00a0[\u00a0]: Copied! <pre>candidatos = {\n    '1':{'nome':'Jo\u00e3o'},\n    '2':{'nome':'Pedro'},\n    '3':{'nome':'Alice'},\n    '4':{'nome':'Amanda'},\n}\n\ndef exibe_candidatos(lista_candidatos):\n    mensagem=\"Digite \"\n    for codigo, detalhes in lista_candidatos.items():\n        mensagem+=(f\"\\t{codigo} para {detalhes['nome']}\\t\")\n    mensagem+='ou SAIR para finalizar'\n    return mensagem\n\nvotos_validos={}\nvotos_invalidos=0\nwhile True:\n    opcao = input(\"1 - Urna Eletr\u00f4nica, 2 - Apura\u00e7\u00e3o, 3 - Sair\")\n\n    match opcao:\n        case '1':\n            while True:\n                nr_candidato = input(exibe_candidatos(candidatos))\n                if nr_candidato.upper()==\"SAIR\":\n                    break\n                if nr_candidato in candidatos:            \n                        votos_validos[nr_candidato]= votos_validos.get( nr_candidato,0)+1                                        \n                else:\n                    votos_invalidos+=1\n\n        case '2':\n            resultado = dict(sorted(votos_validos.items(),key=lambda x: x[1],reverse=True))\n            total_votos = votos_invalidos + sum(resultado.values())\n            maximo_votos = max(resultado.values())\n            candidatos_com_maximo_votos=[]\n            print(f\"TOTAL DE VOTOS: {total_votos}\")\n            for nr_candidato, votos in resultado.items():\n                print(f\"{nr_candidato} - {candidatos[nr_candidato][\"nome\"]}: {votos} VOTOS ({round((votos/total_votos)*100,2)}%)\")\n                if votos ==maximo_votos:\n                    candidatos_com_maximo_votos.append(f\"{nr_candidato} - {candidatos[nr_candidato][\"nome\"]}: {votos} VOTOS\")\n\n            if len(candidatos_com_maximo_votos)&gt;1:\n                print(f\"EMPATE entre {' e '.join(candidatos_com_maximo_votos)}\")\n            else:\n                print(f\"VIT\u00d3RIA DE {candidatos_com_maximo_votos[0]}\")\n\n        case '3':\n            break\n</pre> candidatos = {     '1':{'nome':'Jo\u00e3o'},     '2':{'nome':'Pedro'},     '3':{'nome':'Alice'},     '4':{'nome':'Amanda'}, }  def exibe_candidatos(lista_candidatos):     mensagem=\"Digite \"     for codigo, detalhes in lista_candidatos.items():         mensagem+=(f\"\\t{codigo} para {detalhes['nome']}\\t\")     mensagem+='ou SAIR para finalizar'     return mensagem  votos_validos={} votos_invalidos=0 while True:     opcao = input(\"1 - Urna Eletr\u00f4nica, 2 - Apura\u00e7\u00e3o, 3 - Sair\")      match opcao:         case '1':             while True:                 nr_candidato = input(exibe_candidatos(candidatos))                 if nr_candidato.upper()==\"SAIR\":                     break                 if nr_candidato in candidatos:                                     votos_validos[nr_candidato]= votos_validos.get( nr_candidato,0)+1                                                         else:                     votos_invalidos+=1          case '2':             resultado = dict(sorted(votos_validos.items(),key=lambda x: x[1],reverse=True))             total_votos = votos_invalidos + sum(resultado.values())             maximo_votos = max(resultado.values())             candidatos_com_maximo_votos=[]             print(f\"TOTAL DE VOTOS: {total_votos}\")             for nr_candidato, votos in resultado.items():                 print(f\"{nr_candidato} - {candidatos[nr_candidato][\"nome\"]}: {votos} VOTOS ({round((votos/total_votos)*100,2)}%)\")                 if votos ==maximo_votos:                     candidatos_com_maximo_votos.append(f\"{nr_candidato} - {candidatos[nr_candidato][\"nome\"]}: {votos} VOTOS\")              if len(candidatos_com_maximo_votos)&gt;1:                 print(f\"EMPATE entre {' e '.join(candidatos_com_maximo_votos)}\")             else:                 print(f\"VIT\u00d3RIA DE {candidatos_com_maximo_votos[0]}\")          case '3':             break In\u00a0[\u00a0]: Copied! <pre>qtd_numeros = int(input(\"Qtde n\u00fameros\"))\n\nfrequencia={}\n\nfor _ in range(qtd_numeros):\n    valor = int(input(\"Informe um valor inteiro:\"))\n    frequencia[valor] = frequencia.get(valor,0) +1 \n\nnrs_max_ocorrencias = [ nr for nr, ocorrencias in frequencia.items() if ocorrencias == max(frequencia.values()) ]\n\nif len(nrs_max_ocorrencias)&gt;1:\n    print(\"EMPATE\")\nelse:\n    print(f\"{nrs_max_ocorrencias[0]} - {frequencia[nrs_max_ocorrencias[0]]}X\")\n</pre> qtd_numeros = int(input(\"Qtde n\u00fameros\"))  frequencia={}  for _ in range(qtd_numeros):     valor = int(input(\"Informe um valor inteiro:\"))     frequencia[valor] = frequencia.get(valor,0) +1   nrs_max_ocorrencias = [ nr for nr, ocorrencias in frequencia.items() if ocorrencias == max(frequencia.values()) ]  if len(nrs_max_ocorrencias)&gt;1:     print(\"EMPATE\") else:     print(f\"{nrs_max_ocorrencias[0]} - {frequencia[nrs_max_ocorrencias[0]]}X\")"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3-respostas/#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<ul> <li>Esta avalia\u00e7\u00e3o tem peso 4 e ir\u00e1 substituir a menor das notas das avalia\u00e7\u00f5es anteriores</li> <li>Fa\u00e7a os exerc\u00edcios com aten\u00e7\u00e3o. Em caso de d\u00favidas, pe\u00e7a ajuda ao professor</li> <li>N\u00c3O acesse ou fa\u00e7a uso de qualquer recurso de consulta n\u00e3o permitido</li> <li>N\u00c3O utilize qualquer gerador de c\u00f3digo</li> <li>A entrega ser\u00e1 no Moodle, em uma atividade espec\u00edfica.</li> <li>De tempos em tempos salve as altera\u00e7\u00f5es deste documento para n\u00e3o perder seu trabalho em caso de queda de energia ou algo semelhantes.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3-respostas/#exercicio-1-25-pontos","title":"Exerc\u00edcio 1 [2.5 pontos]\u00b6","text":"<p>Vamos imaginar que o IPTU de um munic\u00edpio qualquer tenha seu valor determinado pelas seguintes vari\u00e1veis:</p> <ul> <li>\u00c1rea do terreno em metros quadrados (A)</li> <li>Valor por metro quadrado de refer\u00eancia (V)</li> <li>Fator de valoriza\u00e7\u00e3o por benfeitorias (F)</li> </ul> <p>Para um im\u00f3vel com \u00e1rea de $50.56 m^2$, valor de refer\u00eancia R$ 23.00 e 1.8% de valoriza\u00e7\u00e3o, ter\u00edamos:</p> <p>$$ A = 50.56 \\\\ V = 23.00\\\\ F = 1.8\\%\\\\  IPTU = (50.56 * 23.00) +  (50.56 * 23.00)*1.8\\%\\\\ IPTU = 1183,81\\\\ $$</p> <p>Sua tarefa \u00e9 desenvolver uma fun\u00e7\u00e3o que, informados os valores de par\u00e2metro, retorne o valor a ser pago de IPTU do im\u00f3vel.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3-respostas/#exercicio-2-25-pontos","title":"Exerc\u00edcio 2 [2.5 pontos]\u00b6","text":"<p>Voc\u00ea est\u00e1 recebendo a especifica\u00e7\u00e3o t\u00e9cnica da fun\u00e7\u00e3o substituir_digitos para codificar. Trata-se de uma fun\u00e7\u00e3o apta a receber dois par\u00e2metros:</p> <ul> <li>Uma mensagem (string)</li> <li>Um dicion\u00e1rio cujas chaves s\u00e3o d\u00edgitos de 0 a 9 (caractere) e os respectivos valores correspondem aos caracteres de substitui\u00e7\u00e3o.</li> </ul> <p>Veja o exemplo:</p> <pre>mensagem = \"ol\u00e1, vamos contar de 1 a 10\"\nsubstituicao = {\n    '0': '-', \n    '1': '*',\n    '2': '&amp;',\n    '3': '%',\n    '4': '$',\n    '5': '#',\n    '6': '@',\n    '7': '!',\n    '8': '}',\n    '9': '{',\n}\nprint(substituir_digitos(mensagem, substituicao))\n#ol\u00e1, vamos contar de * a *-\n</pre>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3-respostas/#exercicio-3-25-pontos","title":"Exerc\u00edcio 3 [2.5 pontos]\u00b6","text":"<p>Na pr\u00f3xima semana, sua turma ir\u00e1 escolher o representante discente e lhe foi solicitado que desenvolva uma aplica\u00e7\u00e3o para contabilizar os votos. A aplica\u00e7\u00e3o dever\u00e1 utilizar um dicion\u00e1rio onde a chave \u00e9 o nome do candidato, e o valor associado \u00e9 o n\u00famero de votos recebidos. A aplica\u00e7\u00e3o dever\u00e1 possuir as seguintes funcionalidades:</p> <ul> <li>No c\u00f3digo, defina uma lista com o nome dos candidatos (quantidades e nomes a seu crit\u00e9rio)</li> <li>Modo <code>Urna Eletr\u00f4nica</code>, que exibe a lista de candidatos e permite escolher em quem votar, at\u00e9 que uma condi\u00e7\u00e3o de parada seja informada (voc\u00ea define qual ser\u00e1);</li> <li>Modo <code>Apura\u00e7\u00e3o</code>, onde \u00e9 exibido o nome do vencedor, a quantidade e percentual de votos recebidos, os nomes e totais dos demais candidatos, o n\u00famero total de votos.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3-respostas/#exercicio-4-25-pontos","title":"Exerc\u00edcio 4 [2.5 pontos]\u00b6","text":"<p>Desenvolva um programa que solicite um n\u00famero inteiro ao usu\u00e1rio. Este n\u00famero ir\u00e1 representar a quantidade de novos n\u00fameros a serem solicitados na sequ\u00eancia. Ap\u00f3s a coleta de todos os demais valores, apresentar em tela o n\u00famero com a maior quantidade de repeti\u00e7\u00f5es e a respectiva quantidade de vezes que ele foi informado.</p> <p>Observe o exemplo a seguir. Nele o usu\u00e1rio informa 5, indicando que deseja informar 5 valores na sequ\u00eancia. Os valores informados foram 8, 21, 8, 12 e 5. Como o n\u00famero 8 \u00e9 o que mais teve ocorr\u00eancias (2), a sa\u00edda foi 8 - 2X.</p> ENTRADA SA\u00cdDA 5 8 21 8 12 5 8 - 2X <p>Aten\u00e7\u00e3o: Caso dois ou mais valores tenham a mesma quantidade de ocorr\u00eancias, informar EMPATE na sa\u00edda.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3/","title":"2024 3","text":"In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre>#Sua resposta aqui\n</pre> #Sua resposta aqui"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3/#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<ul> <li>Esta avalia\u00e7\u00e3o tem peso 4 e ir\u00e1 substituir a menor das notas das avalia\u00e7\u00f5es anteriores</li> <li>Fa\u00e7a os exerc\u00edcios com aten\u00e7\u00e3o. Em caso de d\u00favidas, pe\u00e7a ajuda ao professor</li> <li>N\u00c3O acesse ou fa\u00e7a uso de qualquer recurso de consulta n\u00e3o permitido</li> <li>N\u00c3O utilize qualquer gerador de c\u00f3digo</li> <li>A entrega ser\u00e1 no Moodle, em uma atividade espec\u00edfica.</li> <li>De tempos em tempos salve as altera\u00e7\u00f5es deste documento para n\u00e3o perder seu trabalho em caso de queda de energia ou algo semelhantes.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3/#exercicio-1-25-pontos","title":"Exerc\u00edcio 1 [2.5 pontos]\u00b6","text":"<p>Vamos imaginar que o IPTU de um munic\u00edpio qualquer tenha seu valor determinado pelas seguintes vari\u00e1veis:</p> <ul> <li>\u00c1rea do terreno em metros quadrados (A)</li> <li>Valor por metro quadrado de refer\u00eancia (V)</li> <li>Fator de valoriza\u00e7\u00e3o por benfeitorias (F)</li> </ul> <p>Para um im\u00f3vel com \u00e1rea de $50.56 m^2$, valor de refer\u00eancia R$ 23.00 e 1.8% de valoriza\u00e7\u00e3o, ter\u00edamos:</p> <p>$$ A = 50.56 \\\\ V = 23.00\\\\ F = 1.8\\%\\\\  IPTU = (50.56 * 23.00) +  (50.56 * 23.00)*1.8\\%\\\\ IPTU = 1183,81\\\\ $$</p> <p>Sua tarefa \u00e9 desenvolver uma fun\u00e7\u00e3o que, informados os valores de par\u00e2metro, retorne o valor a ser pago de IPTU do im\u00f3vel.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3/#exercicio-2-25-pontos","title":"Exerc\u00edcio 2 [2.5 pontos]\u00b6","text":"<p>Voc\u00ea est\u00e1 recebendo a especifica\u00e7\u00e3o t\u00e9cnica da fun\u00e7\u00e3o substituir_digitos para codificar. Trata-se de uma fun\u00e7\u00e3o apta a receber dois par\u00e2metros:</p> <ul> <li>Uma mensagem (string)</li> <li>Um dicion\u00e1rio cujas chaves s\u00e3o d\u00edgitos de 0 a 9 (caractere) e os respectivos valores correspondem aos caracteres de substitui\u00e7\u00e3o.</li> </ul> <p>Veja o exemplo:</p> <pre>mensagem = 'ol\u00e1, vamos contar de 1 a 10\"\nsubstituicao = {\n    '0': '-', \n    '1': '*',\n    '2': '&amp;',\n    '3': '%',\n    '4': '$',\n    '5': '#',\n    '6': '@',\n    '7': '!',\n    '8': '}',\n    '9': '{',\n}\nprint(substituir_digitos(mensagem, substituicao))\n#ol\u00e1, vamos contar de * a *-\n</pre>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3/#exercicio-3-25-pontos","title":"Exerc\u00edcio 3 [2.5 pontos]\u00b6","text":"<p>Na pr\u00f3xima semana, sua turma ir\u00e1 escolher o representante discente e lhe foi solicitado que desenvolva uma aplica\u00e7\u00e3o para contabilizar os votos. A aplica\u00e7\u00e3o dever\u00e1 utilizar um dicion\u00e1rio onde a chave \u00e9 o nome do candidato, e o valor associado \u00e9 o n\u00famero de votos recebidos. A aplica\u00e7\u00e3o dever\u00e1 possuir as seguintes funcionalidades:</p> <ul> <li>No c\u00f3digo, defina uma lista com o nome dos candidatos (quantidades e nomes a seu crit\u00e9rio)</li> <li>Modo <code>Urna Eletr\u00f4nica</code>, que exibe a lista de candidatos e permite escolher em quem votar, at\u00e9 que uma condi\u00e7\u00e3o de parada seja informada (voc\u00ea define qual ser\u00e1);</li> <li>Modo <code>Apura\u00e7\u00e3o</code>, onde \u00e9 exibido o nome do vencedor, a quantidade e percentual de votos recebidos, os nomes e totais dos demais candidatos, o n\u00famero total de votos.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/av3/2024-3/#exercicio-4-25-pontos","title":"Exerc\u00edcio 4 [2.5 pontos]\u00b6","text":"<p>Desenvolva um programa que solicite um n\u00famero inteiro ao usu\u00e1rio. Este n\u00famero ir\u00e1 representar a quantidade de novos n\u00fameros a serem solicitados na sequ\u00eancia. Ap\u00f3s a coleta de todos os demais valores, apresentar em tela o n\u00famero com a maior quantidade de repeti\u00e7\u00f5es e a respectiva quantidade de vezes que ele foi informado.</p> <p>Observe o exemplo a seguir. Nele o usu\u00e1rio informa 5, indicando que deseja informar 5 valores na sequ\u00eancia. Os valores informados foram 8, 21, 8, 12 e 5. Como o n\u00famero 8 \u00e9 o que mais teve ocorr\u00eancias (2), a sa\u00edda foi 8 - 2X.</p> ENTRADA SA\u00cdDA 5 8 21 8 12 5 8 - 2X <p>Aten\u00e7\u00e3o: Caso dois ou mais valores tenham a mesma quantidade de ocorr\u00eancias, informar EMPATE na sa\u00edda.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/exame/2024-e/","title":"2024 e","text":"In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui In\u00a0[\u00a0]: Copied! <pre># Sua resposta aqui\n</pre> # Sua resposta aqui"},{"location":"programacao/python/res/notebooks/avaliacao/exame/2024-e/#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<ul> <li>Esta \u00e9 a avalia\u00e7\u00e3o de exame da disciplina.</li> <li>Fa\u00e7a os exerc\u00edcios com aten\u00e7\u00e3o. Em caso de d\u00favidas, pe\u00e7a ajuda ao professor</li> <li>N\u00c3O acesse ou fa\u00e7a uso de qualquer recurso de consulta n\u00e3o permitido</li> <li>N\u00c3O utilize qualquer gerador de c\u00f3digo</li> <li>A entrega ser\u00e1 no Moodle, em uma atividade espec\u00edfica.</li> <li>De tempos em tempos salve as altera\u00e7\u00f5es deste documento para n\u00e3o perder seu trabalho em caso de queda de energia ou algo semelhantes.</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/exame/2024-e/#exercicio-1-25-pontos","title":"Exerc\u00edcio 1 [2.5 pontos]\u00b6","text":"<p>Assim como ocorre com humanos, o excesso de peso em felinos implica em problemas de sa\u00fade. Uma das formas de classificar em que situa\u00e7\u00e3o o animal encontra-se com rela\u00e7\u00e3o ao seu peso \u00e9 o IMC (\u00cdndice de Massa Corp\u00f3rea).</p> <p>O c\u00e1lculo \u00e9 identifico ao utilizado para humanos:</p> <p>$\\text{IMC} = \\frac{\\text{Peso em kg}}{(\\frac{\\text{Altura em cm}}{100})^2}$</p> <p>Suponha que voc\u00ea ir\u00e1 receber um arquivo de texto, formato CSV, em que cada linha conter\u00e1 tr\u00eas dados sobre um felino: nome, peso e altura. Tais dados estar\u00e3o separados por <code>;</code>. Veja um exemplo:</p> <pre>miau;6.67;45\nmimi;5,5;40\n</pre> <p>Voc\u00ea dever\u00e1 desenvolver um programa para ler este arquivo, processar seu conte\u00fado e, como sa\u00edda, apresentar quais animais est\u00e3o abaixo do peso (IMC inferior a 18), peso ideal (IMC entre 18 e 23) e acima do peso (IMC acima de 23).</p>"},{"location":"programacao/python/res/notebooks/avaliacao/exame/2024-e/#exercicio-2-25-pontos","title":"Exerc\u00edcio 2 [2.5 pontos]\u00b6","text":"<p>Em F\u00edsica, podemos medir a temperatura de corpos utilizando diferentes escalas termom\u00e9tricas. No Brasil, por exemplo, \u00e9 comum utilizarmos Celsius\u00a0(\u00baC), enquanto que nos Estados Unidos utiliza-se Fahrenheit (\u00baF). No meio cient\u00edfico, contudo, utiliza-se a Escala Kelvin $K$.</p> <p>Embora o c\u00e1lculo de convers\u00e3o entre escalas n\u00e3o seja complexo, ter em m\u00e3os uma forma r\u00e1pida de faz\u00ea-lo \u00e9 bem-vinda. E nada melhor que uma fun\u00e7\u00e3o em Python para resolver todo e qualquer problema, n\u00e3o \u00e9?!</p> <p>Nossa fun\u00e7\u00e3o deve receber tr\u00eas informa\u00e7\u00f5es como par\u00e2metro: escala de origem, escala de destino e temperatura. Para escalas de origem e destino, os valores aceitos s\u00e3o $C$, $F$ ou $K$ e para temperatura, apenas n\u00fameros (com ou sem casas decimais). A fun\u00e7\u00e3o deve retornar a temperatura convertida para a escala termom\u00e9trica de destino.</p> <p>Vamos \u00e0s f\u00f3rmulas:</p> <ul> <li>Kelvin para Celsius: $T_K - 273,15$</li> <li>Fahrenheit para Celsius:\u00a0$\\frac{T_F -32}{1,8}$</li> <li>Celsius para Kelvin:\u00a0\u00a0$T_C + 273,15$</li> <li>Celsius para\u00a0Fahrenheit:\u00a0$T_C*1,8 + 32$</li> </ul>"},{"location":"programacao/python/res/notebooks/avaliacao/exame/2024-e/#exercicio-3-25-pontos","title":"Exerc\u00edcio 3 [2.5 pontos]\u00b6","text":"<p>Escreva um programa que recebe uma lista de n\u00fameros de tamanho indeterminado. Voc\u00ea dever\u00e1 receber todos os valores em uma \u00fanica entrada, separados por v\u00edrgula. Ap\u00f3s, escreva em tela a lista de valores, ordenada do menor para o maior, sem valores repetidos.</p>"},{"location":"programacao/python/res/notebooks/avaliacao/exame/2024-e/#exercicio-4-25-pontos","title":"Exerc\u00edcio 4 [2.5 pontos]\u00b6","text":"<p>Por algum evento hist\u00f3rico irrelevante, o Rio Grande do Sul tornou-se um pa\u00eds. Uma das primeiras determina\u00e7\u00f5es do novo presidente foi criar a nova moeda nacional, o Pila (P$). As novas c\u00e9dulas seriam de P$ 2.00, P$ 5.00, P$ 15.00, P$ 25.00 , P$ 50.00 e P$ 75.00. J\u00e1 os quebrados (em substitui\u00e7\u00e3o aos centavos) ainda n\u00e3o haviam sido definidos. Para auxiliar na convers\u00e3o entre R$ e P$, o presidente pediu a voc\u00ea para criar um programa em Python (olha a responsabilidade!). Este programa deve receber o valor em reais (sem centavos) e devolver quais c\u00e9dulas de Pila e suas respectivas quantidades ser\u00e3o necess\u00e1rias. Caso haja resto, inform\u00e1-lo.</p>"},{"location":"scala/","title":"Index","text":"<p>Escala \u00e9 uma linguagem fortemente tipada com suporte a orienta\u00e7\u00e3o a objetos e paradigma funcional. Tudo \u00e9 objeto, inclusive as fun\u00e7\u00f5es.</p> <p>Literais s\u00e3o iguais ao Java. O operador de concaten\u00e7\u00e3o \u00e9 o mesmo.</p> <pre><code>println(1)\nprintln(1+1)\nprintln(\"Ol\u00e1,\" + \"mundo\")\n\n\nA interpola\u00e7\u00e3o de strings \u00e9 poss\u00edvel iniciando o literal com `s` e indicando as vari\u00e1veis com `$`.\n</code></pre> <p>A declara\u00e7\u00e3o de vari\u00e1veis \u00e9 feita por meio da keywork  <code>var</code>.</p> <pre><code>var total = 1 + 1\n</code></pre> <p>J\u00e1 no caso de constantes, utiliza-se <code>val</code>.</p> <p>A tipagem \u00e9 est\u00e1tica. Na declara\u00e7\u00e3o o tipo da vari\u00e1vel pode ser omitido, pois o compilador infere. Ou tamb\u00e9m \u00e9 poss\u00edvel explicitamente defini-lo:</p> <pre><code>var total: Int = 1 + 1\n</code></pre> <p>Pode-se criar blocos com <code>{}</code>. Neste caso, o resultado da \u00faltima express\u00e3o ser\u00e1 o resultado de todo o bloco.</p> <pre><code>println(\n    {\n        var y: Int = 3\n        y+=1\n        y\n    }\n)\n</code></pre>"},{"location":"scala/#funcoes","title":"Fun\u00e7\u00f5es","text":"<p>As fun\u00e7\u00f5es s\u00e3o express\u00f5es que definem par\u00e2metros e recebem argumentos. Quando an\u00f4nimas, podemos defini-las da seguinte forma:</p> <pre><code>val fx = (a:Int, b:Int) =&gt; a*b\n\nprintln(fx(2,4))\n</code></pre> <p>Par\u00e2metros podem ter valor default</p> <p>Argumentos podem ser informados informando-se o nome do par\u00e2metro.</p>"},{"location":"scala/#metodos","title":"M\u00e9todos","text":"<p>A defini\u00e7\u00e3o de m\u00e9todos deve ser por meio da palavra reservada <code>def</code> e a declara\u00e7\u00e3o \u00e9 diferente se comparada com as fun\u00e7\u00f5es. Observe:</p> <pre><code>def aMethod (a:Int, b:Int): Int = a*b*43\n\nprintln(aMethod(2,4))\n</code></pre> <p>Quando o m\u00e9todo possuir v\u00e1rias linhas, a \u00faltima do bloco ser\u00e1 o retorno. a palavra-chave <code>return</code> est\u00e1 dispon\u00edvel na linguagem.</p>"},{"location":"scala/#class","title":"class","text":"<p>A cria\u00e7\u00e3o de classes pode incorporar a declara\u00e7\u00e3o do nome da classe conjuntamente com o construtor e, naturalmente, os m\u00e9todos.</p> <p>Se um construtor n\u00e3o for informado, a classe ter\u00e1 um padr\u00e3o.</p> <p>Inst\u00e2ncias s\u00e3o criadas a partir da keywork <code>new</code>.</p> <p>Parametros de construtores podem ter valor padr\u00e3o.</p> <p>A defini\u00e7\u00e3o de par\u00e2metros nos construtores j\u00e1 declara os campos da classe</p> <p>O construtor \u00e9 a combina\u00e7\u00e3o dos par\u00e2metros, m\u00e9todos e express\u00f5es e instru\u00e7\u00f5es executadas no corpo da classe.</p> <p>Construtores auxiliares (sobrecargas) s\u00e3o criados por meio de um `def this() =&gt;</p> <p>Membros s\u00e3o p\u00fablicos por padr\u00e3o. Para torn\u00e1-los privados, deve-se utilizar <code>private</code>.</p> <p>Parametros sem as keywords <code>val</code> ou <code>var</code> s\u00e3o privados, por padr\u00e3o</p> <p>Heran\u00e7a simples.</p>"},{"location":"scala/#object","title":"object","text":"<p>Objetos s\u00e3o inst\u00e2ncias \u00fanicas de suas pr\u00f3prias defini\u00e7\u00f5es. Utiliza-se a keywork <code>object</code> para declarar. S\u00e3o singletons, ou seja, classes de \u00fanica inst\u00e2ncia. \u00c9 criado tardiamente, quando referenciado. Interessante para m\u00e9todos utilit\u00e1rios.</p> <p>Companion objects ocorre quando, no mesmo arquivo Scala, temos uma <code>class</code> e um <code>object</code>  de mesmo nome. Serve aos seguintes prop\u00f3sitos:</p> <ul> <li>Separa\u00e7\u00e3o de responsabilidades</li> <li>Implementa\u00e7\u00e3o de factories e builders</li> </ul> <p><code>Class</code> definem membros n\u00e3o est\u00e1ticos. <code>Objects</code> define membros est\u00e1ticos.</p>"},{"location":"scala/#trait-caracteristica","title":"trait (caracter\u00edstica)","text":"<p>S\u00e3o tipos de dados abstratos que possuem m\u00e9todos e campos. A classe pode estender m\u00faltiplas <code>traits</code>. Assemelha-se a interfaces em Java</p> <p><code>override</code> \u00e9 utilizado para redefinir m\u00e9todos</p> <p>Com Traits \u00e9 poss\u00edvel fazer mixins, ou seja, uma classe pode estender v\u00e1rios traits.'</p>"},{"location":"scala/#case-class","title":"case class","text":"<p>Case classes s\u00e3o classes normais, contudo s\u00e3o imut\u00e1veis ap\u00f3s atribu\u00eddas. S\u00e3o classes est\u00e1ticas. N\u00e3o precisam de new para criar objetos. Tem um m\u00e9todo padr\u00e3o chamado apply. </p> <p>Na declara\u00e7\u00e3o, \u00e9 preciso preceder a declara\u00e7\u00e3o da classe com <code>case</code>.</p>"},{"location":"scala/#case-objects","title":"case objectS","text":""},{"location":"scala/#arrays","title":"Arrays","text":"<p>A declara\u00e7\u00e3o de arrays \u00e9 feita da seguinte forma:</p> <pre><code>var dados: Array[Float] = new Array[Float] (3)\n</code></pre> <p>A indexa\u00e7\u00e3o \u00e9 feita com <code>()</code>. O \u00edndice inicial \u00e9 [0]</p> <pre><code>dados(1) = 4564.56\n</code></pre> <p>Para percorrer os itens do array, a sintaxe \u00e9:</p> <pre><code>for (x &lt;- dados){\n    println(x)\n}\n</code></pre>"},{"location":"scala/#tuplas","title":"Tuplas","text":"<p>Tuplas s\u00e3o imut\u00e1veis. Cada elemento tem seu tipo espec\u00edfico.</p> <pre><code>val valores =(\"Ma\u00e7a\", 2, 5.6)\n\nval (fruta, id, valor) = valores\n\nprintln(valores._1)\n</code></pre> <p>\u00c9 poss\u00edvel acessar o elemento com base na posi\u00e7\u00e3o utilizando <code>_</code>. Tamb\u00e9m podemos obter os valores em vari\u00e1veis apartadas.</p>"},{"location":"scala/#case-statement","title":"Case statement","text":"<p>Equivale ao <code>switch</code> da linguagem Java. Contudo pode ser aplicado como corpo de fun\u00e7\u00e3o/m\u00e9todo. O caso default \u00e9 indicado por <code>case _</code>. N\u00e3o \u00e9 preciso colocar o comando break.</p>"},{"location":"scala/#estruturas-de-controle","title":"Estruturas de controle","text":"<p>if sempre retorna valor!</p>"},{"location":"spark/","title":"Index","text":"<p>Spark \u00e9 uma biblioteca de processamento paralelo de dados. Escrita em Scala. Pode ser utilizada em Python, Scala e Java.</p> <p>Resilient Distributed DataSets s\u00e3o um dos conceitos chave. Core object que permite distribuir dados em um cluster. Trata falhas automaticamente. \u00c9 criado pelo programa Driver por meio do objeto SparkContext.</p> <pre><code>#sc means SparkContext\n\nnums = parallelize ([5,52,3,6])\n\nrddLines = sc.textFile(\"file:///c:/dados.txt\")\nhiveCtx = HiveContext(sc)\n\n#could be use JDBC, CSV, JSON, ElasticSearch, etc.\n</code></pre> <p>Para transformar em RDDs:</p> <ul> <li>map: Transforma de um tipo de RDD para outro por meio de uma fun\u00e7\u00e3o. A mesma quantidade de dados do RDD original ter\u00e1 no RDD resultante do map</li> </ul> <pre><code>rdd = sc.parallelize([5,6,7,8])\nrdd.map(lambda y: y*y)\n</code></pre> <ul> <li>flatmap: \u00c9 similar ao map, mas pode gerar n valores a partir de um \u00fanico de entrada.</li> <li>filter</li> <li>distinct</li> <li>sample</li> <li>union, insersection, subtract, catersian</li> </ul> <p>Ac\u00f5es sobre RDD:</p> <ul> <li>collect</li> <li>count</li> <li>countByValue</li> <li>take</li> <li>top</li> <li>reduce</li> </ul> <p>Nada acontece no driver program at\u00e9 que uma action seja solicitada.</p> <p>Para iniciar um driver program precisamos importar:</p> <pre><code>from pyspark import SparkConf, SparkContext\nimport collections\n</code></pre> <p>Na linha a seguir criamos o objeto de configura\u00e7\u00e3o</p> <pre><code>conf = SparkConf().setMaster(\"local\").setAppName(\"myApp\")\n</code></pre> <p>O m\u00e9todo <code>setMaster</code> informa o endere\u00e7o master para se conectar. Pode ser <code>local</code> ou um endere\u00e7o do cluster. J\u00e1 o <code>setAppName</code> permite localizar as aplica\u00e7\u00f5es no Spark Web UI</p> <p>Verificar:</p>"},{"location":"spark/#httpsdocspythonorg3librarycollectionshtml","title":"https://docs.python.org/3/library/collections.html","text":"<p>spark-submit</p> <p>Key-Value RDD</p> <p>RDD somente podem armazenar pares de chave-valor</p> <p>Para construir podemos utilizar a transforma\u00e7\u00e3o map:</p> <pre><code>totalByAge = rdd.map(lambda x: (x,1))\n</code></pre> <p>O que podemos fazer (transformations):</p> <ul> <li>mapValues</li> <li>flatMapValues</li> </ul> <p>O que podemos fazer (actions):</p> <ul> <li>reduceByKey</li> <li>groupByKey</li> <li>sortByKey</li> <li>keys</li> <li>values</li> </ul> <p>Filtering RDDs</p> <p>Utilizamos filter para remover dados dos RDDs que n\u00e3o s\u00e3o de interesse a partir de uma fun\u00e7\u00e3o que retorna um valor boleano.</p> <p>O spark realiza as a\u00e7\u00f5es somente ao encontrar o collect().</p>"},{"location":"web/historia/","title":"Como surgiu a Web","text":"<p>A Web \u00e9 um dos servi\u00e7os mais importantes da Internet. Nela est\u00e3o boa parte dos servi\u00e7os que utilizamos em nosso dia-a-dia, como portais de not\u00edcias, servi\u00e7os de streaming, jogos, sistemas banc\u00e1rios, educa\u00e7\u00e3o, entre outros.</p> <p>A hist\u00f3ria da Web inicia em 1989, com <code>Sir. Tim Berners-Lee</code>, um cientista da computa\u00e7\u00e3o nascido em Londres. Ap\u00f3s concluir a gradua\u00e7\u00e3o na universidade de Oxford, Tim foi trabalhar no CERN como engenheiro de software <sup>1</sup>. </p> <p>O CERN \u00e9 um dos mais importantes centros de pesquisa do mundo, motivo pelo qual cientistas de diversos pa\u00edses frequentavam (e ainda frequentam) suas instala\u00e7\u00f5es. Naquela \u00e9poca, Tim observou a dificuldade dos pesquisadores em compartilhar informa\u00e7\u00f5es. Na maioria dos casos, os dados de pesquisa estavam armazenados em computadores espec\u00edficos e n\u00e3o eram compartilhados. Desde modo, para utilizar os dados era preciso utilizar o equipamento espec\u00edfico que os armazenava. A ideia de Tim foi ent\u00e3o permitir o compartilhamento de informa\u00e7\u00f5es com uma tecnologia emergente da \u00e9poca, o hipertexto<sup>1</sup>.</p> <p>A ideia n\u00e3o foi implementada de imediado pelo CERN, mas garantiu a Tim a possibilidade de dedicar tempo ao projeto <sup>1</sup>. Com isso, no final de 1990, ele havia escrito tr\u00eas implementa\u00e7\u00f5es que s\u00e3o pilares para a Web at\u00e9 os dias atuais:</p> <ul> <li>Linguagem HTML (HyperText Markup Language): linguagem de marca\u00e7\u00e3o utilizada para atribuir estrutura e sem\u00e2ntica aos documentos da Web.</li> <li>URI (Uniform Resource Identifier): endere\u00e7o \u00fanico que cada recurso recebe na Web. O tipo mais comum de URI chama-se URL (Uniform Resource Locator).</li> <li>Protocolo HTTP (Hypertext Transfer Protocol): protocolo que permite a recupera\u00e7\u00e3o de recursos vinculados na Web. </li> </ul> <p>Com estes recursos e uma primeira implementa\u00e7\u00e3o de web browser e web server escritas por Tim, a primeira p\u00e1gina tornou-se dispon\u00edvel na Internet no final de 1990. Em 1993, Tim e outros envolvidos lutaram para assegurar que o c\u00f3digo-fonte fosse disponibilizado de forma aberta, sem qualquer cobran\u00e7a de royalties por parte do CERN. Esse, certamente, representa o marco que tornou a Web o ambiente que conhecemos nos dias atuais <sup>1</sup>.</p> <p>Dica</p> <p>Web Browser \u00e9 a designa\u00e7\u00e3o utilizada para softwares utilizados no lado cliente (usu\u00e1rio) para navegar pela Web. J\u00e1 Web Servers s\u00e3o os softwares instalados em servidores que fornecem aos clientes o conte\u00fado solicitado por meio das requisi\u00e7\u00f5es.</p> <p>Em 1994, Tim foi para o MIT (Massachusetts Institute of Technology) com a finalidade de criar o World Wide Web Consortium (W3C), uma comunidade internacional voltada a defini\u00e7\u00e3o de padr\u00f5es (abertos) para a Web <sup>1</sup>.</p> <p>O uso de padr\u00f5es abertos permitiu que muitas empresas desenvolvessem produtos para este ecossistema. Os diferentes <code>web browsers</code>, popularmente conhecidos com navegadores, s\u00e3o resultado deste processo, por exemplo. Atualmente temos uma grande gama de op\u00e7\u00f5es, como Google Chrome, Microsoft Edge, Mozilla Firefox, Opera, Safari, entre outros. Lembre-se que s\u00e3o os navegadores que n\u00f3s, clientes, utilizamos para navegar pela Web.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/historia/#protocolo-http","title":"Protocolo HTTP","text":"<p>O procolo HTTP (Hypertext Transfer Protocol) \u00e9 um dos protocolos da pilha TCP/IP, presente na camada de Aplica\u00e7\u00e3o. Opera em um modelo de troca de mensagens entre cliente e servidor. </p> <p>Neste modelo, uma m\u00e1quina (cliente) inicia a comunica\u00e7\u00e3o com outra (servidora) solicitando documentos e recursos. A cada requisi\u00e7\u00e3o enviada, o servidor responde com o recurso solicitado. Deste modo, enquando houver recursos necess\u00e1rios para reconstruir o documento no cliente, a troca de mensagens ir\u00e1 continuar. </p> <p>Quando falamos em Web, o cliente normalmente executa um software chamado web browser<sup>2</sup>.</p> <p></p> <p>Fonte: Uma vis\u00e3o geral do HTTP - MDN </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/historia/#uri-uniform-resource-identifiers","title":"URI - Uniform Resource Identifiers","text":"<p>Conforme mencionamos anteriormente, uma URI identifica um recurso na Web de forma \u00fanica. Assemelha-se ao endere\u00e7o de sua resid\u00eancia, com alguns detalhes adicionais que permitiram, por exemplo, encontrar sua escova de dentes.</p> <p>Uma URL (tipo mais comum de URI) \u00e9 constitu\u00eddo de v\u00e1rios elementos. Geralmente segue o padr\u00e3o <code>http://subdom\u00ednio.dom\u00ednio.extens\u00e3o-dom\u00ednio/caminho-para-o-recurso?par\u00e2metros</code> e est\u00e1 presente na barra de endere\u00e7os do seu web browser enquanto voc\u00ea navega pela Web.</p> <p>Veja alguns exemplos:</p> <pre><code>http://www.example.com/search?category=books&amp;sort=price\nhttp://www.example.com/login?redirect=http%3A%2F%2Fwww.example.com%2Fdashboard\nhttps://www.example.com/product?id=12345\nhttp://www.example.com/locations?latitude=40.7128&amp;longitude=-74.0060\n</code></pre> <ol> <li> <p>World Wide Web Foundationt. History of the web. 2021. URL: https://webfoundation.org/about/vision/history-of-the-web/.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>Mozilla Developer Network. Populating de page - how browser works. 2024. URL: https://developer.mozilla.org/en-US/docs/Web/Performance/How_browsers_work#overview.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/box-model/","title":"CSS3 - Box Model","text":"<p>O Box Model \u00e9 um conceito do CSS que descreve como os elementos HTML s\u00e3o renderizados e ocupam espa\u00e7o em uma p\u00e1gina da web. Ele consiste em quatro partes principais: conte\u00fado, preenchimento (padding), borda e margem. Cada uma dessas partes influencia as dimens\u00f5es e o layout de um elemento na p\u00e1gina <sup>1</sup>.</p> Quatro caixas do box model <sup>1</sup>.","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Box Model"]},{"location":"web/css3/box-model/#conteudo-content","title":"Conte\u00fado (Content)","text":"<p>O conte\u00fado de um elemento HTML \u00e9 a \u00e1rea onde o texto, imagens ou outros tipos de conte\u00fado s\u00e3o exibidos. Ele \u00e9 dimensionado de acordo com as propriedades de largura (<code>width</code>) e altura (<code>height</code>). O tamanho do conte\u00fado \u00e9 determinado pelo conte\u00fado real do elemento e quaisquer dimens\u00f5es especificadas pelo desenvolvedor <sup>1</sup>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Box Model"]},{"location":"web/css3/box-model/#preenchimento-padding","title":"Preenchimento (Padding)","text":"<p>O preenchimento \u00e9 a \u00e1rea entre o conte\u00fado do elemento e sua borda. Ele fornece espa\u00e7o adicional dentro do elemento, aumentando a dist\u00e2ncia entre o conte\u00fado e a borda. O preenchimento \u00e9 \u00fatil para criar espa\u00e7amento interno e melhorar a legibilidade do conte\u00fado. Ele pode ser especificado usando as propriedades <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code> e <code>padding-left</code>, ou a propriedade abreviada <code>padding</code> <sup>1</sup>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Box Model"]},{"location":"web/css3/box-model/#borda-border","title":"Borda (Border)","text":"<p>A borda \u00e9 uma linha que circunda o conte\u00fado e o preenchimento de um elemento. Ela define os limites visuais de um elemento e pode ter diferentes estilos, espessuras e cores. A borda \u00e9 definida pelas propriedades <code>border-width</code>, <code>border-style</code> e <code>border-color</code>. Os estilos de borda comuns incluem s\u00f3lido, pontilhado e tracejado <sup>1</sup>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Box Model"]},{"location":"web/css3/box-model/#margem-margin","title":"Margem (Margin)","text":"<p>A margem \u00e9 a \u00e1rea externa \u00e0 borda de um elemento, que define o espa\u00e7o entre esse elemento e outros elementos vizinhos. Ela fornece controle sobre o espa\u00e7amento entre elementos na p\u00e1gina. A margem pode ser especificada usando as propriedades <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code> e <code>margin-left</code>, ou a propriedade abreviada <code>margin</code> <sup>1</sup>.</p> <ol> <li> <p>Web.dev. Box model. 2024. URL: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Box Model"]},{"location":"web/css3/cores/","title":"CSS3 - Cores","text":"<p>Cores s\u00e3o um dos recursos mais importantes da linguagem CSS. V\u00e1rias propriedades de estilo as utilizam, como \u00e0quelas que modificam bordas, preenchimento de fundo, texto e sombras, por exemplo.</p> <p>Temos a disposi\u00e7\u00e3o grande variedade de cores (mais de \\(16\\) milh\u00f5es) e podemos especific\u00e1-las de v\u00e1rias formas. A mais simples \u00e9 atrav\u00e9s do nome da cor, se a mesma constar no rol de cores suportadas pelo navegador e/ou predefinidas na especifica\u00e7\u00e3o do CSS3. Embora simples, esta n\u00e3o costuma ser a forma mais adequada para definir valor de cor.</p> <p>As outras op\u00e7\u00f5es que temos s\u00e3o <code>c\u00f3digo hexadecimal</code> e as fun\u00e7\u00f5es <code>rgb</code>, <code>rgba</code>, <code>hsl</code> e <code>hlsa</code>. Dentre todos, o c\u00f3digo hexadecimal \u00e9 a op\u00e7\u00e3o mais comum, correspondendo a um conjunto de \\(6\\) caracteres iniciado com o s\u00edmbolo <code>#</code>. Estes caracteres representam a quantidade de vermelho, verde e azul que ir\u00e1 compor a cor final. Observe o esquema a seguir:</p> <p></p> <p>Cada canal de cor pode receber valores entre <code>00</code> (sem cor) a <code>ff</code> (cor cheia). Logo, o c\u00f3digo <code>#000000</code> \u00e9 branco, enquanto que <code>#ffffff</code> indica a cor preta. J\u00e1 para as fun\u00e7\u00f5es <code>rgb</code> e <code>rgba</code>, a quantidade de cor de cada canal \u00e9 definida no intervalo \\(0\\) a \\(255\\) e, no caso da <code>rgba</code>, um \u00faltimo valor entre \\(0.0\\) a \\(1.0\\) indicando a transpar\u00eancia aplicada <sup>1</sup>. Observe:</p> <p><pre><code>    body {\n         background-color: #000010;\n    }\n\n    .artigo {\n        background-color: rgb(200,240,255);\n    }\n\n    .secao {\n        background-color: rgba(100,55,36,0.5);\n    }\n</code></pre>     O outro modelo de cores suportado chama-se HSL (Hue-Saturation-Lightness), especificado por meio das fun\u00e7\u00f5es <code>hsl</code> e <code>hlsa</code>. Novamente a fun\u00e7\u00e3o terminada com a permite especificar o canal alpha para transpar\u00eancia.</p> <pre><code>    .artigo {\n        background-color: hsl(167,15,35);\n    }\n\n    .secao {\n        background-color: rgba(167,40,35,0.5);\n    }\n</code></pre> <p>Escolher cores e criar as combina\u00e7\u00f5es mais adequadas n\u00e3o \u00e9 simples. Requer conhecimentos e uma boa percep\u00e7\u00e3o visual para que o resultado final seja agrad\u00e1vel ao usu\u00e1rio. Contudo, especialistas ou n\u00e3o em cores, boas ferramentas de composi\u00e7\u00e3o auxiliam muito no processo. \u00c9 o caso dos sites colordesigner.io e material.io.</p> <ol> <li> <p>Tutorial Republic. Css tutorial. 2021. URL: https://www.tutorialrepublic.com/css-tutorial.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/efeitos-transformacoes/","title":"Efeitos transformacoes","text":"<p>title: \"CSS3 - Efeitos e Transforma\u00e7\u00f5es\" tags:  - Programa\u00e7\u00e3o  - Linguagens de Programa\u00e7\u00e3o  - Web date: 2021-10-13 08:00:00</p>"},{"location":"web/css3/fontes/","title":"CSS3 - Fontes","text":"<p>A escolha de uma fonte \u00e9 crucial para o sucesso de uma interface web, visto que est\u00e1 diretamente ligada \u00e0 experi\u00eancia de leitura do usu\u00e1rio (que deve ser agrad\u00e1vel, naturalmente).</p> <p>As propriedades de estilo que o CSS3 nos fornece para manipularmos fontes s\u00e3o <code>font-family</code>, <code>font-style</code>, <code>font-weight</code>, <code>font-size</code>, e <code>font-variant</code>. Na sequ\u00eancia iremos abordar cada uma delas:</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fontes/#propriedade-font-family","title":"Propriedade <code>font-family</code>","text":"<p>Especifica a fam\u00edlia de fontes que o navegador deve utilizar para renderizar o texto. A propriedade aceita v\u00e1rios valores separados por v\u00edrgula, indicando op\u00e7\u00f5es de fontes quando n\u00e3o for poss\u00edvel utilizar a anterior. Normalmente finalizamos especificando uma das cinco fam\u00edlias gen\u00e9rias de fonte dispon\u00edveis: serif, sans-serif, monospace, coursive e fantasy <sup>1</sup> <sup>2</sup> <sup>3</sup>.</p> <p>A fam\u00edlia gen\u00e9rica deve ser utilizada para contornar a possibilidade do usu\u00e1rio n\u00e3o ter dispon\u00edvel em seu navegador as outras fam\u00edlias listadas. Logo, nestes casos, o navegador conseguir\u00e1 preservar o padr\u00e3o tipogr\u00e1fico com outra fonte semelhante dispon\u00edvel <sup>1</sup> <sup>2</sup> <sup>3</sup>. </p> <p>Cada fam\u00edlia de fontes gen\u00e9rica tem caracter\u00edsticas tipogr\u00e1ficas particulares. Vejamos quais s\u00e3o elas.</p> <ul> <li><code>serif</code>: Cada glifo (s\u00edmbolo) de caractere apresenta tra\u00e7os, termina\u00e7\u00f5es, de acabamento. </li> </ul> <p>Exemplo de texto utilizando fonte serifada.</p> <ul> <li><code>sans-serif</code>: Os glifos n\u00e3o apresentam tra\u00e7os de acabamento.</li> </ul> <p>Exemplo de texto utilizando fonte sem serifas.</p> <ul> <li><code>monospaced</code>: Cada glifo ocupa o mesmo espa\u00e7o (mesmo tamanho). Assemelha-se com a forma de escrita das antigas m\u00e1quinas de escrever.</li> </ul> <p>Exemplo de texto utilizando fonte monoespa\u00e7ada.</p> <ul> <li><code>cursive</code>: Os glifos assemelham-se a escrita manual.</li> </ul> <p>Exemplo de texto utilizando fonte cursiva.</p> <ul> <li><code>fantasy</code>: S\u00e3o fontes art\u00edsticas.</li> </ul> <p>Exemplo de texto utilizando fonte art\u00edstica.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fontes/#propriedade-font-style","title":"Propriedade <code>font-style</code>","text":"<p>Propriedade que permite especificar a apresenta\u00e7\u00e3o da face dos glifos, se normais, em it\u00e1lico ou obl\u00edquos <sup>2</sup> <sup>3</sup>. Os poss\u00edveis valores s\u00e3o:</p> <ul> <li><code>normal</code></li> </ul> <p>Normal (padr\u00e3o).</p> <ul> <li><code>italic</code></li> </ul> <p>Em it\u00e1lico.</p> <ul> <li><code>oblique</code></li> </ul> <p>Obl\u00edquo (quase igual ao it\u00e1lico).</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fontes/#propriedade-font-size","title":"Propriedade <code>font-size</code>","text":"<p>Permite especificar o tamanho da fonte, a partir de medidas relativas, como percentual, em, rem, etc ou medidas absolutas como pixels. Para saber mais sobre unidades de medida, acesse nosso conte\u00fado sobre o tema <sup>2</sup> <sup>3</sup>.</p> <p> 16px - 2rem - 2em </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fontes/#propriedade-font-weight","title":"Propriedade <code>font-weight</code>","text":"<p>Define o peso (intensidade de negrito)  da fonte. Os valores podem ser <code>normal</code>, <code>bold</code>, <code>bolder</code>, <code>lighter</code>, <code>100</code>, <code>200</code>, <code>300</code>, <code>400</code>, <code>500</code>, <code>600</code>, <code>700</code>, <code>800</code>, <code>900</code> e <code>inherit</code>. Os valores num\u00e9ricos indicam uma gradua\u00e7\u00e3o de negrito. O valor <code>400</code> equivale a <code>normal</code> enquanto que o valor <code>700</code> \u00e9 equivalente a <code>bold</code>. Os valores <code>bolder</code> e <code>lighter</code> aplicam-se em rela\u00e7\u00e3o ao peso herdado do ancestral, enquanto que <code>normal</code> e <code>bold</code> aplicam-se em absoluto ao texto (sem rela\u00e7\u00e3o com o valor do ancestral) <sup>2</sup> <sup>3</sup>.</p> <p> Valor 200 - Valor 400 - Valor 600 - Valor 900 </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fontes/#propriedade-font-variant","title":"Propriedade <code>font-variant</code>","text":"<p>Indica se o texto deve ser exibido ou n\u00e3o considerando apenas caracteres mai\u00fasculos. Os valores poss\u00edveis s\u00e3o <code>small-caps</code> e <code>normal</code> (padr\u00e3o) <sup>2</sup> <sup>3</sup>.</p> <p> Escrita normal - Escrita em small caps</p> <ol> <li> <p>MDN Web Docs. Font-family - css. 2021. URL: https://developer.mozilla.org/pt-BR/docs/Web/CSS/font-family.\u00a0\u21a9\u21a9</p> </li> <li> <p>W3Schools. Css reference. 2021. URL: https://www.w3schools.com/csSref/default.asp.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>Tutorial Republic. Css tutorial. 2021. URL: https://www.tutorialrepublic.com/css-tutorial.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fundamentos/","title":"CSS3 - Fundamentos","text":"<p>Sabemos que utilizamos HTML5 para estruturar e atribuir sem\u00e2ntica ao conte\u00fado de documentos na Web, mas \u00e9 fato que o resultado final \u00e9 pouco atrativo ao usu\u00e1rio, pois carece de cores, posicionamento e outros elementos est\u00e9ticos. Neste sentido, iniciamos nosso estudo da linguagem <code>CSS3</code> (Cascading Style Sheets), que, ao ser incorporada a documentos HTML, permite alterar a representa\u00e7\u00e3o gr\u00e1fica dos componentes.</p> <p>Embora a vers\u00e3o \\(3\\) seja recente, o <code>CSS</code> \u00e9 uma linguagem que foi apresentada em 1994. Ao longo do tempo foi sendo aperfei\u00e7oada, gerando as major versions \\(1\\), \\(2\\) e \\(3\\).</p> <p>A vers\u00e3o \\(3\\) da linguagem CSS \u00e9 uma evolu\u00e7\u00e3o da vers\u00e3o \\(2\\). Podemos classificar os recursos da linguagem em diferentes m\u00f3dulos, cada qual com finalidade espec\u00edfica. Estes m\u00f3dulos s\u00e3o <sup>1</sup>:</p> <ul> <li>Selectors</li> <li>Box Model</li> <li>Backgrounds</li> <li>Image Values and Replaced Content</li> <li>Text Effects</li> <li>2D Transformations</li> <li>3D Transformations</li> <li>Animations</li> <li>Multiple Column Layout</li> <li>User Interface</li> </ul> <p>Em nosso estudo, iremos abordar os t\u00f3picos mais b\u00e1sicos da linguagem, buscando explorar um pouco de cada m\u00f3dulo. Come\u00e7aremos analisando os seletores, fundamentais dentro do escopo de uso da linguagem. Contudo, antes \u00e9 necess\u00e1rio que conhe\u00e7amos como incorporar c\u00f3digo CSS \u00e0 nossos documentos, certo?</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fundamentos/#sintaxe","title":"Sintaxe","text":"<p>A linguagem CSS3 fornece, basicamente, um vasto conjunto de propriedades de estilo, fun\u00e7\u00f5es e outras constru\u00e7\u00f5es que podemos utilizar para modificar algum aspecto da aparencia dos elementos HTML5.</p> <p>Uma propriedade de estilo \u00e9 definida por um nome e um valor. Por exemplo, se desejamos justificar determinado texto, podemos escrever o seguinte trecho de c\u00f3digo:</p> <p><pre><code>text-align:justify;\n</code></pre> A propriedade chama-se <code>text-align</code> e seu valor foi configurado para <code>justify</code>, o qual indica que o texto deve ser justificado. Ao final, \u00e9 necess\u00e1rio colocar <code>;</code>. Um mesmo elemento pode receber diversas configura\u00e7\u00f5es de estilo atrav\u00e9s do uso de diferentes propriedades.</p> <p>Podemos encontrar informa\u00e7\u00f5es sobre cada propriedade do CSS3 no site da W3Schools. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/fundamentos/#incorporacao","title":"Incorpora\u00e7\u00e3o","text":"<p>A incorpora\u00e7\u00e3o de c\u00f3digo CSS3 a documentos HTML5 pode ser realizada de tr\u00eas formas distintas: arquivo externo, elemento <code>&lt;style&gt;</code> ou atributo <code>style</code> (inline). Vejamos como configuramos cada op\u00e7\u00e3o.</p> <p>Estilos <code>inline</code> s\u00e3o aqueles que acompanham o elemento, sendo definidos no atributo <code>style</code>. Devem ser utilizados com cautela, pois s\u00e3o dif\u00edceis de alterar quando aparecem em grande quantidade no documento. \u00c9 o caso do elemento <code>h1</code> do documento apresentado na sequ\u00eancia. Perceba que o estilo se aplica somente ao elemento.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;    \n    &lt;body&gt;\n        &lt;h1 style=\"color:blue;margin-left:30px;text-align:center;\"&gt;Titulo&lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Quando utilizamos o elemento <code>&lt;style&gt;</code> temos maior flexibilidade na aplica\u00e7\u00e3o dos estilos pois, diferentemente do modo <code>inline</code>, podemos aplicar o mesmo estilo a v\u00e1rios elementos do documento por meio de <code>regras</code>. Iremos conhecer o conceito de regra de estilo mais a frente, por ora basta pensar nelas como um crit\u00e9rio para estabelecer quem (elementos) ir\u00e1 receber as propriedades de estilo.</p> <p>Observe que o elemento <code>&lt;style&gt;</code> deve ser adicionado dentro de <code>&lt;head&gt;</code> e todas as regras de estilo devem ser escritas como conte\u00fado do elemento.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf8\" /&gt;\n    &lt;title&gt;Minha primeira p\u00e1gina Web&lt;/title&gt;\n    &lt;style&gt;\n      body {\n        background-color: rgb(159, 169, 170);\n      }\n\n      p {\n        text-align: center;\n        text-decoration: underline;\n        font-weight: bolder;\n        font-style: italic;\n        color: yellow;\n        font-family: \"Brush Script MT\", cursive;\n        font-size: 40px;\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        color: black;\n        text-transform: uppercase;\n        font-family: \"Noto Sans\", sans-serif;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n\n    &lt;h1&gt;Introdu\u00e7\u00e3o ao CSS3&lt;/h1&gt;\n    &lt;p&gt;\n     Vamos falar de CSS!\n    &lt;/p&gt;\n    &lt;h2&gt;Conceitos b\u00e1sicos&lt;/h2&gt;\n    &lt;p&gt;O conceito...&lt;/p&gt;\n    &lt;p &gt;Outro conceito...&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>A terceira forma, em que utilizamos a vincula\u00e7\u00e3o de um arquivo com regras de estilo ao documento \u00e9 a mais utilizada. Isso porque, quando pensamos em um site, devemos considerar a exist\u00eancia de muitos documentos e, todos eles compartilhamento da mesma apresenta\u00e7\u00e3o. Logo, ao deixarmos as regras de estilo em um \u00fanico local, podemos facilmente compartilh\u00e1-las em todos os documentos sem a necessidade de repetir c\u00f3digo. </p> <p>Para realizar a vincula\u00e7\u00e3o de um arquivo CSS ao documento devemos utilizar a tag <code>&lt;link&gt;</code>, que tamb\u00e9m deve estar no <code>&lt;head&gt;</code>. Observe o exemplo:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf8\" /&gt;\n    &lt;title&gt;Minha primeira p\u00e1gina Web&lt;/title&gt;\n    &lt;link href=\"estilos.css\" rel=\"stylesheet\"/&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n\n    &lt;h1&gt;Introdu\u00e7\u00e3o ao CSS3&lt;/h1&gt;\n    &lt;p&gt;\n     Vamos falar de CSS!\n    &lt;/p&gt;\n    &lt;h2&gt;Conceitos b\u00e1sicos&lt;/h2&gt;\n    &lt;p&gt;O conceito...&lt;/p&gt;\n    &lt;p&gt;Outro conceito...&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Em um documento HTML, n\u00f3s podemos ter simultaneamente as tr\u00eas formas de incorpora\u00e7\u00e3o de CSS. Neste caso, o navegador utiliza uma escala de prioridade, afinal \u00e9 poss\u00edvel que haja sobreposi\u00e7\u00e3o de estilos. Nesta escala, a maior prioridade fica com as propriedades <code>inline</code>, seguidas daquelas definidas para o documento na tag <code>&lt;style&gt;</code> e, por \u00faltimo, as regras oriundas dos arquivos incorporados via <code>&lt;link&gt;</code> <sup>2</sup>.</p> <ol> <li> <p>TutorialPoint. Css3 - tutorial. 2021. URL: https://www.tutorialspoint.com/css/css3_tutorial.htm.\u00a0\u21a9</p> </li> <li> <p>Tutorial Republic. Css tutorial. 2021. URL: https://www.tutorialrepublic.com/css-tutorial.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/media-queries/","title":"Media Queries","text":"<p>Media queries s\u00e3o regras que permitem condicionar a aplica\u00e7\u00e3o de estilos, ou mesmo, sobrescrever quando determinadas condi\u00e7\u00f5es forem satisfeitas. S\u00e3o amplamente utilizadas no CSS3 para criar designs responsivos, adaptando a apresenta\u00e7\u00e3o de um site \u00e0s diferentes caracter\u00edsticas dos dispositivos, como tamanho da tela, resolu\u00e7\u00e3o e orienta\u00e7\u00e3o. </p> <p>Al\u00e9m do CSS3, media queries podem ser utilizadas em elementos HTML, como <code>&lt;style&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;source&gt;</code> e via JavaScript, via m\u00e9todo matchMedia do objeto window <sup>1</sup>.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/media-queries/#estrutura-basica","title":"Estrutura B\u00e1sica","text":"<p>Uma media query consiste em um tipo de m\u00eddia e, opcionalmente, uma ou mais express\u00f5es que verificam as condi\u00e7\u00f5es da m\u00eddia. Na especifica\u00e7\u00e3o das condi\u00e7\u00f5es, podemos utilizar operadores l\u00f3gicos, como not, only e and. A estrutura b\u00e1sica \u00e9:</p> <pre><code>@media not|only mediatype and (express\u00e3o) {\n    /* CSS aqui */\n}\n</code></pre> <p>Na express\u00e3o acima, temos:</p> <ul> <li> <p>Tipo de m\u00eddia (mediatype): Especifica o tipo de dispositivo para o qual o estilo se aplica, como <code>screen</code> (telas), <code>print</code> (impressoras), <code>all</code> (todos os dispositivos), entre outros.</p> </li> <li> <p>Express\u00f5es: Verificam as caracter\u00edsticas da m\u00eddia, como largura da tela (<code>width</code>), altura da tela (<code>height</code>), resolu\u00e7\u00e3o (<code>resolution</code>), orienta\u00e7\u00e3o (<code>orientation</code>). Observe algumas possibilidades:</p> </li> <li><code>width</code> e <code>height</code>: Largura e altura da \u00e1rea de visualiza\u00e7\u00e3o.</li> <li><code>device-width</code> e <code>device-height</code>: Largura e altura da tela do dispositivo.</li> <li><code>orientation</code>: Orienta\u00e7\u00e3o da tela (<code>portrait</code> ou <code>landscape</code>).</li> <li><code>resolution</code>: Resolu\u00e7\u00e3o da tela (pode ser especificada em dpi ou dpcm).</li> <li><code>aspect-ratio</code>: Propor\u00e7\u00e3o entre a largura e a altura da \u00e1rea de visualiza\u00e7\u00e3o.</li> <li><code>device-aspect-ratio</code>: Propor\u00e7\u00e3o entre a largura e a altura da tela do dispositivo.</li> <li><code>color</code>: N\u00famero de bits de cor dispon\u00edveis.</li> <li><code>color-index</code>: N\u00famero de cores na paleta.</li> <li><code>monochrome</code>: N\u00famero de bits por pixel em dispositivos monocrom\u00e1ticos.</li> </ul> <p>A lista de m\u00eddias e propriedades \u00e9 vasta. Acesse a especifica\u00e7\u00e3o Media Queries Level 4 para encontrar todo detalhamento do recurso.</p> <p>As propriedades tipicamente avaliadas s\u00e3o largura m\u00e1xima e m\u00ednima da tela, expressas por <code>max-width</code> e <code>min-width</code>, respectivamente. No exemplo que segue, a media query aplica estilos espec\u00edficos para dispositivos com largura de tela de at\u00e9 600px. Veja:</p> <pre><code>@media screen and (max-width: 600px) {\n    body {\n        background-color: lightblue;\n    }\n}\n</code></pre> <p>Um exemplo mais complexo envolve a combina\u00e7\u00e3o de m\u00faltiplas condi\u00e7\u00f5es atrav\u00e9s dos operadores l\u00f3gicos (<code>and</code>, <code>or</code>, <code>not</code> e <code>only</code>). Trata-se da verifica\u00e7\u00e3o que a tela est\u00e1 entre 600px e 1200px de largura.</p> <pre><code>@media screen and (min-width: 600px) and (max-width: 1200px) {\n    body {\n        background-color: lightgreen;\n    }\n}\n</code></pre> <p>Operadores matem\u00e1ticos de compara\u00e7\u00e3o, como <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code> podem ser utilizados para potencializar as queries. Observe o exemplo:</p> <pre><code>@media (width &gt; 500px) {\n    body {\n        background-color: lightcoral;\n    }\n}\n\n\n@media (width &lt;= 800px) {\n    body {\n        background-color: lightseagreen;\n    }\n}\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/media-queries/#media-queries-breakpoints-e-responsividade","title":"Media queries, breakpoints e responsividade","text":"<p>Aplicar media queries \u00e9 a estrat\u00e9gia utilizada para o desenvolvimento de sites responsivos. Nesta abordagem, definem-se breakpoints (condi\u00e7\u00f5es em que h\u00e1 mudan\u00e7a no layout) com base na largura da tela. Aqui, embora sendo poss\u00edvel definir breakpoints para dispositivos espec\u00edficos, o ideal \u00e9 trabalhar de forma gen\u00e9rica, atrav\u00e9s de quebras que atendam ao m\u00e1ximo de dispositivos poss\u00edvel <sup>2</sup>.</p> <p>No exemplo que segue temos um documento HTML5 com barra de navega\u00e7\u00e3o responsiva. Observe as diferentes media queries aplicadas para mudar a quantidade de colunas do layout exibidos (cards) a cada altera\u00e7\u00e3o de breakpoint.</p> index.html style.css scripts.js <ol> <li> <p>Mozilla Developer Network. Css media queries. 2024. URL: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries.\u00a0\u21a9</p> </li> <li> <p>Hostinger. Como usar breakpoints css para design responsivo + dicas dos breakpoints de m\u00eddia mais comuns. 2023. URL: https://www.hostinger.com.br/tutoriais/breakpoints-css.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/","title":"CSS3 - Posicionamento","text":"<p>O CSS3 oferece diferentes maneiras de posicionar elementos em tela. Na sequ\u00eancia iremos abordar com detalhes cada um deles.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#position","title":"Position","text":"<p>A propriedade <code>position</code> \u00e9 fundamental para controlar o posicionamento dos elementos em uma p\u00e1gina da web. Os quatro valores poss\u00edveis s\u00e3o <code>static</code>, <code>relative</code>, <code>absolute</code> e <code>fixed</code>.</p> <ul> <li><code>static</code>: Este \u00e9 o valor padr\u00e3o. Elementos com <code>position: static</code> s\u00e3o renderizados na ordem normal do fluxo do documento. Eles n\u00e3o s\u00e3o afetados pelas propriedades de posicionamento (<code>top</code>, <code>right</code>, <code>bottom</code>, <code>left</code>).</li> <li><code>relative</code>: Com <code>position: relative</code>, voc\u00ea pode mover o elemento em rela\u00e7\u00e3o \u00e0 sua posi\u00e7\u00e3o normal no fluxo do documento, usando as propriedades <code>top</code>, <code>right</code>, <code>bottom</code> e <code>left</code>. Ele permanece no fluxo normal do documento, apenas a posi\u00e7\u00e3o \u00e9 ajustada.</li> <li><code>absolute</code>: Elementos com <code>position: absolute</code> s\u00e3o removidos do fluxo normal do documento e posicionados em rela\u00e7\u00e3o ao seu ancestral mais pr\u00f3ximo que tenha uma posi\u00e7\u00e3o definida (ou seja, que tenha <code>position: relative</code>, <code>position: absolute</code>, ou <code>position: fixed</code>). Isso permite um posicionamento preciso.</li> <li><code>fixed</code>: Com <code>position: fixed</code>, o elemento \u00e9 posicionado em rela\u00e7\u00e3o \u00e0 janela de visualiza\u00e7\u00e3o do navegador, permanecendo fixo mesmo quando a p\u00e1gina \u00e9 rolada. \u00c9 \u00fatil para cabe\u00e7alhos de p\u00e1ginas, barras de navega\u00e7\u00e3o e outros elementos que devem permanecer vis\u00edveis enquanto o usu\u00e1rio rola a p\u00e1gina.</li> </ul> <p>Exemplo de <code>position: relative</code>: <pre><code>#cabecalho {\n  position: relative;\n  top: 20px;\n  left: 30px;\n}\n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#float","title":"Float","text":"<p>A propriedade <code>float</code> \u00e9 usada para alinhar elementos ao lado esquerdo ou direito de seu cont\u00eainer. Isso \u00e9 frequentemente utilizado para criar layouts de v\u00e1rias colunas. No entanto, \u00e9 importante notar que o uso excessivo de <code>float</code> pode causar problemas de layout e \u00e9 geralmente evitado em favor de t\u00e9cnicas mais modernas, como Flexbox e Grid Layout.</p> <p>Exemplo: <pre><code>.coluna {\n  float: left;\n  width: 50%;\n}\n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#flexbox-layout","title":"Flexbox Layout","text":"<p>O Flexbox \u00e9 um modelo de layout bidimensional que oferece controle e flexibilidade na disposi\u00e7\u00e3o dos elementos em rela\u00e7\u00e3o aos m\u00e9todos tradicionais de layout. Ele permite o alinhamento e distribui\u00e7\u00e3o de elementos em qualquer dire\u00e7\u00e3o, tornando-o ideal para criar layouts responsivos e complexos.</p> <p>Para fazer uso do flexbox precisamos definir um container em torno dos elementos que dever\u00e3o ser posicionais de maneira responsiva. Para isso, \u00e9 preciso utilizar a property <code>display:flex</code>. Normalmente voc\u00ea definir\u00e1 uma classe para isso, como a exibida a seguir:</p> <pre><code>.container {\n  display: flex;\n}\n</code></pre> <p>O Flexbox organiza os itens ao longo de um eixo principal (<code>main axis</code>) e um eixo transversal (<code>cross axis</code>). A dire\u00e7\u00e3o dos eixos pode ser definida com a propriedade <code>flex-direction</code>, cujas op\u00e7\u00f5es podem ser <code>row</code> e <code>column</code>. J\u00e1 para controlar a distribui\u00e7\u00e3o de espa\u00e7o e a ordena\u00e7\u00e3o dos itens no eixo principal e transversal usamos as propriedades <code>justify-content</code> e <code>align-items</code></p> <p>Existem v\u00e1rias outras propriedades aplic\u00e1veis no contexto de layouts flex. As principais s\u00e3o:</p> <ul> <li><code>flex-direction</code>: Define a dire\u00e7\u00e3o do eixo principal (<code>row</code>, <code>row-reverse</code>, <code>column</code>, <code>column-reverse</code>).</li> <li><code>justify-content</code>: Distribui espa\u00e7o ao longo do eixo principal (<code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>space-between</code>, <code>space-around</code>).</li> <li><code>align-items</code>: Alinha os itens ao longo do eixo transversal (<code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>baseline</code>, <code>stretch</code>).</li> <li><code>flex-wrap</code>: Define se os itens devem quebrar para uma nova linha (<code>nowrap</code>, <code>wrap</code>, <code>wrap-reverse</code>).</li> <li><code>align-content</code>: Alinha as linhas do container flex\u00edvel quando h\u00e1 espa\u00e7o extra (<code>flex-start</code>, <code>flex-end</code>, <code>center</code>, <code>space-between</code>, <code>space-around</code>, <code>stretch</code>).</li> </ul> <p>Recomendo a leitura do texto A Complete Guide to Flexbox, o qual oferece uma vis\u00e3o detalhadas da t\u00e9cnica, valores de properties e resultados gerados pelo uso das mesmas. Outro site interessante chama-se Flexbox Froggy - A game for learning CSS flexbox. Nele voc\u00ea pode treinar seus conhecimentos de FlexBox.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#grid-layout","title":"Grid Layout","text":"<p>O Grid Layout \u00e9 um sistema bidimensional que permite dividir o espa\u00e7o de uma p\u00e1gina em linhas e colunas, tornando mais f\u00e1cil o posicionamento dos elementos de forma precisa. Ele fornece controle total sobre o dimensionamento e o posicionamento dos elementos em rela\u00e7\u00e3o ao layout da p\u00e1gina.</p> <p>O posicionamento dos elementos, tal qual ocorre em  uma tabela, \u00e9 feito em linhas e colunas. Para usar o Grid Layout, \u00e9 necess\u00e1rio definir um container que usa a propriedade <code>display: grid;</code>.</p> <p>Para definir o n\u00famero e o tamanho das linhas e colunas do layout utilizamos as propriedades <code>grid-template-columns</code> e <code>grid-template-rows</code>. Observe que h\u00e1 uma unidade de medida chamada fr, a qual representa uma fra\u00e7\u00e3o do viewport, cujo tamanho \u00e9 calculado automaticamente pelo navegador. Ao multiplicar fr por um valor diferente de 1, estamos indicando que a coluna ou linha ter\u00e1 x vezes o tamanho original. Ou seja, 3fr corresponde a 3x o tamanho de uma fra\u00e7\u00e3o.</p> <p>Exemplo: <pre><code>.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px;\n}\n</code></pre></p> <p>Outra propriedade interessante chama-se <code>grid-area</code>. Ela pode ser usada de duas maneiras principais: nomear \u00e1reas de grade em um cont\u00eainer de grade e posicionar itens de grade dentro dessas \u00e1reas nomeadas ou definir explicitamente a posi\u00e7\u00e3o e a abrang\u00eancia de um item de grade. Vamos descrever cada uma delas:</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#definir-areas-nomeadas","title":"Definir \u00e1reas nomeadas","text":"<p>No cont\u00eainer de grade, usando a propriedade <code>grid-template-areas</code>, atribu\u00edmos a cada c\u00e9lula da grade um nome, os quais ser\u00e3o posteriormente utilizados para posicionar os itens.</p> <pre><code>.container {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr; /* Tr\u00eas colunas */\n    grid-template-rows: auto auto auto; /* Tr\u00eas linhas */\n    grid-template-areas: \n        \"header header header\"\n        \"sidebar main main\"\n        \"footer footer footer\";\n}\n</code></pre> <p>Neste exemplo, tr\u00eas \u00e1reas nomeadas s\u00e3o criadas: <code>header</code>, <code>sidebar</code>, <code>main</code> e <code>footer</code>. A \u00e1rea <code>header</code> abrange todas as tr\u00eas colunas na primeira linha, <code>sidebar</code> ocupa a primeira coluna na segunda linha, <code>main</code> ocupa as duas \u00faltimas colunas na segunda linha, e <code>footer</code> abrange todas as tr\u00eas colunas na terceira linha.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#posicionar-items-em-areas-nomeadas","title":"Posicionar items em \u00e1reas nomeadas","text":"<p>Ap\u00f3s definir \u00e1reas nomeadas, posicionamos os itens dentro dessas \u00e1reas usando a propriedade <code>grid-area</code>. Veja o exemplo:</p> <pre><code>.header {\n    grid-area: header;\n}\n\n.sidebar {\n    grid-area: sidebar;\n}\n\n.main {\n    grid-area: main;\n}\n\n.footer {\n    grid-area: footer;\n}\n</code></pre> <p>A propriedade <code>grid-area</code> tamb\u00e9m pode ser usada para definir explicitamente a posi\u00e7\u00e3o de um item de grade baseado em \u00edndices de linha e coluna. Os valores necess\u00e1rios s\u00e3o quatro, a saber: linha inicial, coluna inicial, linha final e coluna final.</p> <pre><code>.item {\n    grid-area: 1 / 2 / 3 / 4; /* Da linha 1 \u00e0 linha 3 e da coluna 2 \u00e0 coluna 4 */\n}\n</code></pre> <p>Recomendo a leitura do texto A Complete Guide to CSS Grid para conhecer de forma mais aprofundada o funcionamento da t\u00e9cnica.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/posicionamento/#outras-referencias","title":"Outras refer\u00eancias","text":"<ul> <li>Grid Layout - FR Unit</li> <li>CSS grid layout - MDN</li> <li>CSS Grid</li> <li>Grid e Flex Layout Cheat Sheet</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/responsividade/","title":"Desenvolvimento Responsivo","text":"<p>No in\u00edcio da Web, os sites eram desenvolvidos para tamanhos de tela espec\u00edficos. Logo, a experi\u00eancia de uso em telas com outras propor\u00e7\u00f5es poderia ser ligeiramente diferente. Scroll vertical e horizontal eram muito comuns, assim como elementos com dimens\u00f5es nitidamente inadequadas (muito grandes ou muito pequenos). </p> <p>Contudo, os tempos eram outros e tais inconsist\u00eancias visuais n\u00e3o implicavam em problemas significativos. Isso porque haviam poucas varia\u00e7\u00f5es em tamanhos de tela e a Web, assim como o acesso \u00e0 Internet, n\u00e3o eram t\u00e3o populares quanto s\u00e3o hoje.</p> <p>O tempo passou e o cen\u00e1rio mudou radicalmente, especialmente a partir do momento em que os smartphones (e outros dispositivos com telas menores) tornaram-se a principal plataforma de acesso a Internet. \u00c9 o momento em que a responsividade passou a ser um fator indispens\u00e1vel ao desenvolvimento de qualquer interface Web.</p> <p>A responsividade no desenvolvimento web refere-se \u00e0 capacidade de um site ou aplica\u00e7\u00e3o web de ajustar seu layout e conte\u00fado de maneira fluida e adapt\u00e1vel para fornecer uma experi\u00eancia de usu\u00e1rio otimizada em uma ampla variedade de dispositivos, desde grandes telas de desktop at\u00e9 pequenos dispositivos m\u00f3veis. Este conceito \u00e9 fundamental em um mundo onde o acesso \u00e0 internet \u00e9 feito atrav\u00e9s de m\u00faltiplos dispositivos com diferentes tamanhos de tela e resolu\u00e7\u00f5es.</p> <p>A import\u00e2ncia da responsividade vai al\u00e9m dos aspectos est\u00e9ticos da interface, pois se correlaciona diretamente com:</p> <ul> <li> <p>Experi\u00eancia do Usu\u00e1rio (UX): Sites responsivos oferecem uma experi\u00eancia de usu\u00e1rio consistente e agrad\u00e1vel, independentemente do dispositivo usado. Isso aumenta a satisfa\u00e7\u00e3o do usu\u00e1rio e pode reduzir a taxa de rejei\u00e7\u00e3o (bounce rate).</p> </li> <li> <p>SEO (Search Engine Optimization): Motores de busca, como o Google, consideram a responsividade como um fator de classifica\u00e7\u00e3o. Sites responsivos tendem a ter melhor desempenho nos resultados de busca.</p> </li> <li> <p>Acessibilidade: Um design responsivo facilita o acesso ao conte\u00fado para usu\u00e1rios com diferentes necessidades e prefer\u00eancias, incluindo aqueles que usam tecnologias assistivas.</p> </li> <li> <p>Manuten\u00e7\u00e3o Simplificada: Em vez de manter v\u00e1rias vers\u00f5es de um site para diferentes dispositivos, um design responsivo permite gerenciar um \u00fanico site, economizando tempo e recursos. Lembre-se que simplifica\u00e7\u00e3o \u00e9 um fator-chave em projetos de sofware e ao manter uma \u00fanica base de c\u00f3digo, temos redu\u00e7\u00e3o significativa de complexidade.</p> </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/responsividade/#principios-basicos-da-responsividade","title":"Princ\u00edpios B\u00e1sicos da Responsividade","text":"<p>Para alcan\u00e7ar um design responsivo, \u00e9 preciso considerar alguns princ\u00edpios b\u00e1sicos. Abaixo vamos apresent\u00e1-los <sup>1</sup> <sup>2</sup></p> <ul> <li> <p>Grade Flex\u00edvel (Flexible Grid): Utilizar unidades de medida flex\u00edveis, como porcentagens e unidades relativas (em, rem), em vez de unidades fixas (pixels), para que os elementos da p\u00e1gina se redimensionem de forma proporcional. Objetivamente, deve-se evitar o uso de medidas absolutas na defini\u00e7\u00e3o da dimens\u00e3o dos elementos.</p> </li> <li> <p>Imagens e M\u00eddias Flex\u00edveis: As imagens e outros conte\u00fados de m\u00eddia devem ser redimension\u00e1veis para se ajustar ao tamanho da tela. Isso pode ser alcan\u00e7ado usando a propriedade CSS <code>max-width: 100%;</code>. \u00c9 uma t\u00e9cnica simples e eficaz, pois em telas menores, a image/m\u00eddia ir\u00e1 reduzir \u00e0 largura dispon\u00edvel e em telas maiores, alcan\u00e7ar\u00e1 a largura m\u00e1xima do objeto, evitando perde de qualidade por conta da amplia\u00e7\u00e3o excessiva.</p> </li> <li> <p>Media Queries: Utilizar media queries do CSS para aplicar estilos diferentes com base em caracter\u00edsticas espec\u00edficas do dispositivo, como largura, altura, orienta\u00e7\u00e3o, resolu\u00e7\u00e3o da tela e tipo de dispositivo. </p> </li> </ul> <p>Embora media queries possam ser utilizadas no JavaScript e no HTML5, o uso no CSS \u00e9 mais simples e efetivo. Trata-se de utilizar a \"at rule\" <code>@media</code>, com condi\u00e7\u00f5es para determinar quando as regras de estilo do seu escopo devem ser aplicadas.</p> <pre><code>@media (max-width: 600px) {\n    .container {\n        flex-direction: column;\n    }\n}\n</code></pre> <ul> <li> <p>Design Mobile First: Adotar uma abordagem de design que prioriza a experi\u00eancia em dispositivos m\u00f3veis, expandindo gradualmente para telas maiores. Isso geralmente resulta em um site mais eficiente e focado nas funcionalidades essenciais. O movimente inverso, que consiste em desenvolver o layout para telas maiores e ir reduzindo para telas menores n\u00e3o \u00e9 a abordagem mais efetiva.</p> </li> <li> <p>Componentes Responsivos: Criar componentes de interface que possam se adaptar a diferentes tamanhos de tela, mantendo a funcionalidade e a usabilidade.</p> </li> <li> <p>Tipografia: Garantir que os elementos textuais sejam renderizados com propor\u00e7\u00f5es adequadas. Normalmente a estrat\u00e9gia \u00e9 definir um tamanho de refer\u00eancia para tipografia no elemento raiz (HTML) e definir os demais como propor\u00e7\u00f5es relativas a ele (unidades em e rem).</p> </li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/responsividade/#propriedade-viewport-na-tag-meta","title":"Propriedade viewport na tag meta","text":"<p>Em sites responsivos, h\u00e1 uma tag meta no head da p\u00e1gina para a propriedade viewport. Normalmente, os valores presentes s\u00e3o:</p> <pre><code>&lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" /&gt;\n</code></pre> <p>O objetivo desta configura\u00e7\u00e3o \u00e9 informar ao navegador dos dispositivos m\u00f3veis para configurar o tamanho do viewport igual ao tamanho da tela e redimensionar o conte\u00fado para esta propor\u00e7\u00e3o. Isso \u00e9 necess\u00e1rio porque alguns navegadores de dispositivos m\u00f3veis configuram o viewport com o tamanho maior do que a tela, e como tal, deixando o layout inconsistente ao dispositivo. Deste modo, esta linha \u00e9 essencial no HTML5 Ppara qualquer site que almeja ser responsivo.</p> <ol> <li> <p>Ethan Marcotte. Responsive web design. 2010. URL: https://alistapart.com/article/responsive-web-design/.\u00a0\u21a9</p> </li> <li> <p>Mozilla Developer Network. Responsive design. 2024. URL: https://developer.mozilla.org/pt-BR/docs/Learn/CSS/CSS_layout/Responsive_Design.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/seletores/","title":"CSS3 - Seletores","text":"<p>Seletores s\u00e3o parte de uma regra de estilo. Sua fun\u00e7\u00e3o \u00e9 orientar o navegador, por meio de um padr\u00e3o de pesquisa, a encontrar os elementos que devem receber o estilo no documento <sup>1</sup>. Normalmente escrevemos diversas regras para obter o resultado final desejado. Vamos iniciar com uma simples para observarmos sua sintaxe.</p> <pre><code>p {\n        text-align: center;\n        color: yellow;\n        font-family: \"Brush Script MT\", cursive;\n        font-size: 40px;\n      }\n</code></pre> <p>A regra acima tem como seletor <code>p</code>, indicando que todos os elementos do tipo par\u00e1grafo do documento devem receber as propriedades de estilo definidas. Cada par de propriedade:valor corresponde a uma declara\u00e7\u00e3o. Perceba que toda declara\u00e7\u00e3o finaliza com um ponto-e-v\u00edrgula <code>;</code> e que as declara\u00e7\u00f5es ficam envolvidas entre chaves <code>{}</code>.</p> <p>Que tal conhecermos alguns tipos de seletores dispon\u00edveis \ud83d\ude09? <sup>1</sup></p> UniversalElementoIdClasseDescendentesElementos Irm\u00e3osAtributosPseudo-elementosSeletores por nega\u00e7\u00e3oSeletores de Pseudo-classes <p>Todo elemento da p\u00e1gina ir\u00e1 receber o estilo. Utilizamos <code>*</code> como seletor. <pre><code>    * { \n    margin: 0px;         \n    }\n</code></pre></p> <p>Especificamos o nome dos elementos HTML que devem receber o estilo no seletor. <pre><code>    p { \n    color: black;         \n    }\n</code></pre></p> <p>Todo elemento HTML possui um atributo chamado <code>id</code>. Este atributo \u00e9 utilizado para identificar de forma \u00fanica um elemento no documento. Isso significa que dois elementos n\u00e3o podem compartilhar o mesmo valor em <code>id</code>. No CSS, podemos especificar um seletor para valores de <code>id</code> utilizando o caractere <code>#</code> acompanhado do valor de <code>id</code> correspondente. <pre><code>#cabecalho { \n    background-color: black;         \n    }\n</code></pre></p> <p>Outro atributo global de elementos do HTML5 chama-se <code>class</code>. Diferentemente de <code>id</code>, diferentes elementos podem compartilhar do mesmo valor em <code>class</code> e, al\u00e9m disso, v\u00e1rios valores s\u00e3o aceitos, deixando-se um espa\u00e7o entre eles. Seletores baseados em classe s\u00e3o amplamente utilizados. Sua constru\u00e7\u00e3o requer o uso do caractere ponto <code>.</code> acompanhado do nome da classe.</p> <p>Podemos deixar o seletor mais espec\u00edfico, associando com um seletor de elemento, como em <code>p.importante</code>. A interpreta\u00e7\u00e3o, neste caso, \u00e9 todo par\u00e1grafo que cont\u00e9m a classe importante. <pre><code>    .artigo { \n        text-align: justify;\n    }\n    p.importante {\n        color:red\n    }\n</code></pre></p> <p>Utilizamos este tipo de seletor para aplicar estilos a elementos com base em seus elementos \"pai\". Podemos selecionar, por exemplo, todos os par\u00e1grafos (<code>&lt;p&gt;</code>) que s\u00e3o descendentes de artigos (<code>&lt;article&gt;</code>), desconsiderando todos os demais. Nosso seletor seria escrito da seguinte forma: <pre><code>    article p { \n        font-family: 'Roboto', sans-serif;\n    }           \n</code></pre> Observe que este seletor considera descendentes diretos e indiretos. Para ser mais restritivo e considerar somente elementos que s\u00e3o \"filhos\" diretos, devemos utilizar o s\u00edmbolo <code>&gt;</code>, conforme o exemplo a seguir: <pre><code>    article &gt; p { \n        font-family: 'Roboto', sans-serif;\n    }           \n</code></pre></p> <p>S\u00e3o seletores que consideram elementos de mesmo n\u00edvel (\"irm\u00e3os\", pois s\u00e3o filhos do mesmo \"pai\"). Se quisessemos aplicar um estilo espec\u00edfico para o primeiro par\u00e1grafo (<code>&lt;p&gt;</code>) que segue um t\u00edtulo de segundo n\u00edvel (<code>&lt;h2&gt;</code>), poder\u00edamos utilizar o operador <code>+</code> que indica <code>adjac\u00eancia</code>: <pre><code>    h2 + p { \n        font-family: 'Roboto', sans-serif;\n    }           \n</code></pre> Se a adjac\u00eancia n\u00e3o for necess\u00e1ria, mas apenas a id\u00e9ia de ser \"irm\u00e3o\", utilizamos o operador <code>+</code>: <pre><code>    h2 ~ p {\n        font-family: 'Roboto', sans-serif;\n    }        \n</code></pre></p> <p>S\u00e3o seletores que consideram a presenta e/ouvalores de atributos das tags HTML em sua defini\u00e7\u00e3o. ```css    a[href]  {          font-family: 'Roboto', sans-serif;     }  </p> <p>input[type=\"text\"] {         font-family: 'Roboto', sans-serif;    } </p> <p>S\u00e3o seletores que permitem estilizar partes de um elemento e n\u00e3o sua integralidade. Por exemplo, podemos estilizar somente a primeira linha de um par\u00e1grafo atrav\u00e9s da regra a seguir <sup>2</sup>.    <pre><code>   p::first-line {\n        font-family: 'Roboto', sans-serif;\n    }\n</code></pre> Observe que, para todo e qualquer pseudo-elemento, devemos utilizar a sintaxe a seguir (usar <code>::</code>): <pre><code>selector::pseudo-element {\n    property: value;\n}\n</code></pre></p> <p>Seleciona todos os elementos que n\u00e3o atendem a condi\u00e7\u00e3o especificada. <pre><code>    div:not(.oculto) {\n        background-color:red;\n    }\n</code></pre></p> <p>Pseudo-classes s\u00e3o utilizadas para selecionar elementos com base em algum estado espec\u00edfico <sup>3</sup> <pre><code>    a:visited {\n        color: forestgreen;\n        text-decoration-color: hotpink;\n    }\n</code></pre>  Observe que, para toda e qualquer pseudo-classe, devemos utilizar a sintaxe a seguir (usar <code>:</code>): <pre><code>selector:pseudo-class {\n    property: value;\n}\n</code></pre></p> <ol> <li> <p>Tutorial Republic. Css tutorial. 2021. URL: https://www.tutorialrepublic.com/css-tutorial.\u00a0\u21a9\u21a9</p> </li> <li> <p>Web.dev. Box model. 2024. URL: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements.\u00a0\u21a9</p> </li> <li> <p>MDN Web Docs. Pseudo-classes - css: cascading style sheets | mdn. 2024. URL: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/css3/unidades-medidas/","title":"CSS3 - Unidades de Medida","text":"<p>As medidas s\u00e3o utilizadas para especificar o tamanho e posicionamento de elementos. Temos a disposi\u00e7\u00e3o dois tipos, que s\u00e3o as medidas absolutas e relativas. Na sequ\u00eancia iremos analisar cada uma delas:</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#medidas-absolutas","title":"Medidas Absolutas:","text":"<p>As medidas absolutas, como pixels (px), polegadas (in), cent\u00edmetros (cm), etc., s\u00e3o especificadas com um valor fixo que n\u00e3o \u00e9 afetado pelo ambiente ou contexto da p\u00e1gina. Elas fornecem uma precis\u00e3o absoluta e s\u00e3o consistentes independentemente do dispositivo ou configura\u00e7\u00e3o de exibi\u00e7\u00e3o.</p> <p>Isso significa que medidas absolutas resultam em elementos com tamanhos fixos e invari\u00e1veis, independentemente do tamanho da tela ou do navegador em que est\u00e3o sendo exibidos. De modo geral, tal caracter\u00edstica imp\u00f5e problemas de adapta\u00e7\u00e3o em dispositivos com tamanhos de tela variados, especialmente em dispositivos m\u00f3veis ou em layouts responsivos.</p> <p>No CSS3 temos a disposi\u00e7\u00e3o diversas medidas absolutas, contudo a que utilizamos com maior frequ\u00eancia \u00e9 o <code>pixel (px)</code>. No exemplo que segue, estamos definido duas propriedades com valores em pixels.</p> <pre><code>font-size: 16px;\nwidth: 300px;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#medidas-relativas","title":"Medidas Relativas:","text":"<p>Diferentemente das absolutas, as medidas relativas, como porcentagem (%), em (em), rem (rem), vw (viewport width), vh (viewport height), etc., s\u00e3o dimensionadas com base em algum aspecto do ambiente de layout, como o tamanho da fonte, largura da tela ou tamanho do elemento pai.</p> <p>S\u00e3o muito utilizadas, pois elas se ajustam dinamicamente conforme o contexto, proporcionando uma melhor adapta\u00e7\u00e3o a diferentes dispositivos e ambientes de visualiza\u00e7\u00e3o. S\u00e3o fundamentais para criar layouts responsivos, onde os elementos se ajustam de acordo com o tamanho da tela, garantindo uma experi\u00eancia consistente em dispositivos variados.</p> <p>Deste modo, ao usar medidas relativas, \u00e9 poss\u00edvel manter propor\u00e7\u00f5es consistentes entre elementos em diferentes partes do layout, pois eles s\u00e3o dimensionados proporcionalmente em rela\u00e7\u00e3o ao ambiente de exibi\u00e7\u00e3o. </p> <p>As unidades que seguem s\u00e3o apenas algumas unidades de medida relativas do CSS3. Voc\u00ea deve considerar que existem outras mais a disposi\u00e7\u00e3o.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#porcentagem","title":"Porcentagem (%)","text":"<p>Unidade relativa as propor\u00e7\u00f5es do elemento pai.</p> <pre><code>width: 50%;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#em-em","title":"Em (em)","text":"<p>EM \u00e9 uma unidade relativa ao tamanho da fonte do elemento pai.</p> <pre><code>font-size: 1.2em;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#rem-rem","title":"Rem (rem)","text":"<p>REM define o tamanho relativo \u00e0 fonte do elemento raiz (normalmente o elemento <code>&lt;html&gt;</code>).</p> <pre><code>margin-left: 2rem;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#viewport-width-vw-e-viewport-height-vh","title":"Viewport Width (vw) e Viewport Height (vh)","text":"<p>Referem-se \u00e0 largura e altura da janela de visualiza\u00e7\u00e3o do navegador, respectivamente.</p> <pre><code>width: 50vw;\nheight: 80vh;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/unidades-medidas/#viewport-minimum-vmin-e-viewport-maximum-vmax","title":"Viewport Minimum (vmin) e Viewport Maximum (vmax)","text":"<p>Referem-se \u00e0 menor ou maior dimens\u00e3o da janela de visualiza\u00e7\u00e3o do navegador (largura ou altura), respectivamente. <pre><code>  width: 50vmin;\n  height: 80vmax;\n</code></pre></p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Unidades de Medida"]},{"location":"web/css3/exercicios/fundamentos-seletores/","title":"CSS3 - Exerc\u00edcio 1 - Fundamentos de Regras de Estilo","text":"<p>Vamos desenvolver nosso primeiro exerc\u00edcio sobre regras de estilo do CSS3. Na sequ\u00eancia voc\u00ea ir\u00e1 encontrar um documento HTML5 fict\u00edcio, que dever\u00e1 ser utilizado como base para aplicar as regras de estilo solicitadas.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt-br\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Exerc\u00edcio de Seletores CSS&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"estilos.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Bem-vindo ao Exerc\u00edcio de Seletores CSS&lt;/h1&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;div class=\"container\"&gt;\n            &lt;p&gt;Este \u00e9 um &lt;a href=\"#\"&gt;documento HTML fict\u00edcio&lt;/a&gt; para praticar seletores CSS.&lt;/p&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Item 1&lt;/li&gt;\n                &lt;li class=\"destaque\"&gt;Item 2&lt;/li&gt;\n                &lt;li&gt;Item 3&lt;/li&gt;\n                &lt;li&gt;Item 4&lt;/li&gt;\n                &lt;li class=\"destaque\"&gt;Item 5&lt;/li&gt;\n                &lt;li&gt;Item 6&lt;/li&gt;\n                &lt;li&gt;Item 7&lt;/li&gt;\n                &lt;li&gt;Item 8&lt;/li&gt;\n                &lt;li class=\"destaque\"&gt;Item 9&lt;/li&gt;\n                &lt;li&gt;Item 10&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; 2024 Exerc\u00edcio de Seletores CSS&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Agora, no arquivo estilos.css, adicione uma regra para cada quest\u00e3o solicitada. Quanto \u00e0s propriedades de estilo, voc\u00ea tem a liberdade de escolhar qualquer uma que queira.</p> <ol> <li>Elabore uma regra de estilo para todos os elementos <code>&lt;h1&gt;</code> do documento.</li> <li>Elabore uma regra de estilo para todos os elementos vinculados \u00e0 classe <code>destaque</code>.</li> <li>Elabore uma regra de estilo o elemento de id <code>container</code>.</li> <li>Elabore uma regra de estilo para a primeira linha do primeiro par\u00e1grafo filho do elmento cujo identificador \u00e9 <code>container</code>.</li> <li>Elabore uma regra de estilo para o item de lista adjacente \u00e0queles de classe <code>destaque</code>.</li> <li>Elabore uma regra de estilo para todos os item de lista \u00edmpares na sequ\u00eancia de apari\u00e7\u00e3o no documento.</li> <li>Elabore uma regra de estilo para todos os hiperlinks aplicada quando o mouse passa sobre o elemento.</li> <li>Elabore uma regra de estilo para adicionar o texto <code>Lista:</code> a frente de toda lista n\u00e3o ordenada presente no documento.</li> </ol> <p>Lembre-se de adicionar propriedades que alteram as medidas dos elementos para exercitar a compreens\u00e3o do t\u00f3pico.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/layout/","title":"CSS3 - Layouts","text":"<p>Voc\u00ea tem em m\u00e3os a especifica\u00e7\u00e3o de tr\u00eas diferentes layouts. Sua meta \u00e9 desenvolver estes layouts utilizando flexbox ou grid.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/layout/#layout-1","title":"Layout 1","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/layout/#layout-2","title":"Layout 2","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/layout/#layout-3","title":"Layout 3","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/","title":"CSS3 - Media Queries e Grid Layout","text":"<p>Voc\u00ea tem em m\u00e3os a especifica\u00e7\u00e3o de seis diferentes layouts para um mesmo site. Considere que seu desenvolvimento \u00e9 mobile first e que voc\u00ea ir\u00e1 oferecer suporte para telas de at\u00e9 1400px de largura.</p> <p>A partir de um c\u00f3digo (\u00fanico HTML e apenas um arquivo CSS), desenvolva os layouts para tornar seu site responsivo \u00e0s 6 faixas de  largura. </p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/#layout-6-colunas","title":"Layout 6 colunas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/#layout-5-colunas","title":"Layout 5 colunas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/#layout-4-colunas","title":"Layout 4 colunas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/#layout-3-colunas","title":"Layout 3 colunas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/#layout-2-colunas","title":"Layout 2 colunas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/css3/exercicios/media-queries/#layout-mobile","title":"Layout Mobile","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","CSS3"]},{"location":"web/exercicios/1/","title":"Restaurante","text":""},{"location":"web/exercicios/1/#objetivo","title":"Objetivo","text":"<p>Desenvolver a estrutura de um site para um restaurante fict\u00edcio usando HTML5 e CSS3. O exerc\u00edcio envolve criar uma p\u00e1gina com um layout moderno que inclua um cabe\u00e7alho com o nome do restaurante, um menu de navega\u00e7\u00e3o, uma se\u00e7\u00e3o sobre o restaurante, uma galeria de pratos, um formul\u00e1rio de reserva e um rodap\u00e9. Busque alcan\u00e7ar um design responsivo por meio dos conhecimentos que tens at\u00e9 o momento.</p>"},{"location":"web/exercicios/1/#requisitos-do-documento","title":"Requisitos do Documento:","text":"<p>O site dever\u00e1 ter um cabe\u00e7alho, com nome ou logotipo do restaurante e uma barra de navega\u00e7\u00e3o com links para \"Home\", \"Sobre\", \"Menu\", \"Galeria\" e \"Contato\". Cada link deve direcionar o usu\u00e1rio para uma se\u00e7\u00e3o diferente na mesma p\u00e1gina. Com rela\u00e7\u00e3o ao conte\u00fado de cada se\u00e7\u00e3o, temos:</p> <ul> <li>Sobre: Um par\u00e1grafo que descreva o restaurante, sua filosofia e especialidades, junto com uma imagem de destaque.</li> <li>Menu: Exibir ao menos tr\u00eas pratos principais com o nome do prato, descri\u00e7\u00e3o e pre\u00e7o. Utilize uma tabela ou lista para organizar os pratos.</li> <li>Galeria de Imagens: Criar uma galeria com imagens de pratos ou do ambiente do restaurante, dispondo as imagens em grade.</li> <li>Formul\u00e1rio de Reserva: Incluir um formul\u00e1rio com campos para o nome, data, hora e n\u00famero de pessoas para reservas no restaurante. Al\u00e9m disso, o cliente poder\u00e1 optar por um dos ambientes do restaurante (Gourmet ou Buc\u00f3lico) em sua reserva.</li> </ul> <p>Por fim, no rodap\u00e9, dever\u00e1 constar informa\u00e7\u00f5es de contato (endere\u00e7o, telefone, e-mail) e links para redes sociais.</p>"},{"location":"web/exercicios/1/#requisitos-de-estilizacao","title":"Requisitos de estiliza\u00e7\u00e3o","text":"<ul> <li>Estilize o cabe\u00e7alho com uma cor de fundo atraente e centralize o logotipo/nome do restaurante.</li> <li>A se\u00e7\u00e3o de \"Sobre\" deve ter uma imagem flutuante e o texto deve fluir ao redor.</li> <li>O formul\u00e1rio de reserva deve ser atraente, com campos claramente demarcados, e uma cor de fundo diferenciada.</li> <li>O rodap\u00e9 deve ter uma cor de fundo que combine com o layout e exibir as informa\u00e7\u00f5es de forma centralizada.</li> <li>Lembre-se de manter a identidade de cores </li> <li>Deixe a criatividade te guiar ;)</li> </ul>"},{"location":"web/html5/estrutura-basica/","title":"HTML5 - Fundamentos","text":"<p><code>Hypertext Markup Language</code>, ou simplesmente HTML, \u00e9 uma linguagem de marca\u00e7\u00e3o utilizada para representar informa\u00e7\u00e3o na Web. Nasceu junto com o conceito da Web e hoje, conjuntamente \u00e0s linguagens <code>JavaScript</code> e <code>CSS</code>, comp\u00f5e as bases para o desenvolvimento de solu\u00e7\u00f5es frontend neste ecossistema.</p> <p>Desde seu desenvolvimento, em 1989, a linguagem HTML foi passando por diversas revis\u00f5es, que culminaram com o lan\u00e7amento de novas vers\u00f5es da linguagem. Atualmente est\u00e1 em uso a vers\u00e3o 5, motivo pelo qual \u00e9 comum encontrar cita\u00e7\u00f5es \u00e0 linguagem como HTML5. Caso tenha interesse na integra da linha do tempo das vers\u00f5es da linguagem, podes come\u00e7ar pela Wikip\u00e9dia.</p> <p>Antes de propriamente iniciarmos nosso estudo na linguagem HTML5, precisamos entender os atores principais da Web e como eles se comunicam. Obviamente faremos uma simplifica\u00e7\u00e3o da arquitetura, enfatizando o papel do web browser e do web server. </p> <p>Observe o diagrama a seguir. Nele representamos um cliente estabelecendo comunica\u00e7\u00e3o com um servidor. O cliente envia uma requisi\u00e7\u00e3o - uma solicita\u00e7\u00e3o de recurso - que \u00e9 recepcionada pelo servidor e devolvida ao cliente por meio de uma resposta. Esse modelo de arquitetura distribu\u00edda \u00e9 chamada <code>client/server</code> e define em alto n\u00edvel como ocorre a comunica\u00e7\u00e3o entre web browsers (clientes) e web servers (servidores).</p> flowchart LR     Cliente-- Requisi\u00e7\u00e3o --&gt;Servidor-- Resposta --&gt;Cliente      <p>Nesta troca de mensagens est\u00e1 sendo utilizado o protocolo HTTP (Hypertext Transfer Protocol), que por sua vez transporta documentos HTML quando recursos s\u00e3o retornados ao cliente. Logo, grande parte da informa\u00e7\u00e3o que trafega na Web \u00e9 representada em HTML.</p> flowchart LR     Cliente-- HTTP Request --&gt;Servidor-- HTTP Response --&gt;Cliente      <p>O HTML \u00e9 um dos pilares da Web, junto ao protocolo HTTP e o conceito de URI. Define-se como uma linguagem de marca\u00e7\u00e3o, ou seja, uma representa\u00e7\u00e3o de documento em que adicionamos marcas de significado(sem\u00e2ntica) e de estrutura \u00e0 informa\u00e7\u00e3o. </p> <p>O conceito de <code>hipertexto</code> \u00e9 essencial \u00e0 compreens\u00e3o do HTML. De forma simples, entendemos como <code>hipertexto</code> um conjunto de n\u00f3s (palavras, imagens, v\u00eddeos, \u00e1udios, documentos) que possuem liga\u00e7\u00f5es entre si.</p> flowchart TB     site1 --hiperlink--&gt; site2;     site2 --hiperlink--&gt; site2;     site2 --hiperlink--&gt; site1;  <p>A linguagem HTML tornou-se um padr\u00e3o de refer\u00eancia a partir de 1997, gra\u00e7as ao trabalho da W3C. Isso garantiu \u00e0 tecnologia interoperabilidade em diferentes plataformas e meios de acesso. A especifica\u00e7\u00e3o corrente da linguagem est\u00e1 dispon\u00edvel no portal da W3C de forma p\u00fablica.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/formularios/","title":"HTML5 - Formul\u00e1rios","text":"<p>Os formul\u00e1rios em HTML5 s\u00e3o utilizados para coletar informa\u00e7\u00f5es e interagir com os usu\u00e1rios em p\u00e1ginas da web. Com uma variedade de elementos e atributos, os formul\u00e1rios oferecem flexibilidade e controle sobre como os dados s\u00e3o coletados e processados. Para construir formul\u00e1rios, precisamos utilizar v\u00e1rias tags e conhecer seus atributos b\u00e1sicos. \u00c9 o que veremos na sequ\u00eancia:</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Formul\u00e1rios"]},{"location":"web/html5/formularios/#estrutura-basica","title":"Estrutura B\u00e1sica:","text":"<p>Um formul\u00e1rio \u00e9 definido pelo elemento <code>&lt;form&gt;</code>, que envolve os campos de entrada e os elementos de controle. Com os atributos <code>action</code> e <code>method</code>, podemos especificar para onde os dados ser\u00e3o enviados e como eles ser\u00e3o transmitidos.</p> <p>O atributo <code>action</code> especifica para onde os dados do formul\u00e1rio ser\u00e3o enviados ap\u00f3s o envio. Seu valor \u00e9 geralmente \u00e9 uma URL, que pode ser absoluta ou relativa. Quando o formul\u00e1rio \u00e9 enviado, os dados s\u00e3o submetidos para o URL especificado no atributo <code>action</code>. Se o atributo <code>action</code> estiver vazio, os dados ser\u00e3o submetidos para a mesma p\u00e1gina em que o formul\u00e1rio est\u00e1 localizado.</p> <p><pre><code>&lt;form action=\"/destino\" method=\"post\"&gt;\n</code></pre> J\u00e1 o atributo <code>method</code> especifica como os dados do formul\u00e1rio ser\u00e3o enviados ao servidor. Os dois valores poss\u00edveis s\u00e3o <code>GET</code> e <code>POST</code>. Quando o valor \u00e9 <code>GET</code>, os dados do formul\u00e1rio s\u00e3o anexados \u00e0 URL especificada no atributo <code>action</code>, tornando-os vis\u00edveis na barra de endere\u00e7os do navegador. Esse m\u00e9todo \u00e9 mais comum para formul\u00e1rios que n\u00e3o enviam dados sens\u00edveis e quando queremos que os dados sejam <code>bookmarkable</code>. Por sua vez, se valor for <code>POST</code>, os dados do formul\u00e1rio ser\u00e3o enviados no corpo da requisi\u00e7\u00e3o HTTP, tornando-os n\u00e3o vis\u00edveis na URL. Esse m\u00e9todo \u00e9 mais seguro e adequado para o envio de dados sens\u00edveis ou grandes quantidades de dados.</p> <pre><code>&lt;form action=\"/submit_form.php\" method=\"post\"&gt;\n</code></pre> <p>Os campos de entrada s\u00e3o elementos <code>&lt;input&gt;</code>, que podem assumir diversos tipos, como texto, email, senha, entre outros. Podemos controlar a valida\u00e7\u00e3o dos dados usando atributos como <code>required</code>, <code>maxlength</code>, <code>pattern</code>, entre outros.</p> <p>Para oferecer op\u00e7\u00f5es aos usu\u00e1rios, utilizamos os elementos <code>&lt;select&gt;</code>, <code>&lt;option&gt;</code>, <code>&lt;optgroup&gt;</code>, permitindo criar menus de sele\u00e7\u00e3o e listas suspensas. Al\u00e9m disso, temos os elementos <code>checkbox</code> e <code>radio</code> para sele\u00e7\u00f5es m\u00faltiplas e \u00fanicas, respectivamente.</p> <p>Com o tipo de entrada <code>file</code>, os usu\u00e1rios podem enviar arquivos para o servidor. Isso \u00e9 \u00fatil para formul\u00e1rios que requerem o upload de imagens, documentos, ou outros tipos de arquivos.</p> <p>Podemos tamb\u00e9m utilizar elementos como <code>&lt;label&gt;</code> para associar r\u00f3tulos aos campos de entrada, melhorando a acessibilidade e usabilidade. Tamb\u00e9m \u00e9 poss\u00edvel agrupar campos relacionados usando <code>&lt;fieldset&gt;</code> e <code>&lt;legend&gt;</code>.</p> <p>Veja um exemplo:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Exemplo de Formul\u00e1rio HTML5&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h2&gt;Exemplo de Formul\u00e1rio HTML5&lt;/h2&gt;\n\n&lt;form action=\"/submit_form.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n\n  &lt;fieldset&gt;\n    &lt;legend&gt;Dados Pessoais:&lt;/legend&gt;\n    &lt;label for=\"fname\"&gt;Primeiro Nome:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"fname\" name=\"firstname\" required&gt;&lt;br&gt;\n\n    &lt;label for=\"lname\"&gt;Sobrenome:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"text\" id=\"lname\" name=\"lastname\" required&gt;&lt;br&gt;\n\n    &lt;label for=\"email\"&gt;Email:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;\n\n    &lt;label for=\"password\"&gt;Senha:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"password\" id=\"password\" name=\"password\" required&gt;&lt;br&gt;\n\n    &lt;label for=\"birthdate\"&gt;Data de Nascimento:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"date\" id=\"birthdate\" name=\"birthdate\"&gt;&lt;br&gt;\n\n    &lt;label for=\"gender\"&gt;G\u00eanero:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"&gt;\n    &lt;label for=\"male\"&gt;Masculino&lt;/label&gt;\n    &lt;input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"&gt;\n    &lt;label for=\"female\"&gt;Feminino&lt;/label&gt;&lt;br&gt;\n\n    &lt;label for=\"photo\"&gt;Foto de Perfil:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"file\" id=\"photo\" name=\"photo\"&gt;&lt;br&gt;\n  &lt;/fieldset&gt;\n\n  &lt;fieldset&gt;\n    &lt;legend&gt;Prefer\u00eancias:&lt;/legend&gt;\n    &lt;label for=\"color\"&gt;Cor Favorita:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"color\" id=\"color\" name=\"color\"&gt;&lt;br&gt;\n\n    &lt;label for=\"language\"&gt;Idioma Preferido:&lt;/label&gt;&lt;br&gt;\n    &lt;select id=\"language\" name=\"language\"&gt;\n      &lt;option value=\"en\"&gt;Ingl\u00eas&lt;/option&gt;\n      &lt;option value=\"es\"&gt;Espanhol&lt;/option&gt;\n      &lt;option value=\"pt\"&gt;Portugu\u00eas&lt;/option&gt;\n    &lt;/select&gt;&lt;br&gt;\n\n    &lt;label for=\"newsletter\"&gt;Receber Newsletter:&lt;/label&gt;&lt;br&gt;\n    &lt;input type=\"checkbox\" id=\"newsletter\" name=\"newsletter\" value=\"yes\"&gt;\n    &lt;label for=\"newsletter\"&gt;Sim&lt;/label&gt;&lt;br&gt;\n  &lt;/fieldset&gt;\n\n  &lt;input type=\"submit\" value=\"Enviar\"&gt;\n\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Formul\u00e1rios"]},{"location":"web/html5/formularios/#referencias","title":"Refer\u00eancias","text":"<ul> <li>Basic native form controls</li> <li>The HTML5 input types</li> <li>Other form controls</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Formul\u00e1rios"]},{"location":"web/html5/hiperlinks/","title":"HTML5 - Hiperlinks","text":"<p>A capacidade da linguagem HTML de expressar relacionamentos entre documentos certamente \u00e9 um dos fatores-chave para o sucesso da web. </p> <p>Os <code>hiperlinks</code>, como chamamos estas liga\u00e7\u00f5es, constituem vias que ligam um documento a outro, contido no mesmo site ou em sites diferentes, atrav\u00e9s de palavras, imagens, v\u00eddeos e outras coisas. Esse emaranhado de vias levou ao termo web, ou seja, uma grande teia de informa\u00e7\u00e3o, cujo caminho a ser seguido depende unicamente das escolhas do usu\u00e1rio.</p> <p>Em nossos documentos HTML5 podemos criar hiperlinks atrav\u00e9s da tag <code>&lt;a&gt;</code>. Para fins did\u00e1ticos, iremos apresentar como criamos \u00e2ncoras posicionais para elementos do documento, links locais e links externos.</p> <p>Para que a tag <code>&lt;a&gt;</code> seja considerada um hiperlink, o atributo <code>href</code> deve estar presente com o endere\u00e7o do recurso. Quando o usu\u00e1rio clicar sobre o objeto que representa o hiperlink (texto, imagem, etc), o navegador ir\u00e1 transportar o usu\u00e1rio at\u00e9 o recurso informado.</p> <p>Outro atributo importante do elemento <code>&lt;a&gt;</code> \u00e9 <code>target</code>. Sua fun\u00e7\u00e3o \u00e9 especificar ao navegador onde o recurso dever\u00e1 ser apresentado (contexto do navegador). As op\u00e7\u00f5es que temos s\u00e3o:</p> <ul> <li>_blank: Abre o recurso em nova janela ou aba.</li> <li>_self:  Abre o recurso no mesmo contexto de navega\u00e7\u00e3o do documento origem do hiperlink.</li> <li>_parent:  Abre o recurso no contexto de navega\u00e7\u00e3o pai.</li> <li>_top:  Abre o recurso no contexto de navega\u00e7\u00e3o mais elevado da p\u00e1gina.</li> </ul> <p>N\u00e3o apenas recursos obtidos via protocolo HTTP podem ser informados no atributo <code>href</code>. Podemos utiliz\u00e1-lo para v\u00e1rias finalidades, informando valores dos seguintes tipos <sup>1</sup>:</p> <ul> <li>URL (Uniform Resource Locator) absoluto, como <code>href=\"http://localhost:8000/web/html5/hiperlinks/\"</code>. Quando informado de forma absoluta, frequentemente estamos apontando para um recurso externo ao nosso site.</li> <li>URL relativa, como <code>href=\"hiperlinks/\"</code>. Esse formato \u00e9 utilizado para navegar entre recursos locais do site.</li> <li>Link para algum elemento da p\u00e1gina atrav\u00e9s de seu valor de atributo <code>id</code>, como <code>href=\"#rodape\"</code>. Neste caso, utilizamos para marcar posi\u00e7\u00f5es no documento, a fim de facilitar a navega\u00e7\u00e3o pelo conte\u00fado. Imagine o bot\u00e3o Voltar ao topo, comum em diversos sites.</li> <li>C\u00f3digo JavaScript, como <code>href=\"javascript:alert(\"oi\");\"</code>. Este recurso nos permite executar c\u00f3digo (algum comportamento) a partir de um link. Muito utilizado na programa\u00e7\u00e3o Web.</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Hiperlinks&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;p&gt;Para explorar o mundo da aventura, confira o &lt;a href=\"https://www.adventureworld.com/\"&gt;Adventure World&lt;/a&gt;. Se voc\u00ea \u00e9 apaixonado por culin\u00e1ria, n\u00e3o perca o &lt;a href=\"https://www.cookingdelights.com/\"&gt;Cooking Delights&lt;/a&gt;, onde voc\u00ea pode encontrar receitas deliciosas e dicas de cozinha. Al\u00e9m disso, se estiver interessado em arte e cultura, visite a &lt;a href=\"https://www.artgalleryhub.com/\"&gt;Art Gallery Hub&lt;/a&gt; para descobrir obras incr\u00edveis de artistas de todo o mundo.&lt;/p&gt;\n\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Voc\u00ea deve ter percebido no exemplo que o hiperlink \u00e9 constru\u00eddo a partir do conte\u00fado do elemento <code>&lt;a&gt;</code>. N\u00f3s utilizamos texto, mas poder\u00edamos ter utilizado imagens, v\u00eddeos ou a\u00fadios, por exemplo.</p> <ol> <li> <p>W3C. Html &lt;a&gt; href attribute. 2021. URL: https://www.w3schools.com/tags/att_a_href.asp.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/imagem/","title":"HTML5 - Imagens","text":"<p>Adicionar imagens \u00e0 documentos HTML5 \u00e9 algo trivial. O que mais se observa s\u00e3o documentos que utilizam texto, imagens, \u00e1udio e v\u00eddeo de forma combinada para passar a informa\u00e7\u00e3o desejada ao usu\u00e1rio. Isso porque recursos audiovisuais conferem uma experi\u00eancia mais rica, tornando o documento atrativo e, eventualmente, mais informativo.</p> <p>Em termos de c\u00f3digo, utilizamos o elemento <code>&lt;img&gt;</code> para incorporar imagens ao HTML5. Os atributos obrigat\u00f3rios s\u00e3o <code>src</code> e <code>alt</code>. O primeiro deles indica o caminho para o  arquivo, que pode ser absoluto ou relativo. J\u00e1 o atributo <code>alt</code> cont\u00e9m uma descri\u00e7\u00e3o textual que ser\u00e1 exibida pela navegador em substitui\u00e7\u00e3o \u00e0 imagem, caso ela n\u00e3o possa ser apresentada.</p> <p>Outros dois atributos importantes s\u00e3o <code>width</code> (largura) e <code>heigth</code> (altura). Utilizamos eles para especificar as dimens\u00f5es da imagem em pixels. \u00c9 conveniente utilizar valores nestas propriedades para melhorar a experi\u00eancia do usu\u00e1rio quando da carga do recurso pelo navegador. Tamb\u00e9m merece men\u00e7\u00e3o o atributo <code>title</code>, o qual fornece um texto de t\u00edtulo que \u00e9 exibido quando o usu\u00e1rio passa o mouse sobre a imagem.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Figuras/Imagens&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;img src=\"caminho/para/a/imagem.jpg\" alt=\"Descri\u00e7\u00e3o da Imagem\" title=\"Exemplo\" width=\"20px\" heigth=\"10px\" &gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/imagem/#tag-figure","title":"Tag figure","text":"<p>A tag <code>figure</code> \u00e9 uma tag sem\u00e2ntica introduzida no HTML5 usada para encapsular elementos como imagens, ilustra\u00e7\u00f5es, gr\u00e1ficos, c\u00f3digos, entre outros, que s\u00e3o referenciados no contexto de um documento. \u00c9 frequentemente combinada com a tag <code>figcaption</code> para fornecer uma legenda ou  escri\u00e7\u00e3o associada ao conte\u00fado encapsulado. Al\u00e9m de servir ao prop\u00f3sito de atribuir sem\u00e2ntica aos elementos de conte\u00fado, a tag <code>figure</code> tamb\u00e9m  contribuiu para os fundamentos de acessibilidade pois melhora a experi\u00eancia de quem utilize tecnologias assistivas.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Figuras/Imagens&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;img src=\"https://cdn.pixabay.com/photo/2014/02/17/10/20/statue-of-liberty-267948_960_720.jpg\" alt=\"Est\u00e1tua da Liberdade, Ilha da Liberdade, Nova York, EUA\" width=\"300\" height=\"500\"&gt;\n\n      &lt;p&gt; Na sequ\u00eancia apresentamos a imagem da Gal\u00e1xia de Andr\u00f4meda para que voc\u00ea aprecie:&lt;/p&gt;\n      &lt;figure&gt;\n          &lt;img src=\"https://pt.wikipedia.org/wiki/Gal%C3%A1xia_de_Andr%C3%B4meda#/media/Ficheiro:Pic_iroberts1.jpg\" alt=\"Gal\u00e1xia de Andr\u00f4meda\"  width=\"300\" height=\"500\" &gt;\n          &lt;&lt;figcaption&gt;Gal\u00e1xia de Andr\u00f4meda: Wikip\u00e9dia&lt;/figcaption&gt;&gt;\n      &lt;/figure&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/imagem/#formatos-de-graficos-suportados","title":"Formatos de gr\u00e1ficos suportados","text":"<p>Os navegadores modernos suportam v\u00e1rios tipos de gr\u00e1ficos. Os mais comuns s\u00e3o JPEG, PNG, GIF e SVG.</p> <ul> <li>JPEG (Joint Photographic Experts Group) \u00e9 amplamente utilizado para fotografias e imagens com tons cont\u00ednuos de cor. Ele oferece uma boa compress\u00e3o com perdas, o que resulta em arquivos menores, mas pode sacrificar um pouco da qualidade da imagem. - PNG (Portable Network Graphics) \u00e9 frequentemente usado para imagens com \u00e1reas de cor s\u00f3lida, como logotipos e gr\u00e1ficos. Ele suporta transpar\u00eancia, o que o torna ideal para imagens com fundos transparentes.</li> <li>GIF (Graphics Interchange Format) \u00e9 conhecido por suportar anima\u00e7\u00f5es, mas tamb\u00e9m \u00e9 usado para imagens est\u00e1ticas, especialmente aquelas com poucas cores. O formato GIF suporta transpar\u00eancia e \u00e9 amplamente utilizado para \u00edcones e gr\u00e1ficos simples.</li> <li>SVG (Scalable Vector Graphics) \u00e9 um formato baseado em XML que descreve imagens vetoriais. Ele \u00e9 ideal para gr\u00e1ficos escal\u00e1veis, como \u00edcones e logotipos, pois pode ser redimensionado sem perda de qualidade.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/recursos/","title":"Recursos","text":""},{"location":"web/html5/recursos/#sites-e-outros-recursos-uteis","title":"Sites e outros recursos \u00fateis","text":"<ul> <li>Web.dev</li> <li>W3C</li> <li>Cascading Style Sheets articles and tutorials</li> <li>HTML Living Standard</li> </ul>"},{"location":"web/html5/tabelas/","title":"HTML5 - Tabelas","text":"<p>A cria\u00e7\u00e3o de tabelas requer o uso de diferentes elementos HTML de forma adequada. Temos elementos espec\u00edficas para cabe\u00e7alho, rodap\u00e9, conte\u00fado, linhas e colunas. Na sequ\u00eancia abordaremos cada uma delas em detalhes.</p> <p>A elemento <code>&lt;table&gt;</code> \u00e9 utilizada para delimitar a tabela. Como descendentes, podemos indicar o cabe\u00e7alho, conte\u00fado e rodap\u00e9 atrav\u00e9s das elementos <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code> e <code>&lt;tfoot&gt;</code>, respectivamente. Estas elementos n\u00e3o s\u00e3o obrigatorias e s\u00e3o aplicadas para adicionar sem\u00e2ntica ao conte\u00fado da tabela.</p> <p>Efetivamente, os dados da tabela est\u00e3o contidos nas c\u00e9lulas de dados, criadas a partir do elemento <code>&lt;td&gt;</code>, organizadas em linhas especificadas a partir do elemento <code>&lt;tr&gt;</code>. Para c\u00e9lulas que representam cabe\u00e7alhos, podemos utilizar o elemento <code>&lt;th&gt;</code> para diferenciar das c\u00e9lulas de dados.</p> <p>No exemplo que segue apresentamos um documento contendo uma tabela \\(3 \\times 4\\). A primeira linha representa o cabe\u00e7alho, as duas intermedi\u00e1rias, os dados e a \u00faltima, o rodap\u00e9. Fique atendo ao uso dos elementos para alcan\u00e7ar o resultado.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Tabela&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Estudante&lt;/th&gt;\n                &lt;th&gt;Avalia\u00e7\u00e3o I&lt;/th&gt;\n                &lt;th&gt;Avalia\u00e7\u00e3o II&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Aluno 1&lt;/td&gt;\n                &lt;td&gt;9.5&lt;/td&gt;\n                &lt;td&gt;5.7&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Aluno 2&lt;/td&gt;\n                &lt;td&gt;8.6&lt;/td&gt;\n                &lt;td&gt;6.2&lt;/td&gt;\n            &lt;/tr&gt;\n    &lt;/tbody&gt;\n    &lt;tfoot&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;/td&gt;\n            &lt;td&gt;8.7&lt;/td&gt;\n            &lt;td&gt;6.0&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tfoot&gt;\n    &lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>As linhas da tabela s\u00e3o criadas a partir da abertura de elementos <code>&lt;tr&gt;</code>. Em cada linha, devemos adicionar c\u00e9lulas, sejam de dados ou de cabe\u00e7alho, por meio de <code>&lt;td&gt;</code> e <code>&lt;th&gt;</code>. Cada nova c\u00e9lula requer a abertura e o fechamento do respectivo elemento dentro da linha. Contudo, em alguns casos, precisamos realizar mesclagem de c\u00e9lulas, o que demanda utilizar os atributos rowspan e colspan. Ao aplicar rowspan, indicamos que uma c\u00e9lula se projeta pela quantidade de linhas informada, enquanto que colspan indica a quantidade de colunas que a c\u00e9lula ir\u00e1 preencher.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Tabela&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th colspan=\"4\"&gt;Faturamento&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;td colspan=\"2\"&gt;&lt;/td&gt;\n                    &lt;td&gt;Filial A&lt;/td&gt;\n                    &lt;td&gt;Filial B&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td rowspan=\"3\"&gt;1\u00ba Trimestre&lt;/td&gt;\n                    &lt;td&gt;Janeiro&lt;/td&gt;\n                    &lt;td&gt;5&lt;/td&gt;\n                    &lt;td&gt;6&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;Fevereiro&lt;br&gt;&lt;/td&gt;\n                    &lt;td&gt;4&lt;/td&gt;\n                    &lt;td&gt;5&lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;Mar\u00e7o&lt;/td&gt;\n                    &lt;td&gt;7&lt;/td&gt;\n                    &lt;td&gt;8&lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u00c9 importante ressaltar que as tabelas devem ser utilizadas para organizar dados e n\u00e3o para diagramar conte\u00fado. De fato, os primeiros web sites utilizavam tabelas como forma de posicionar conte\u00fado, mas na \u00e9poca n\u00e3o havia disponibilidade dos atuais recursos providos pelo HTML5 e CSS3. Portanto, hoje, evite essa m\u00e1 pr\u00e1tica.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/tags-basicas/","title":"HTML5 - Tags","text":"<p>A linguagem HTML5 \u00e9 composta por um conjunto de <code>tags</code> (ou elementos). Cada <code>tag</code> serve a um prop\u00f3sito, atribuindo um significado - sem\u00e2ntica - ao conte\u00fado envolvido. Quando aplicadas a um documento, a <code>tag</code> \u00e9 aberta e fechada, ficando o conte\u00fado em meio. Observe a sintaxe de escrita:</p> <ul> <li>Abertura da tag: colocamos o nome da tag entre os s\u00edmbolos de \\(&lt;\\) e  \\(&gt;\\). <pre><code>&lt;p&gt;\n</code></pre></li> <li>Fecho da tag: colocamos o s\u00edmbolo \\(/\\) antes do nome da tag.  <pre><code>&lt;/p&gt;\n</code></pre></li> </ul> <p>A tag <code>p</code>, por exemplo, \u00e9 utilizada para demarcar par\u00e1grafos em um documento HTML5. Logo, qualquer conte\u00fado entre a abertura e o fechamento da tag compreende o conte\u00fado de um par\u00e1grafo. Observe: <pre><code>&lt;p&gt;Aqui est\u00e1 um novo par\u00e1grafo!&lt;/p&gt;\n</code></pre></p> <p>As tags podem conter <code>atributos</code>, que s\u00e3o propriedades que customizam/modificam comportamentos ou associam valores espec\u00edficos aos elementos. Assim como os nomes de tags, os atributos s\u00e3o pr\u00e9-definidos, ou seja, n\u00e3o podemos inventar novos. H\u00e1 atributos que s\u00e3o <code>globais</code><sup>1</sup>, ou seja, que est\u00e3o dispon\u00edveis a todas as tags e outros s\u00e3o espec\u00edficos a algumas tags.</p> <p>Os atributos s\u00e3o informados na abertura da tag, por meio do seu nome, s\u00edmbolo \\(=\\) e o respectivo valor entre aspas duplas. Acompanhe o exemplo:</p> <pre><code>&lt;p id=\"par01\" class=\"vermelho\" style=\"font-size:1.3rem\"&gt;Aqui est\u00e1 um novo par\u00e1grafo!&lt;/p&gt;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/tags-basicas/#documento-e-metadados","title":"Documento e Metadados","text":"<ul> <li><code>&lt;html&gt;</code>: Chamada de root tag, corresponde ao elemento que envolve todo documento. Todas as demais tags devem ser descendentes diretas ou indiretas de <code>&lt;html&gt;</code>. Espera-se que sigam apenas o elemento <code>&lt;head&gt;</code> e o elemento <code>&lt;body&gt;</code>. O elemento mais importante da tag \u00e9 <code>lang</code>, que especifica o idioma do conte\u00fado <sup>2</sup>.</li> <li><code>&lt;head&gt;</code>: Utilizada para indicar informa\u00e7\u00f5es gerais do documento, como metadados e vincula\u00e7\u00f5es com scripts e folhas de estilo <sup>2</sup>. Como descendentes diretas de <code>&lt;head&gt;</code> temos:<ul> <li><code>&lt;meta&gt;</code>: Permite definir metadados que n\u00e3o podem ser especificados em outras tags. </li> <li><code>&lt;title&gt;</code>: Metadado que define o t\u00edtulo do documento ou seu nome. No m\u00e1ximo uma ocorr\u00eancia \u00e9 permitida.</li> <li><code>&lt;link&gt;</code>: Permite especificar as rela\u00e7\u00f5es entre o documento e outro recurso externo. Utilizado especialmente para vincular folhas de estilo. O endere\u00e7o do recurso vinculado fica no atributo <code>href</code>. J\u00e1 o atributo <code>rel</code> indica o tipo de relacionamento estabelecido, que deve considerar um conjunto de op\u00e7\u00f5es definidas pela linguagem.</li> <li><code>&lt;style&gt;</code>: Permite incluir regras de estilo ao documento.</li> <li><code>&lt;script&gt;</code>: Permite definir ou referenciar um script execut\u00e1vel (JavaScript). A tag pode aparecer no corpo do documento e h\u00e1 diferen\u00e7as entre uma op\u00e7\u00e3o e outra.</li> </ul> </li> <li><code>&lt;body&gt;</code>: Todo documento cont\u00e9m apenas uma tag <code>&lt;body&gt;</code> e nela colocamos o conte\u00fado que ser\u00e1 exibido pelo navegador.</li> </ul> <p>Agora vamos colocar todos estes elementos juntos, de sorte a criar um documento b\u00e1sico e v\u00e1lido. Observe que devemos acrescentar na primeira linha <code>&lt;!DOCTYPE html&gt;</code> para indicar que o documento est\u00e1 na vers\u00e3o HTML5. Tamb\u00e9m \u00e9 preciso que fique claro que algumas tags n\u00e3o s\u00e3o obrigat\u00f3rias, como <code>&lt;meta&gt;</code>, <code>&lt;title&gt;</code>, <code>&lt;script&gt;</code> e <code>&lt;style&gt;</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Minha primeira p\u00e1gina&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;script&gt;\n      alert(\"Ol\u00e1, mundo\");\n    &lt;/script&gt;\n    &lt;style&gt;\n      p {\n        color:red;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;!--O conte\u00fado do documento--&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Percebeu que as tags s\u00e3o abertas e fechadas respeitando a hierarquia? Bem, isso \u00e9 essencial para construirmos um documento bem formado, que ser\u00e1 corretamente interpretado pelo navegador. A ideia \u00e9 simples: a tag deve ser fechada sempre no mesmo n\u00edvel em que foi aberta.</p> <p>Outro ponto que voc\u00ea deve ter notado em nosso documento foi o trecho <code>&lt;!--O conte\u00fado do documento--&gt;</code>. Trata-se de um coment\u00e1rio, ou seja, um trecho sem qualquer significado para o navegador e que \u00e9 ignorado por ele. Utilizamos coment\u00e1rios para anotar informa\u00e7\u00f5es importantes no c\u00f3digo a fim de melhor compreend\u00ea-lo. \u00c9 uma estrat\u00e9gia de documenta\u00e7\u00e3o. Em termos de sintaxe, todo coment\u00e1rio deve iniciar com <code>&lt;!--</code> e encerrar com <code>--&gt;</code> para ser v\u00e1lido.</p> <p>Dica</p> <p>Estamos considerando esta forma estrita de sintaxe para facilitar o aprendizado. O padr\u00e3o HTML especifica regras mais brandas para a quest\u00e3o de abertura e fechamento de tags.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/tags-basicas/#semantica-de-texto","title":"Sem\u00e2ntica de Texto","text":"<p>Vamos agora abordar as principais tags utilizadas para atribuir sem\u00e2ntica a texto. Para par\u00e1grafos j\u00e1 sabemos que a tag a ser utilizada \u00e9 <code>p</code>, mas \u00e9 preciso adicionar uma informa\u00e7\u00e3o importante, que aplica-se a todas as demais tags: o formato que o navegador utiliza para desenhar o conte\u00fado na tela considera a defini\u00e7\u00e3o padr\u00e3o de estilo do elemento. </p> <ul> <li><code>&lt;p&gt;</code>: Utilizado para criar um par\u00e1grafo.</li> <li><code>&lt;small&gt;</code>: Representa coment\u00e1rios colaterais, textos de menor relev\u00e2ncia <sup>2</sup>.</li> <li><code>&lt;s&gt;</code>: Representa conte\u00fado desatualizado ou que n\u00e3o \u00e9 mais relevante <sup>2</sup>.</li> <li><code>&lt;strong&gt;</code>: Representa um conte\u00fado de maior seriedade, import\u00e2ncia ou urgente.  Quanto mais ancestrais <code>strong</code> houver, maior ser\u00e1 a relev\u00e2ncia do conte\u00fado <sup>2</sup>.</li> <li><code>&lt;br&gt;</code>: Utilizado para representar uma quebra de linha.</li> <li><code>&lt;pre&gt;</code>: Representa um texto pr\u00e9-formatado, apresentado pelo navegador respeitando a forma em que ele foi inserido no documento.</li> <li><code>&lt;i&gt;</code>: Corresponde a uma sequencia de texto que distingue-se do restante por estar em outro idioma, ser neologismo, termo t\u00e9cnico ou algo semelhante.</li> <li><code>&lt;sup&gt;</code>: Usado para adicionar conte\u00fado <sup>sobrescrito</sup></li> <li><code>&lt;sub&gt;</code>: Usado para adicionar conte\u00fado <sub>subscrito</sub></li> <li><code>&lt;mark&gt;</code>: Usado para evidenciar um trecho de conte\u00fado, com vistas a notificar o leitor de sua relev\u00e2ncia.</li> <li><code>&lt;em&gt;</code>: Utilizado para enfatizar fortemente um determinado trecho de conte\u00fado. Quanto mais ancestrais <code>em</code> houver, maior ser\u00e1 a \u00eanfase ao trecho <sup>2</sup>.</li> <li><code>&lt;code&gt;</code>: Aplicado para conte\u00fado que representa trechos de c\u00f3digo de programas de computador.</li> <li><code>&lt;span&gt;</code>: Utilizado para demarcar um trecho de conte\u00fado para alguma finalidade espec\u00edfica. A tag, em si, n\u00e3o adiciona qualquer sem\u00e2ntica ao conte\u00fado.</li> <li><code>&lt;q&gt;</code>: Demarca cita\u00e7\u00f5es curtas, apresentadas em meio a outro conte\u00fado.</li> <li><code>&lt;quote&gt;</code>: Utilizado para especificar o t\u00edtulo de um trabalho (livro, programa de computador, artigo, etc.). N\u00e3o devemos utilizar para envolver nomes de autores, somente o t\u00edtulo da obra.</li> <li><code>&lt;blockquote&gt;</code>: Demarca cita\u00e7\u00f5es longas.</li> <li><code>&lt;cite&gt;</code>: Utilizado para especificar o t\u00edtulo de um trabalho (livro, programa de computador, artigo, etc.). N\u00e3o devemos utilizar para envolver nomes de autores, somente o t\u00edtulo da obra<sup>2</sup>.</li> <li><code>&lt;span&gt;</code>: O elemento n\u00e3o prov\u00ea nenhuma sem\u00e2ntica. \u00c9 utilizado normalmente em conjunto com atributos globais para agrupar trechos de conte\u00fado textual a fim de facilitar a plica\u00e7\u00e3o de estilos, por exemplo.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/tags-basicas/#titulos","title":"T\u00edtulos","text":"<p>No HTML5 temos a possibilidade de utilizar seis n\u00edveis de t\u00edtulos. Para isso, temos dispon\u00edveis as tags <code>&lt;h1&gt;</code>,<code>&lt;h2&gt;</code>,<code>&lt;h3&gt;</code>,<code>&lt;h4&gt;</code>,<code>&lt;h5&gt;</code> e <code>&lt;h6&gt;</code>. T\u00edtulos <code>&lt;h1&gt;</code> s\u00e3o os de maior import\u00e2ncia, e na medida que o n\u00famero aumenta, a relev\u00e2ncia do t\u00edtulo diminui<sup>3</sup>. Veja um exemplo de documento contendo quatro n\u00edveis de t\u00edtulos.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;T\u00edtulos&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;    \n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt; T\u00edtulo de primeiro n\u00edvel&lt;/h1&gt;\n    &lt;p&gt;Este \u00e9 um par\u00e1grafo&lt;/p&gt;\n    &lt;h2&gt; T\u00edtulo de segundo n\u00edvel&lt;/h2&gt;\n    &lt;p&gt;Este \u00e9 um par\u00e1grafo&lt;/p&gt;\n    &lt;h3&gt; T\u00edtulo de terceiro n\u00edvel&lt;/h3&gt;\n    &lt;p&gt;Este \u00e9 um par\u00e1grafo&lt;/p&gt;\n    &lt;h4&gt; T\u00edtulo de quarto n\u00edvel&lt;/h4&gt;\n    &lt;p&gt;Este \u00e9 um par\u00e1grafo&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/tags-basicas/#listas","title":"Listas","text":"<p>As listas s\u00e3o utilizadas para elencar itens de forma ordenada ou n\u00e3o. Para cada caso, temos a disposi\u00e7\u00e3o uma tag diferente: se o objetivo \u00e9 utilizar uma lista ordenada, ent\u00e3o utilizaremos <code>&lt;ol&gt;</code> e, caso haja interesse em uma lista n\u00e3o ordenada, ent\u00e3o devemos usar <code>&lt;ul&gt;</code>. Quando os elementos da lista, para ambos os casos, utilizamos a tag <code>&lt;li&gt;</code>.</p> <p>Vamos imaginar que seja necess\u00e1rio criar a lista da feira utilizando HTML5. Como n\u00e3o h\u00e1 ordem associada, iremos utilizar uma lista n\u00e3o-ordenada na constru\u00e7\u00e3o do documento. Vejamos o resultado:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Lista da Feira&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;    \n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Compras:&lt;/h1&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Alface&lt;/li&gt;\n        &lt;li&gt;Couve&lt;/li&gt;\n        &lt;li&gt;Br\u00f3colis&lt;/li&gt;\n        &lt;li&gt;Cenoura&lt;/li&gt;\n        &lt;li&gt;Piment\u00e3o&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Por outro lado, se quis\u00e9ssemos listar em um documento a classifica\u00e7\u00e3o de estudantes em uma avalia\u00e7\u00e3o qualquer, utilizar\u00edamos uma lista ordenada, porque, obviamente, temos ordem associada.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Classifica\u00e7\u00e3o na Prova de Culin\u00e1ria&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;    \n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Participantes:&lt;/h1&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Jo\u00e3o&lt;/li&gt;\n        &lt;li&gt;Amanda&lt;/li&gt;\n        &lt;li&gt;Angela&lt;/li&gt;\n        &lt;li&gt;Pedro&lt;/li&gt;\n        &lt;li&gt;Miguel&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li> <p>W3Schools. Html global attributes. 2021. URL: https://webfoundation.org/about/vision/history-of-the-web/.\u00a0\u21a9</p> </li> <li> <p>WHATWG Community. Html living standard \u2014 last updated 17 september 2021. Technical Report, WHATWG, 2021. URL: https://html.spec.whatwg.org/multipage/.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>MDN Web Docs. &lt;h1&gt;\u2013&lt;h6&gt;: the html section heading elements. 2021. URL: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements.\u00a0\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/tags-estruturais/","title":"HTML5 - Tags Estruturais","text":"<p>Um documento escrito em HTML pode ter seu conte\u00fado dividido em diferentes segmentos, como cabe\u00e7alho, rodap\u00e9, se\u00e7\u00f5es, artigos, barra de navega\u00e7\u00e3o e informa\u00e7\u00f5es associadas. Antes do HTML5, a divis\u00e3o destes conte\u00fados era feita basicamente por meio de divis\u00f5es gen\u00e9ricas (tag <code>&lt;div&gt;</code>), o que conferia a estrutura desejada para o desenvolvedor, mas n\u00e3o atribuia a sem\u00e2ntica necess\u00e1ria para interpreta\u00e7\u00e3o autom\u00e1tica da informa\u00e7\u00e3o por softwares leitores de tela e engines de busca, como Google e Bing <sup>1</sup>.</p> <p>Para ilustrar a situa\u00e7\u00e3o, vamos imaginar a p\u00e1gina inicial de um web site fict\u00edcio. Inicialmente iremos utilizar apenas divis\u00f5es para segmentar o conte\u00fado e, na sequ\u00eancia, faremos uso das tags espec\u00edficas do HTML5. No primeiro caso aplicamos v\u00e1rias vezes a tag <code>&lt;div&gt;</code> para organizar o conte\u00fado e utilizamos o atributo global <code>id</code> para indicar o significado de cada segmento.</p> <p>Embora a estrat\u00e9gia de utilizar <code>&lt;div&gt;</code> atenda ao objetivo do desenvolvedor, qualquer processamento autom\u00e1tico de conte\u00fado do documento fica muito dif\u00edcil de ser realizado. Vamos imaginar, por exemplo, que quis\u00e9ssemos obter somente os artigos do conte\u00fado da p\u00e1gina. Talvez voc\u00ea possa pensar: ok, basta consultar o conte\u00fado das <code>&lt;div&gt;</code>s que cont\u00e9m em seu atributo <code>id</code> os valores art1 ou art2. Se o documento preservar os identificadores de artigos, ent\u00e3o o algoritmo funciona, \u00e9 claro, somente para esta p\u00e1gina espec\u00edfica.</p> <p>O tempo passa, a p\u00e1gina \u00e9 modificada e novos artigos s\u00e3o adicionados. \u00c9 preciso vasculhar o HTML, entender quais marcas foram atribu\u00eddas pelo desenvolvedor aos novos artigos e ent\u00e3o ajustar o algoritmo para colet\u00e1-los. A\u00ed come\u00e7am os problemas...</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;University News&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id=\"cabecalho\"&gt;\n        &lt;ul&gt;\n            &lt;li&gt;&lt;a href=\"home.html\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"ensino.html\"&gt;Ensino&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"pesquisa.html\"&gt;Pesquisa&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"extensao.html\"&gt;Extens\u00e3o&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n\n    &lt;/div&gt;\n    &lt;div id=\"conteudo\"&gt;\n        &lt;div id=\"secao_academico\"&gt;\n            &lt;h1&gt;Informa\u00e7\u00f5es Acad\u00eamicas&lt;/h1&gt;\n            &lt;div id=\"art1\"&gt;\n                &lt;h2&gt;Ensino Remoto&lt;/h2&gt;\n                &lt;p&gt;O ensino remoto ...&lt;/p&gt;\n\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n        &lt;div id=\"secao_processo_seletivo\"&gt;\n            &lt;h1&gt;Processo Seletivo&lt;/h1&gt;\n            &lt;div id=\"art2\"&gt;\n                &lt;h2&gt;Ingresso 2022/1&lt;/h2&gt;\n                &lt;p&gt;O processo seletivo 2022/1 ...&lt;/p&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n    &lt;/div&gt;\n    &lt;div id=\"rodape\"&gt;\n        &lt;address&gt;\n            &lt;small&gt;Av. Brasil Leste, 124&lt;/small&gt;\n            &lt;small&gt;CEP:99999-000&lt;/small&gt;\n        &lt;/address&gt;\n    &lt;/div&gt;\n\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <p>Quando utilizamos <code>tags</code> gen\u00e9ricas para representar conte\u00fado, precisamos adicionar alguma informa\u00e7\u00e3o em seus atributos para que possamos (n\u00f3s, humanos) diferenciar seu conte\u00fado das demais. Ocorre que o sentido que atribu\u00edmos a partir destas informa\u00e7\u00f5es adicionais n\u00e3o \u00e9 expl\u00edcito, pois dependente da interpreta\u00e7\u00e3o do contexto. Esta sem\u00e2ntica n\u00e3o \u00e9 precisa, formal. Nada impede que o desenvolvedor atribua ao <code>id</code> de uma <code>&lt;div&gt;</code> o valor xyz01, com vistas a identificar um artigo. Qual software poderia facilmente deduzir o significado contextual desta informa\u00e7\u00e3o?</p> <p>Em raz\u00e3o destas dificuldades de representa\u00e7\u00e3o de tipos de conte\u00fado por meio de <code>tags</code> gen\u00e9ricas, o HTML5 trouxe um conjunto de novas <code>tags</code>, v\u00e1rias delas voltadas \u00e0 sem\u00e2ntica de conte\u00fado. Vejamos algumas:</p> <ul> <li><code>&lt;article&gt;</code>: Representa um trecho de conte\u00fado independente, autocontido, que pode ser distribu\u00eddo sem o restante da p\u00e1gina.</li> <li><code>&lt;section&gt;</code>: Indica uma se\u00e7\u00e3o gen\u00e9rica de conte\u00fado.</li> <li><code>&lt;aside&gt;</code>: Se\u00e7\u00e3o de conte\u00fado tangencialmente relacionado ao seu entorno, o qual poderia ser removido sem representar uma perda significativa para a compreens\u00e3o.</li> <li><code>&lt;footer&gt;</code>: Utilizado para rodap\u00e9 de se\u00e7\u00f5es, para registro de informa\u00e7\u00f5es de direitos autorais, autoria e links relacionados.</li> <li><code>&lt;header&gt;</code>: Conte\u00fado introdut\u00f3rio, cabe\u00e7alho, recursos iniciais de navega\u00e7\u00e3o.</li> <li><code>&lt;nav&gt;</code>: Segmento do documento reservado para navega\u00e7\u00e3o.</li> <li><code>&lt;main&gt;</code>: Especifica o trecho do documento que cont\u00e9m o conte\u00fado principal.</li> </ul> <p>Com estas novas tags \u00e9 poss\u00edvel interpretar o significado dos trechos de conte\u00fado de forma inequ\u00edvoca. Vamos refazer nossa p\u00e1gina, agora aplicando as <code>tags</code> descritas ao inv\u00e9s de <code>&lt;div&gt;</code>s, para demonstrar a diferen\u00e7a.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;University News&lt;/title&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"home.html\"&gt;Home&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"ensino.html\"&gt;Ensino&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"pesquisa.html\"&gt;Pesquisa&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"extensao.html\"&gt;Extens\u00e3o&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section&gt;\n            &lt;header&gt;\n                &lt;h1&gt;Informa\u00e7\u00f5es Acad\u00eamicas&lt;/h1&gt;\n            &lt;/header&gt;\n            &lt;article&gt;\n                &lt;h2&gt;Ensino Remoto&lt;/h2&gt;\n                &lt;p&gt;O ensino remoto ...&lt;/p&gt;\n\n            &lt;/article&gt;\n\n        &lt;/section&gt;\n        &lt;section&gt;\n            &lt;header&gt;\n                &lt;h1&gt;Processo Seletivo&lt;/h1&gt;\n            &lt;/header&gt;\n            &lt;article&gt;\n                &lt;h2&gt;Ingresso 2022/1&lt;/h2&gt;\n                &lt;p&gt;O processo seletivo 2022/1 ...&lt;/p&gt;\n            &lt;/article&gt;\n        &lt;/section&gt;\n\n    &lt;/main&gt;\n    &lt;footer&gt;\n        &lt;address&gt;\n            &lt;small&gt;Av. Brasil Leste, 124&lt;/small&gt;\n            &lt;small&gt;CEP:99999-000&lt;/small&gt;\n        &lt;/address&gt;\n    &lt;/footer&gt;\n\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> <p>Agora \u00e9 natural perceber o que significam os segmentos de conte\u00fado, tanto para n\u00f3s, humanos, quando para softwares que interpretam o documento, como os navegadores. E tudo isso por conta da tag utilizada, que possui sem\u00e2ntica (significado) espec\u00edfico.</p> <p>Outro ponto importante refere-se \u00e0 rela\u00e7\u00e3o entre sem\u00e2ntica e apresenta\u00e7\u00e3o. O resultado visual de uma p\u00e1gina n\u00e3o tem rela\u00e7\u00e3o com as tags utilizadas, mas com as folhas de estilo aplicadas. Isso apenas refor\u00e7a a import\u00e2ncia de utilizar o HTML5 somente para estruturar o conte\u00fado, conferindo o significado correto a cada trecho por meio da aplica\u00e7\u00e3o da tag adequada. Logo, a imagem abaixo, embora exemplificando o posicionamento t\u00edpico dos elementos de sem\u00e2ntica de conte\u00fado, n\u00e3o implica em qualquer posicionamento efetivo aplicado pelo navegador.</p> <p> Fonte: Vlado Pavlik <sup>1</sup></p> <ol> <li> <p>Vlado Pavlik. Semantic html: what it is and how to use it correctly. 2022. URL: https://www.semrush.com/blog/semantic-html5-guide/.\u00a0\u21a9\u21a9</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/exercicios/e1-tags-semantics-listas/","title":"HTML5 - Exerc\u00edcio 1: Fundamentos, tags sem\u00e2nticas e listas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/exercicios/e1-tags-semantics-listas/#objetivos","title":"Objetivos","text":"<p>Aplicar tags sem\u00e2nticas e listas na elabora\u00e7\u00e3o de uma p\u00e1gina de or\u00e7amento de presta\u00e7\u00e3o de servi\u00e7o.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/exercicios/e1-tags-semantics-listas/#instrucoes","title":"Instru\u00e7\u00f5es","text":"<ul> <li>Crie um arquivo HTML chamado <code>orcamento-prestacao-servicos.html</code>.</li> <li>Use as tags sem\u00e2nticas apropriadas para estruturar o documento.</li> <li>O t\u00edtulo do documento deve ser <code>Or\u00e7amento de Presta\u00e7\u00e3o de Servi\u00e7os de Desenvolvimento de P\u00e1gina Web</code>.</li> <li>Seu or\u00e7amento dever\u00e1 ter o conte\u00fado a seguir:</li> </ul> <p>Conte\u00fado</p> <pre><code>**Cliente:** Empresa XYZ\n\n**Descri\u00e7\u00e3o do Projeto:**\n\nA empresa XYZ deseja desenvolver uma p\u00e1gina web para promover seus produtos e servi\u00e7os. Eles desejam uma presen\u00e7a online profissional e moderna, que reflita a identidade da marca e forne\u00e7a uma experi\u00eancia atraente para os visitantes.\n\n**Escopo do Projeto:**\n\n- Desenvolvimento de um site responsivo com design personalizado\n- Integra\u00e7\u00e3o de at\u00e9 10 p\u00e1ginas de conte\u00fado, incluindo p\u00e1gina inicial, p\u00e1ginas de produtos/servi\u00e7os, sobre n\u00f3s, contato, etc.\n- Implementa\u00e7\u00e3o de formul\u00e1rio de contato\n- Integra\u00e7\u00e3o de redes sociais\n- Otimiza\u00e7\u00e3o para mecanismos de busca (SEO)\n- Integra\u00e7\u00e3o de Google Analytics para an\u00e1lise de tr\u00e1fego\n- Suporte para at\u00e9 2 idiomas\n- Garantia de compatibilidade com os principais navegadores (Chrome, Firefox, Safari, Edge)\n- Treinamento b\u00e1sico para equipe do cliente sobre como atualizar e gerenciar o conte\u00fado do site\n\n**Detalhes do Or\u00e7amento:**\n\n1. **Desenvolvimento e Design Personalizado:** R$ 2000,00\n2. **Integra\u00e7\u00e3o de Conte\u00fado (at\u00e9 10 p\u00e1ginas):** R$ 500,00\n3. **Formul\u00e1rio de Contato:** R$ 200,00\n4. **Integra\u00e7\u00e3o de Redes Sociais:** R$ 150,00\n5. **Otimiza\u00e7\u00e3o para Mecanismos de Busca (SEO):** R$ 300,00\n6. **Integra\u00e7\u00e3o do Google Analytics:** R$ 150,00\n7. **Suporte para M\u00faltiplos Idiomas:** R$ 400,00\n8. **Testes de Compatibilidade com Navegadores:** R$ 250,00\n9. **Treinamento B\u00e1sico:** R$ 200,00\n\n**Total:**\n\nO valor total do projeto ser\u00e1 de R$ 4150,00.\n\n**Condi\u00e7\u00f5es de Pagamento:**\n\n- **50%** do valor total no in\u00edcio do projeto\n- **25%** ap\u00f3s a conclus\u00e3o do desenvolvimento e design\n- **25%** ap\u00f3s a entrega final e treinamento\n\n*Este or\u00e7amento \u00e9 baseado nas informa\u00e7\u00f5es fornecidas e est\u00e1 sujeito a ajustes conforme o escopo do projeto evolui. Entre em contato para discutir qualquer altera\u00e7\u00e3o ou esclarecimento adicional necess\u00e1rio.*\n</code></pre>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web"]},{"location":"web/html5/exercicios/e2-semantica-texto-links-imagens/","title":"HTML5 - Exerc\u00edcio 2: Tags sem\u00e2nticas, hiperlinks e imagens","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Sem\u00e2ntica de texto, hiperlinks, imagens"]},{"location":"web/html5/exercicios/e2-semantica-texto-links-imagens/#objetivos","title":"Objetivos","text":"<p>Aplicar as tags de sem\u00e2ntica de texto, hiperlinks e imagens na constru\u00e7\u00e3o de um documento HTML5.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Sem\u00e2ntica de texto, hiperlinks, imagens"]},{"location":"web/html5/exercicios/e2-semantica-texto-links-imagens/#instrucoes","title":"Instru\u00e7\u00f5es","text":"<p>Neste exerc\u00edcio, voc\u00ea vai criar uma p\u00e1gina para uma revista online fict\u00edcia, utilizando tags sem\u00e2nticas do HTML5 para estruturar o conte\u00fado da revista, incluindo artigos e imagens. Embora o assunto sugerido seja games, voc\u00ea tem liberdade para escolher qualquer outro que interesse mais a voc\u00ea. Vamos aos passos:</p> <ol> <li>Crie um arquivo HTML chamado <code>revista_online.html</code>.</li> <li>Dentro do arquivo HTML, comece com a estrutura b\u00e1sica que todo arquivo HTML5 deve conter.</li> <li>Em <code>&lt;body&gt;</code>, adicione um menu de navega\u00e7\u00e3o (<code>nav</code>). Este menu dever\u00e1 ter um hiperlink para cada artigo que voc\u00ea far\u00e1 a cria\u00e7\u00e3o na sequ\u00eancia.</li> <li>Ap\u00f3s seu menu, adicione um <code>&lt;header&gt;</code> com um t\u00edtulo para a revista e uma breve descri\u00e7\u00e3o sobre a mesma.</li> <li>Adicione duas ou mais se\u00e7\u00f5es (<code>&lt;section&gt;</code>) de conte\u00fado. Cada <code>&lt;section&gt;</code> deve conter um t\u00edtulo (<code>&lt;h2&gt;</code>) e um par\u00e1grafo que a descreve.</li> <li> <p>Em seguida, crie v\u00e1rios <code>&lt;article&gt;</code> para os artigos sua revista. Cada <code>&lt;article&gt;</code> deve conter um t\u00edtulo (<code>&lt;h2&gt;</code>), um ou mais par\u00e1grafos de introdu\u00e7\u00e3o ao artigo e uma imagem relacionada. Os artigos devem estar dentro de suas respectivas se\u00e7\u00f5es.</p> </li> <li> <p>Por fim, adicione um <code>&lt;footer&gt;</code> para informa\u00e7\u00f5es adicionais, como direitos autorais, informa\u00e7\u00f5es de contato, etc.</p> </li> </ol>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Sem\u00e2ntica de texto, hiperlinks, imagens"]},{"location":"web/html5/exercicios/e3-formularios/","title":"HTML5 - Exerc\u00edcio 3: Formul\u00e1rios","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Formu\u00e1rios"]},{"location":"web/html5/exercicios/e3-formularios/#objetivos","title":"Objetivos","text":"<p>Consolidar o conhecimento sobre formul\u00e1rios. Aplicar as tags para coletar dados do usu\u00e1rio conforme a natureza da informa\u00e7\u00e3o solicitada.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Formu\u00e1rios"]},{"location":"web/html5/exercicios/e3-formularios/#instrucoes","title":"Instru\u00e7\u00f5es","text":"<p>Desenvolva um formul\u00e1rio de inscri\u00e7\u00e3o para uma vaga de emprego fict\u00edcia. Seu formul\u00e1rio dever\u00e1 incluir:</p> <p>Informa\u00e7\u00f5es Pessoais:</p> <ul> <li>Nome completo (campo de texto)</li> <li>Data de Nascimento (campo de data)</li> <li>G\u00eanero (op\u00e7\u00e3o de sele\u00e7\u00e3o entre masculino, feminino e outro)</li> <li>Endere\u00e7o de e-mail (campo de e-mail)</li> </ul> <p>Experi\u00eancia Profissional:</p> <ul> <li>\u00daltimo cargo ocupado (campo de texto)</li> <li>Empresa anterior (campo de texto)</li> <li>Anos de experi\u00eancia (campo de n\u00famero)</li> <li>\u00c1reas de especializa\u00e7\u00e3o (caixas de sele\u00e7\u00e3o para escolher uma ou mais op\u00e7\u00f5es entre tecnologia, marketing, finan\u00e7as, etc.)</li> </ul> <p>Educa\u00e7\u00e3o:</p> <ul> <li>N\u00edvel de escolaridade (op\u00e7\u00e3o de sele\u00e7\u00e3o entre ensino fundamental, m\u00e9dio, t\u00e9cnico, gradua\u00e7\u00e3o, p\u00f3s-gradua\u00e7\u00e3o)</li> <li>Institui\u00e7\u00e3o de ensino (campo de texto)</li> <li>Curso (campo de texto)</li> <li>Ano de conclus\u00e3o (campo de texto)</li> </ul> <p>Anexo de Documentos:</p> <ul> <li>Curr\u00edculo (campo de upload de arquivo)</li> <li>Carta de apresenta\u00e7\u00e3o (campo de upload de arquivo)</li> <li>Fotografia recente (campo de upload de arquivo)</li> </ul> <p>Motiva\u00e7\u00e3o e perspectivas</p> <ul> <li>Por que quero este emprego? (campo \u00e1rea de texto, com 20 linhas e 50 colunas iniciais)</li> <li>Sal\u00e1rio almejado (slider entre R$ 1000 e R$ 5000)</li> </ul> <p>Confirma\u00e7\u00e3o:</p> <ul> <li>Checkbox para confirmar que todas as informa\u00e7\u00f5es est\u00e3o corretas</li> <li>Bot\u00e3o para enviar o formul\u00e1rio</li> </ul> <p>Neste exerc\u00edcio, aproveite para aplicar estilos de CSS3 ao seu documento. Considere tamb\u00e9m que todos os campos s\u00e3o obrigat\u00f3rios.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Formu\u00e1rios"]},{"location":"web/html5/exercicios/e4-tabelas/","title":"HTML5 - Exerc\u00edcio 4: Tabelas","text":"","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Tabelas"]},{"location":"web/html5/exercicios/e4-tabelas/#objetivos","title":"Objetivos","text":"<p>Compreender as tags utilizadas na constru\u00e7\u00e3o de tabelas. Aplicar o conhecimento na constru\u00e7\u00e3o de uma tabela com base em requisitos.</p>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Tabelas"]},{"location":"web/html5/exercicios/e4-tabelas/#instrucoes","title":"Instru\u00e7\u00f5es","text":"<p>Desenvolva uma tabela de dados para exibir informa\u00e7\u00f5es sobre produtos de uma loja online. Sua tabela deve incluir:</p> <p>Cabe\u00e7alho da Tabela:</p> <ul> <li>Uma linha de cabe\u00e7alho com as seguintes colunas:</li> <li>Imagem do produto</li> <li>Nome do produto</li> <li>Pre\u00e7o</li> <li>Disponibilidade</li> <li>Avalia\u00e7\u00e3o</li> <li>A\u00e7\u00f5es</li> </ul> <p>Linhas de Dados:</p> <ul> <li>Pelo menos 5 linhas de dados para representar diferentes produtos fict\u00edcios.</li> </ul> <p>Estiliza\u00e7\u00e3o CSS3:</p> <ul> <li>Utilize CSS3 para estilizar a tabela e torn\u00e1-la visualmente atraente.</li> <li>Estilize o cabe\u00e7alho da tabela com cores de fundo e texto, fontes diferenciadas e bordas arredondadas.</li> <li>Altere o estilo das linhas alternadas para ter uma cor de fundo diferente para melhor legibilidade.</li> <li>Aplique estilos diferentes para as c\u00e9lulas de cada coluna, como alinhamento de texto, cores e tamanhos de fonte diferentes.</li> <li>Adicione efeitos de hover para destacar as linhas da tabela quando o mouse passa sobre elas.</li> </ul> <p>Responsividade:</p> <ul> <li>Torne a tabela responsiva para que seja exibida adequadamente em diferentes tamanhos de tela.</li> </ul>","tags":["Programa\u00e7\u00e3o","Linguagens de Programa\u00e7\u00e3o","Web","Tabelas"]}]}