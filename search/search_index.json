{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem-vindo! \u00b6 Este site foi especialmente desenvolvido para compartilhar conhecimento e dicas sobre Tecnologia da Informa\u00e7\u00e3o. Em especial, abordaremos temas das \u00e1reas de Programa\u00e7\u00e3o, Banco de Dados e Intelig\u00eancia Artifical. Este espa\u00e7o tamb\u00e9m ser\u00e1 utilizado para notas de aula das disciplinas que leciono, de modo que as atualiza\u00e7\u00f5es ser\u00e3o frequentes.","title":"Home"},{"location":"#bem-vindo","text":"Este site foi especialmente desenvolvido para compartilhar conhecimento e dicas sobre Tecnologia da Informa\u00e7\u00e3o. Em especial, abordaremos temas das \u00e1reas de Programa\u00e7\u00e3o, Banco de Dados e Intelig\u00eancia Artifical. Este espa\u00e7o tamb\u00e9m ser\u00e1 utilizado para notas de aula das disciplinas que leciono, de modo que as atualiza\u00e7\u00f5es ser\u00e3o frequentes.","title":"Bem-vindo!"},{"location":"about/","text":"Me chamo Diego A. Lusa . Sou Professor de Ensino B\u00e1sico, T\u00e9cnico e Tecnol\u00f3gico do IFRS - Campus Sert\u00e3o . Atuo em diferentes disciplinas da \u00e1rea de Tecnologia da Informa\u00e7\u00e3o, principalmente nas \u00e1reas de programa\u00e7\u00e3o e banco de dados. Tamb\u00e9m leciono disciplinas de inform\u00e1tica b\u00e1sica e l\u00f3gica de programa\u00e7\u00e3o. Este site foi especialmente desenvolvimento como um reposit\u00f3rio de conte\u00fado elaborado para as diferentes disciplinas em que atuo, servindo tamb\u00e9m ao objetivo de compartilhar conhecimento e experi\u00eancias com todos os interessados. Espero que este conte\u00fado lhe seja \u00fatil! Cordiais sauda\u00e7\u00f5es ;)","title":"Sobre"},{"location":"banco-dados/basic/","text":"Do que iremos falar \u00b6 Quando falamos em computadores e softwares, somos inevitavelmente remetidos a dados digitais. Praticamente todos os servi\u00e7os que utilizamos, de alguma forma, dependem de dados para operar. Tais dados representam entradas e sa\u00eddas e, boa parte do tempo, precisam estar armazenados de forma persistente. Mas afinal, voc\u00ea sabe como estes dados s\u00e3o armazenados? Ser\u00e1 que na hist\u00f3ria da computa\u00e7\u00e3o o armazenamento de dados sempre foi imprescind\u00edvel? E, para n\u00e3o esquecer, o que entendemos como dados? Para responder a estas e outras perguntas, siga comigo nos pr\u00f3ximos cap\u00edtulos ;) Dados, Metadados e Informa\u00e7\u00e3o \u00b6 \u00c9 importante diferenciarmos o termo dados de metadados desde o princ\u00edpio da nossa jornada. Deste ponto em diante, quando voc\u00ea encontrar a palavra dados , estamos nos referindo a um meio de representa\u00e7\u00e3o de fatos do mundo em formato digital. Os dados s\u00e3o tanto uma interpreta\u00e7\u00e3o dos objetos que representam quanto um objeto a ser interpretado. E para sua interpreta\u00e7\u00e3o precisamos de um contexto, um sistema de representa\u00e7\u00e3o dos dados, ao que chamamos de metadados . Vamos imaginar o n\u00famero 14084218014. Voc\u00ea saberia o que ele representa? Sem um contexto, possivelmente n\u00e3o. Agora se eu disser que estamos falando do CPF de pacientes internados em determinado hospital? Bem, agora voc\u00ea reconhece o significado do n\u00famero 14084218014 (nosso dado) a partir dos metadados que fornecemos. Um pouco de hist\u00f3ria \u00b6 Sabemos que o computador \u00e9 fruto da industria de guerra e que seus primeiros usos foram para fins militares. Nesse per\u00edodo, em que os fundamentos da computa\u00e7\u00e3o estavam sendo constru\u00eddos, os programas desenvolvidos tinham como principal objetivo a execu\u00e7\u00e3o de c\u00e1lculos complexos. N\u00e3o haviam interfaces gr\u00e1ficas, sequer telas, para exibir os resultados. No caso do ENIAC , primeiro computador digital eletr\u00f4nico, a resposta era gerada a partir de uma sequ\u00eancia de l\u00e2mpadas. Na medida que os computadores receberam novas tarefas, passando a ser utilizados em universidades, ind\u00fastrias, presta\u00e7\u00e3o de servi\u00e7os e, \u00e9 claro, em nossos lares, a necessidade pelo armazenamento de dados se ampliou significativamente. Partimos ent\u00e3o de um contexto onde os dados processados pelos softwares eram inputados a cada execu\u00e7\u00e3o por operadores humanos e cuja resposta final servia ao momento ( n\u00e3o sendo armazenada digitalmente para usos posteriores), para um cen\u00e1rio onde os dados digitais representam ativos de imenso valor para indiv\u00edduos e organiza\u00e7\u00f5es. Os fatores que nos levaram a esta revolu\u00e7\u00e3o digital podem ser resumidos a tr\u00eas: demanda por informa\u00e7\u00e3o, hardware de armazenamento com grande capacidade e baixo custo e o desenvolvimento de sistemas gerenciadores de banco de dados (SGBD) , que s\u00e3o o tema do nosso estudo. Os sistemas gerenciadores de banco de dados mant\u00e9m sob sua guarda diversas bases de dados ( databases ) pelo tempo que for necess\u00e1rio. Cada database corresponde a um conjunto de dados logicamente organizado, dispon\u00edvel para consultas e atualiza\u00e7\u00f5es aos interessados. De momento pode nos parecer que as funcionalidades de um SGBD s\u00e3o muito similares \u00e0s do pr\u00f3prio sistema de arquivos, contudo \u00e9 preciso observar alguns detalhes. Segundo Garcia-Molina et al (2008) , um SGBD deve: Permitir que usu\u00e1rios criem novas bases e manipulem seus schemas por meio de uma linguagem espec\u00edfica de defini\u00e7\u00e3o de dados; Permitir que usu\u00e1rios consultem e modifiquem dados por meio de uma linguagem espec\u00edfica de manipula\u00e7\u00e3o de dados; Suportar o armazenamento de grandes volumes de dados por longo tempo, sempre mantendo a efici\u00eancia em seu acesso; Garantir a durabilidade , garantindo que falhas e eventos inesperados n\u00e3o compromentam os dados; Garantir o isolamento e a atomicidade na manipula\u00e7\u00e3o dos dados. Nota : Conceitos como linguagem de defini\u00e7\u00e3o de dados , linguagem de manipula\u00e7\u00e3o de dados , durabilidade , atomicidade e isolamento ser\u00e3o aprofundados em se\u00e7\u00f5es posteriores. {: .notice--info} Perceba que sistemas de arquivos n\u00e3o disp\u00f5em de linguagens de consulta e manipula\u00e7\u00e3o de dados, tampouco permitem definir o schema dos dados de maneira aprimorada. Quest\u00f5es como isolamento e atomicidade n\u00e3o s\u00e3o plenamente atendidas, bem como a durabilidade em seu sentido mais estrito. H\u00e1 tamb\u00e9m a quest\u00e3o do acesso pouco eficiente a dados cuja localiza\u00e7\u00e3o \u00e9 desconhecida. Para facilitara compreens\u00e3o das diferen\u00e7as entre SGBD e sistema de arquivos, devemos ter em mente que o cen\u00e1rio de uso deve considerar dados compostos por pequenos fragmentos constantemente atualizados e consultados. Em tal situa\u00e7\u00e3o, o uso do sistema de arquivos em detrimento de um SGBD pode ocasionar os seguintes efeitos: Redund\u00e2ncia e Inconsist\u00eancia \u00b6 Redund\u00e2ncia ocorre quando uma mesma informa\u00e7\u00e3o \u00e9 representada diversas vezes na base de dados. Imagine, por exemplo, os dados de seu endere\u00e7o \"espalhados\" em diversas c\u00f3pias no site de e-commerce que voc\u00ea costuma fazer compras. Seria um caso de redund\u00e2ncia. Ter dados redundantes n\u00e3o implica, necessariamente, em problemas. \u00c9 s\u00f3 pensar na recomenda\u00e7\u00e3o que ouvimos a todo o momento: \"Fa\u00e7a c\u00f3pias de seguran\u00e7a de seus arquivos!\". Redund\u00e2ncia \u00e9 o fundamento do backup, e fazer backup \u00e9 bom ;) O problema com dados redundantes est\u00e1 na sua gest\u00e3o. Se existem c\u00f3pias de uma mesma informa\u00e7\u00e3o, \u00e9 preciso mant\u00ea-las sob controle, de modo que todas representem o mesmo fato do mundo. Ou seja, precisamos manter sincronizadas as diferentes c\u00f3pias existentes. Pense comigo: se no site de e-commerce haviam diferentes c\u00f3pias de seu endere\u00e7o, mas apenas uma delas recebeu a atualiza\u00e7\u00e3o do seu endere\u00e7o, quais problemas poderiam ocorrer? Talvez um deles seja voc\u00ea n\u00e3o receber o produto que comprou :[ Dificuldade de Acesso \u00b6 Problemas de Integridade \u00b6 Dificuldades de Compartilhamento \u00b6 Problemas de Atomicidade \u00b6 Problemas de Isolamento \u00b6 Problemas de Seguran\u00e7a \u00b6","title":"Fundamentos de Sistemas de Banco de Dados"},{"location":"banco-dados/basic/#do-que-iremos-falar","text":"Quando falamos em computadores e softwares, somos inevitavelmente remetidos a dados digitais. Praticamente todos os servi\u00e7os que utilizamos, de alguma forma, dependem de dados para operar. Tais dados representam entradas e sa\u00eddas e, boa parte do tempo, precisam estar armazenados de forma persistente. Mas afinal, voc\u00ea sabe como estes dados s\u00e3o armazenados? Ser\u00e1 que na hist\u00f3ria da computa\u00e7\u00e3o o armazenamento de dados sempre foi imprescind\u00edvel? E, para n\u00e3o esquecer, o que entendemos como dados? Para responder a estas e outras perguntas, siga comigo nos pr\u00f3ximos cap\u00edtulos ;)","title":"Do que iremos falar"},{"location":"banco-dados/basic/#dados-metadados-e-informacao","text":"\u00c9 importante diferenciarmos o termo dados de metadados desde o princ\u00edpio da nossa jornada. Deste ponto em diante, quando voc\u00ea encontrar a palavra dados , estamos nos referindo a um meio de representa\u00e7\u00e3o de fatos do mundo em formato digital. Os dados s\u00e3o tanto uma interpreta\u00e7\u00e3o dos objetos que representam quanto um objeto a ser interpretado. E para sua interpreta\u00e7\u00e3o precisamos de um contexto, um sistema de representa\u00e7\u00e3o dos dados, ao que chamamos de metadados . Vamos imaginar o n\u00famero 14084218014. Voc\u00ea saberia o que ele representa? Sem um contexto, possivelmente n\u00e3o. Agora se eu disser que estamos falando do CPF de pacientes internados em determinado hospital? Bem, agora voc\u00ea reconhece o significado do n\u00famero 14084218014 (nosso dado) a partir dos metadados que fornecemos.","title":"Dados, Metadados e Informa\u00e7\u00e3o"},{"location":"banco-dados/basic/#um-pouco-de-historia","text":"Sabemos que o computador \u00e9 fruto da industria de guerra e que seus primeiros usos foram para fins militares. Nesse per\u00edodo, em que os fundamentos da computa\u00e7\u00e3o estavam sendo constru\u00eddos, os programas desenvolvidos tinham como principal objetivo a execu\u00e7\u00e3o de c\u00e1lculos complexos. N\u00e3o haviam interfaces gr\u00e1ficas, sequer telas, para exibir os resultados. No caso do ENIAC , primeiro computador digital eletr\u00f4nico, a resposta era gerada a partir de uma sequ\u00eancia de l\u00e2mpadas. Na medida que os computadores receberam novas tarefas, passando a ser utilizados em universidades, ind\u00fastrias, presta\u00e7\u00e3o de servi\u00e7os e, \u00e9 claro, em nossos lares, a necessidade pelo armazenamento de dados se ampliou significativamente. Partimos ent\u00e3o de um contexto onde os dados processados pelos softwares eram inputados a cada execu\u00e7\u00e3o por operadores humanos e cuja resposta final servia ao momento ( n\u00e3o sendo armazenada digitalmente para usos posteriores), para um cen\u00e1rio onde os dados digitais representam ativos de imenso valor para indiv\u00edduos e organiza\u00e7\u00f5es. Os fatores que nos levaram a esta revolu\u00e7\u00e3o digital podem ser resumidos a tr\u00eas: demanda por informa\u00e7\u00e3o, hardware de armazenamento com grande capacidade e baixo custo e o desenvolvimento de sistemas gerenciadores de banco de dados (SGBD) , que s\u00e3o o tema do nosso estudo. Os sistemas gerenciadores de banco de dados mant\u00e9m sob sua guarda diversas bases de dados ( databases ) pelo tempo que for necess\u00e1rio. Cada database corresponde a um conjunto de dados logicamente organizado, dispon\u00edvel para consultas e atualiza\u00e7\u00f5es aos interessados. De momento pode nos parecer que as funcionalidades de um SGBD s\u00e3o muito similares \u00e0s do pr\u00f3prio sistema de arquivos, contudo \u00e9 preciso observar alguns detalhes. Segundo Garcia-Molina et al (2008) , um SGBD deve: Permitir que usu\u00e1rios criem novas bases e manipulem seus schemas por meio de uma linguagem espec\u00edfica de defini\u00e7\u00e3o de dados; Permitir que usu\u00e1rios consultem e modifiquem dados por meio de uma linguagem espec\u00edfica de manipula\u00e7\u00e3o de dados; Suportar o armazenamento de grandes volumes de dados por longo tempo, sempre mantendo a efici\u00eancia em seu acesso; Garantir a durabilidade , garantindo que falhas e eventos inesperados n\u00e3o compromentam os dados; Garantir o isolamento e a atomicidade na manipula\u00e7\u00e3o dos dados. Nota : Conceitos como linguagem de defini\u00e7\u00e3o de dados , linguagem de manipula\u00e7\u00e3o de dados , durabilidade , atomicidade e isolamento ser\u00e3o aprofundados em se\u00e7\u00f5es posteriores. {: .notice--info} Perceba que sistemas de arquivos n\u00e3o disp\u00f5em de linguagens de consulta e manipula\u00e7\u00e3o de dados, tampouco permitem definir o schema dos dados de maneira aprimorada. Quest\u00f5es como isolamento e atomicidade n\u00e3o s\u00e3o plenamente atendidas, bem como a durabilidade em seu sentido mais estrito. H\u00e1 tamb\u00e9m a quest\u00e3o do acesso pouco eficiente a dados cuja localiza\u00e7\u00e3o \u00e9 desconhecida. Para facilitara compreens\u00e3o das diferen\u00e7as entre SGBD e sistema de arquivos, devemos ter em mente que o cen\u00e1rio de uso deve considerar dados compostos por pequenos fragmentos constantemente atualizados e consultados. Em tal situa\u00e7\u00e3o, o uso do sistema de arquivos em detrimento de um SGBD pode ocasionar os seguintes efeitos:","title":"Um pouco de hist\u00f3ria"},{"location":"banco-dados/basic/#redundancia-e-inconsistencia","text":"Redund\u00e2ncia ocorre quando uma mesma informa\u00e7\u00e3o \u00e9 representada diversas vezes na base de dados. Imagine, por exemplo, os dados de seu endere\u00e7o \"espalhados\" em diversas c\u00f3pias no site de e-commerce que voc\u00ea costuma fazer compras. Seria um caso de redund\u00e2ncia. Ter dados redundantes n\u00e3o implica, necessariamente, em problemas. \u00c9 s\u00f3 pensar na recomenda\u00e7\u00e3o que ouvimos a todo o momento: \"Fa\u00e7a c\u00f3pias de seguran\u00e7a de seus arquivos!\". Redund\u00e2ncia \u00e9 o fundamento do backup, e fazer backup \u00e9 bom ;) O problema com dados redundantes est\u00e1 na sua gest\u00e3o. Se existem c\u00f3pias de uma mesma informa\u00e7\u00e3o, \u00e9 preciso mant\u00ea-las sob controle, de modo que todas representem o mesmo fato do mundo. Ou seja, precisamos manter sincronizadas as diferentes c\u00f3pias existentes. Pense comigo: se no site de e-commerce haviam diferentes c\u00f3pias de seu endere\u00e7o, mas apenas uma delas recebeu a atualiza\u00e7\u00e3o do seu endere\u00e7o, quais problemas poderiam ocorrer? Talvez um deles seja voc\u00ea n\u00e3o receber o produto que comprou :[","title":"Redund\u00e2ncia e Inconsist\u00eancia"},{"location":"banco-dados/basic/#dificuldade-de-acesso","text":"","title":"Dificuldade de Acesso"},{"location":"banco-dados/basic/#problemas-de-integridade","text":"","title":"Problemas de Integridade"},{"location":"banco-dados/basic/#dificuldades-de-compartilhamento","text":"","title":"Dificuldades de Compartilhamento"},{"location":"banco-dados/basic/#problemas-de-atomicidade","text":"","title":"Problemas de Atomicidade"},{"location":"banco-dados/basic/#problemas-de-isolamento","text":"","title":"Problemas de Isolamento"},{"location":"banco-dados/basic/#problemas-de-seguranca","text":"","title":"Problemas de Seguran\u00e7a"},{"location":"banco-dados/hospital_db/","text":"Em nossos tutoriais, utilizaremos a base de dados sig_hospitalar_db como estudo de caso. Trata-se de uma base que mapeia o universo de discurso de um hospital fict\u00edcio. Logo temos tabelas armazenando dados de pacientes, acompanhantes, profissionais, interna\u00e7\u00f5es, medica\u00e7\u00f5es e procedimentos, todas de modo simplificado, com finalidade did\u00e1tica, apenas. Observe, portanto, que o foco est\u00e1 na estrutura da base e n\u00e3o propriamente na fidedignidade com o mapeamento de dados reais de ambientes hospitalares. Considerando que voc\u00ea j\u00e1 tenha realizado a instala\u00e7\u00e3o do servidor PostgreSQL em sua m\u00e1quina, passaremos ao passo seguinte, no qual a base de dados sig_hospitalar_db ser\u00e1 criada. Tal opera\u00e7\u00e3o pode ser realizada via psql ou por meio da IDE de sua prefer\u00eancia ( PgAdmin4 , por exemplo). Caso opte pelo psql , utilize o comando create database sig_hospitalar_db; no terminal. Agora, conectado \u00e0 base sig_hospitalar_db , proceda com a execu\u00e7\u00e3o dos comandos abaixo na \u00edntegra. begin ; create domain t_nome as varchar ( 200 ) not null check ( value ~ '[a-zA-z]+' ); create table bairro ( id serial not null primary key , nome t_nome , cidade_id integer not null ); insert into bairro values ( 1 , 'Centro' , 1 ), ( 2 , 'Sol Nascente' , 1 ), ( 3 , 'S\u00e3o Paulo' , 1 ), ( 4 , 'Vera Cruz' , 2 ), ( 5 , 'Centro' , 2 ), ( 6 , 'S\u00e3o Cristov\u00e3o' , 2 ), ( 7 , 'Centro' , 3 ), ( 8 , 'Tr\u00eas Vendas' , 3 ), ( 9 , 'F\u00e1tima' , 3 ); create table cidade ( id serial not null primary key , nome t_nome ); insert into cidade values ( 1 , 'Tapejara' ), ( 2 , 'Passo Fundo' ), ( 3 , 'Erechim' ); create domain t_cnpj as char ( 14 ) check ( value ~ '^[0-9]{14}$' ); create domain t_cpf as char ( 11 ) check ( value ~ '^[0-9]{11}$' ); create table convenio ( id serial not null primary key , razao_social t_nome , cnpj t_cnpj not null unique , descricao text ); comment on table convenio is 'Armazena os diferentes planos de sa\u00fade utilizados pelos pacientes em suas interna\u00e7\u00f5es' ; insert into convenio values ( 1 , 'UNIMED' , '16034061000100' , null ), ( 2 , 'IPE Sa\u00fade' , '40355755000123' , null ), ( 3 , 'Cassi' , '63364447000160' , null ); create table diagnostico ( id serial not null primary key , cid char ( 4 ) not null unique , nome t_nome , descricao text ); comment on table diagnostico is 'Armazena dados acerca dos diagn\u00f3sticos m\u00e9dicos' ; comment on column diagnostico . cid is 'Classifica\u00e7\u00e3o Internacional de Doen\u00e7as' ; insert into diagnostico ( id , cid , nome ) VALUES ( 1 , 'A000' , 'C\u00f3lera devida a Vibrio cholerae 01, bi\u00f3tipo cholerae' ), ( 2 , 'A009' , 'C\u00f3lera n\u00e3o especificada' ), ( 3 , 'B000' , 'Eczema herp\u00e9tico' ), ( 4 , 'B008' , 'Outras formas de infec\u00e7\u00e3o devida ao v\u00edrus do herpes' ); create table diagnostico_prescricao ( prescricao_id integer not null , diagnostico_id integer not null , primary key ( prescricao_id , diagnostico_id ) ); comment on table diagnostico_prescricao is 'Armazena os diagn\u00f3sticos da prescri\u00e7\u00e3o' ; insert into diagnostico_prescricao values ( 1 , 2 ), ( 2 , 1 ), ( 3 , 4 ), ( 4 , 4 ); create table enfermeiro ( pessoa_id integer not null primary key , coren char ( 7 ) not null check ( coren ~ '^[0-9]{7}$' ) ); comment on column enfermeiro . coren is 'C\u00f3digo de registro do enfermeiro no Conselho Regional de Enfermagem' ; insert into enfermeiro values ( 1 , '0123654' ), ( 2 , '0251687' ); create table especialidade ( id serial not null primary key , nome t_nome ); comment on table especialidade is 'Armazena as especialidades m\u00e9dicas, como cardiologia, pediatria, etc.' ; insert into especialidade values ( 1 , 'Cardiologia' ), ( 2 , 'Pediatria' ), ( 3 , 'Otorinolaringologia' ), ( 4 , 'Ortopedia' ); create table evolucao_internacao ( internacao_id integer not null , data_hora timestamp not null default CURRENT_TIMESTAMP , evolucao text not null , enfermeiro_id integer not null , primary key ( internacao_id , data_hora ) ); comment on table evolucao_internacao is 'Evolu\u00e7\u00e3o \u00e9 a descri\u00e7\u00e3o do estado do paciente. Os enfermeiros fazem v\u00e1rias evolu\u00e7\u00f5es do paciente durante a interna\u00e7\u00e3o' ; insert into evolucao_internacao values ( 1 , default , 'Pariatur tempor nulla aliquip elit est proident consequat deserunt incididunt et minim. Aliquip consequat cupidatat do proident aliquip aliquip magna sit consequat anim aliqua proident. Amet mollit in consectetur ut. Sint laborum elit occaecat laboris. Consequat veniam dolor proident fugiat. Commodo qui aliqua anim veniam non velit non reprehenderit consequat dolor voluptate cillum. Tempor et qui tempor consequat. Sunt labore veniam non duis eiusmod laboris voluptate sit dolore nisi. Incididunt eiusmod nostrud eu consequat velit ex eu adipisicing tempor tempor occaecat anim. Ex commodo nisi ullamco ex officia consectetur eu laborum. Lorem magna Lorem aliqua ullamco adipisicing sunt consectetur reprehenderit minim dolore voluptate qui quis. Voluptate anim fugiat consectetur irure commodo aliquip nisi adipisicing. Cillum adipisicing nostrud sit anim mollit aliqua do deserunt exercitation cupidatat. Officia dolor duis incididunt minim velit cillum et cillum adipisicing esse Lorem labore sunt reprehenderit. Nisi fugiat incididunt culpa dolore ex ullamco sit et velit est sit ut. Do sint sint magna aliqua veniam sint aute velit adipisicing aute tempor sint aliquip irure. Non sunt consequat eiusmod deserunt anim. Nostrud tempor sint eiusmod pariatur officia aliqua reprehenderit. Ex reprehenderit enim Lorem proident id eiusmod id eiusmod est minim. Sunt sint et reprehenderit occaecat do aute amet. Sit do consectetur in tempor deserunt sunt velit mollit do proident sunt ex. Excepteur aliqua fugiat ut tempor dolore nostrud consequat reprehenderit anim quis consectetur nulla proident qui. Sit dolor Lorem proident laboris aute consequat irure cillum mollit nisi fugiat duis. Est dolore qui sunt quis voluptate magna esse sint occaecat. Occaecat voluptate nulla tempor veniam pariatur consectetur sunt non elit cupidatat deserunt reprehenderit elit laboris. Lorem duis officia sit sit voluptate ea dolore. Nostrud anim ea adipisicing cillum. Aute ipsum est dolor magna non. Consectetur aliqua esse reprehenderit qui aliquip do tempor irure. Amet est deserunt do in.' , 2 ); insert into evolucao_internacao values ( 2 , default , 'Pariatur tempor nulla aliquip elit est proident consequat deserunt incididunt et minim. Aliquip consequat cupidatat do proident aliquip aliquip magna sit consequat anim aliqua proident. Amet mollit in consectetur ut. Sint laborum elit occaecat laboris. Consequat veniam dolor proident fugiat. Commodo qui aliqua anim veniam non velit non reprehenderit consequat dolor voluptate cillum. Tempor et qui tempor consequat. Sunt labore veniam non duis eiusmod laboris voluptate sit dolore nisi. Incididunt eiusmod nostrud eu consequat velit ex eu adipisicing tempor tempor occaecat anim. Ex commodo nisi ullamco ex officia consectetur eu laborum. Lorem magna Lorem aliqua ullamco adipisicing sunt consectetur reprehenderit minim dolore voluptate qui quis. Voluptate anim fugiat consectetur irure commodo aliquip nisi adipisicing. Cillum adipisicing nostrud sit anim mollit aliqua do deserunt exercitation cupidatat. Officia dolor duis incididunt minim velit cillum et cillum adipisicing esse Lorem labore sunt reprehenderit. Nisi fugiat incididunt culpa dolore ex ullamco sit et velit est sit ut. Do sint sint magna aliqua veniam sint aute velit adipisicing aute tempor sint aliquip irure. Non sunt consequat eiusmod deserunt anim. Nostrud tempor sint eiusmod pariatur officia aliqua reprehenderit. Ex reprehenderit enim Lorem proident id eiusmod id eiusmod est minim. Sunt sint et reprehenderit occaecat do aute amet. Sit do consectetur in tempor deserunt sunt velit mollit do proident sunt ex. Excepteur aliqua fugiat ut tempor dolore nostrud consequat reprehenderit anim quis consectetur nulla proident qui. Sit dolor Lorem proident laboris aute consequat irure cillum mollit nisi fugiat duis. Est dolore qui sunt quis voluptate magna esse sint occaecat. Occaecat voluptate nulla tempor veniam pariatur consectetur sunt non elit cupidatat deserunt reprehenderit elit laboris. Lorem duis officia sit sit voluptate ea dolore. Nostrud anim ea adipisicing cillum. Aute ipsum est dolor magna non. Consectetur aliqua esse reprehenderit qui aliquip do tempor irure. Amet est deserunt do in.' , 1 ); insert into evolucao_internacao values ( 3 , default , 'Pariatur tempor nulla aliquip elit est proident consequat deserunt incididunt et minim. Aliquip consequat cupidatat do proident aliquip aliquip magna sit consequat anim aliqua proident. Amet mollit in consectetur ut. Sint laborum elit occaecat laboris. Consequat veniam dolor proident fugiat. Commodo qui aliqua anim veniam non velit non reprehenderit consequat dolor voluptate cillum. Tempor et qui tempor consequat. Sunt labore veniam non duis eiusmod laboris voluptate sit dolore nisi. Incididunt eiusmod nostrud eu consequat velit ex eu adipisicing tempor tempor occaecat anim. Ex commodo nisi ullamco ex officia consectetur eu laborum. Lorem magna Lorem aliqua ullamco adipisicing sunt consectetur reprehenderit minim dolore voluptate qui quis. Voluptate anim fugiat consectetur irure commodo aliquip nisi adipisicing. Cillum adipisicing nostrud sit anim mollit aliqua do deserunt exercitation cupidatat. Officia dolor duis incididunt minim velit cillum et cillum adipisicing esse Lorem labore sunt reprehenderit. Nisi fugiat incididunt culpa dolore ex ullamco sit et velit est sit ut. Do sint sint magna aliqua veniam sint aute velit adipisicing aute tempor sint aliquip irure. Non sunt consequat eiusmod deserunt anim. Nostrud tempor sint eiusmod pariatur officia aliqua reprehenderit. Ex reprehenderit enim Lorem proident id eiusmod id eiusmod est minim. Sunt sint et reprehenderit occaecat do aute amet. Sit do consectetur in tempor deserunt sunt velit mollit do proident sunt ex. Excepteur aliqua fugiat ut tempor dolore nostrud consequat reprehenderit anim quis consectetur nulla proident qui. Sit dolor Lorem proident laboris aute consequat irure cillum mollit nisi fugiat duis. Est dolore qui sunt quis voluptate magna esse sint occaecat. Occaecat voluptate nulla tempor veniam pariatur consectetur sunt non elit cupidatat deserunt reprehenderit elit laboris. Lorem duis officia sit sit voluptate ea dolore. Nostrud anim ea adipisicing cillum. Aute ipsum est dolor magna non. Consectetur aliqua esse reprehenderit qui aliquip do tempor irure. Amet est deserunt do in.' , 2 ); create table funcionario ( pessoa_id integer not null primary key , pis_pasep char ( 11 ) not null check ( pis_pasep ~ '^[0-9]{11}$' ) ); insert into funcionario values ( 1 , '83919800958' ), ( 2 , '84811096999' ), ( 3 , '31859934560' ), ( 4 , '12649826837' ), ( 5 , '94340833899' ); create table internacao ( id bigserial not null primary key , medico_id integer not null , leito_id integer not null , paciente_id integer not null , data_hora_internacao timestamp not null default CURRENT_TIMESTAMP , tipo_clinica char ( 1 ) not null default 'M' check ( tipo_clinica in ( 'M' , 'O' , 'P' , 'A' ) ), convenio_id integer not null , data_hora_alta timestamp , registrante_id integer not null , anamnese text not null ); comment on column internacao . tipo_clinica is 'M - M\u00e9dica, O - Obst\u00e9trica, C - Cir\u00fargica, P - Pedi\u00e1trica, A - Ambulat\u00f3rio ' ; comment on table internacao is 'Interna\u00e7\u00e3o \u00e9 o procedimento em que o paciente torna-se interno ao hospital para tratar de sua sa\u00fade' ; insert into internacao ( id , medico_id , leito_id , paciente_id , registrante_id , anamnese , convenio_id ) values ( 1 , 8 , 1 , 12 , 4 , 'Paciente queixou-se de dores abdominais intensas' , 1 ), ( 2 , 9 , 2 , 13 , 4 , 'Paciente apresenta febre de 39 graus' , 2 ), ( 3 , 10 , 2 , 12 , 4 , 'Paciente apresenta desequilibrio e s\u00edncopes frequentes' , 3 ), ( 4 , 11 , 3 , 14 , 4 , 'Paciente epis\u00f3dios de amn\u00e9sia e hipersonia ' , 3 ), ( 5 , 8 , 4 , 15 , 4 , 'Paciente queixou-se de dores lombares intensas' , 1 ); create table leito ( id serial not null primary key , codigo varchar ( 3 ) not null unique , quarto_id integer not null , descricao text ); insert into leito values ( 1 , 'A1' , 1 , NULL ), ( 2 , 'A2' , 1 , NULL ), ( 3 , 'A3' , 1 , NULL ), ( 4 , 'B1' , 2 , NULL ), ( 5 , 'B2' , 2 , NULL ), ( 6 , 'B3' , 2 , NULL ), ( 7 , 'C1' , 3 , NULL ), ( 8 , 'C2' , 3 , NULL ), ( 9 , 'C3' , 3 , NULL ), ( 10 , 'D1' , 4 , NULL ), ( 11 , 'D2' , 4 , NULL ), ( 12 , 'D3' , 4 , NULL ); create table quarto ( id serial not null primary key , nome varchar ( 20 ) not null unique , posto_id integer not null , tipo char ( 1 ) not null check ( tipo in ( 'P' , 'N' )), numero_banheiros smallint not null ); insert into quarto values ( 1 , 'A' , 1 , 'P' , 2 ), ( 2 , 'B' , 2 , 'P' , 1 ), ( 3 , 'C' , 3 , 'P' , 1 ), ( 4 , 'D' , 4 , 'P' , 3 ); create table material ( id serial not null primary key , nome t_nome , valor money not null , descricao text ) ; comment on table material is 'Itens n\u00e3o medicamentosos utilizados no hospital' ; insert into material values ( 1 , 'Esparadrapo' , 0 . 56 , null ), ( 2 , 'Micropore' , 1 . 5 , null ), ( 3 , 'Adesivo' , 2 . 5 , null ), ( 4 , 'Agulha para Sutura' , 3 . 50 , null ), ( 5 , 'Algod\u00e3o' , 2 . 89 , null ), ( 6 , 'Atadura' , 8 . 56 , null ), ( 7 , 'Curativos' , 15 . 69 , null ), ( 8 , 'Bolsa T\u00e9rmica' , 12 . 5 , null ), ( 9 , 'Coletores' , 40 , null ), ( 10 , 'Compressas' , 2 . 98 , null ); create table material_prescricao ( prescricao_id integer not null , material_id integer not null , data_hora_lancamento timestamp not null default current_timestamp , quantidade numeric ( 20 , 3 ) not null , primary key ( prescricao_id , material_id , data_hora_lancamento ) ); comment on table material_prescricao is 'Armazena os diferentes materiais usados na prescri\u00e7\u00e3o' ; insert into material_prescricao values ( 1 , 1 , default , 12 ), ( 1 , 5 , default , 6 ),( 1 , 10 , default , 5 ), ( 2 , 3 , default , 12 ), ( 2 , 6 , default , 6 ),( 2 , 9 , default , 5 ), ( 3 , 2 , default , 12 ), ( 3 , 7 , default , 6 ),( 3 , 8 , default , 5 ); create table medicamento ( id serial not null primary key , denominacao_generica varchar ( 200 ) not null , concentracao varchar ( 20 ) not null , forma_farmaceutica varchar ( 50 ) not null , descricao text ); insert into medicamento values ( 1 , 'cloreto de s\u00f3dio' , '3,4 mEq/mL (20%)' , 'solu\u00e7\u00e3o injet\u00e1vel' ), ( 2 , 'cloridrato de amiodarona' , '50 mg/mL' , 'solu\u00e7\u00e3o injet\u00e1vel' ), ( 3 , 'cloridrato de amiodarona' , '200 mg' , 'comprimido' ), ( 4 , 'cloridrato de clindamicina' , '150 mg' , 'c\u00e1psula' ), ( 5 , 'cloridrato de clomipramina' , '10 mg' , 'comprimido' ); create table medico ( pessoa_id integer not null primary key , crm char ( 6 ) not null check ( crm ~ '^[0-6]{6}' ) ); insert into medico values ( 8 , '000345' ),( 9 , '000346' ),( 10 , '000350' ),( 11 , '000351' ); create table medico_especialidade ( medico_id integer not null , especialidade_id integer not null , primary key ( medico_id , especialidade_id ) ); comment on table medico_especialidade is 'Relaciona as especialidades aos m\u00e9dicos' ; insert into medico_especialidade values ( 8 , 1 ),( 9 , 4 ),( 10 , 2 ),( 11 , 3 ); create table medicamento_prescricao ( prescricao_id integer not null , medicamento_id integer not null , data_hora_lancamento timestamp not null default CURRENT_TIMESTAMP , aprazamento varchar ( 100 ) not null , dosagem varchar ( 100 ) not null , primary key ( prescricao_id , medicamento_id , data_hora_lancamento ) ); comment on table medicamento_prescricao is 'Armazena os diferentes medicamentos usados na prescri\u00e7\u00e3o' ; insert into medicamento_prescricao values ( 1 , 3 , default , '6/6 horas' , '1 comprimido' ), ( 1 , 4 , default , '12/12 horas' , '1 capsula' ), ( 1 , 2 , default , '6/6 horas' , '10 ml' ); create table paciente ( pessoa_id integer not null primary key , responsavel_id integer not null , nome_mae t_nome , cartao_sus char ( 15 ) not null unique check ( cartao_sus ~ '^[0-9]{14}' ) ); insert into paciente values ( 12 , 16 , 'Fabiana Ana S\u00f4nia Corte Real' , '267584097280006' ), ( 13 , 17 , 'Marcela Ant\u00f4nia Liz Arag\u00e3o' , '147243223830007' ), ( 14 , 18 , 'Daiane Olivia Cristiane Novaes' , '223139799940002' ), ( 15 , 19 , 'Alana Rita Betina Brito' , '816428033820008' ); create table pessoa ( id serial not null primary key , nome t_nome , telefone varchar ( 11 ) not null check ( telefone ~ '^[0-9]{10,11}$' ), cpf t_cpf , identidade varchar ( 10 ) not null , rua_id integer not null , numero_endereco integer , complemento_endereco varchar ( 100 ), data_nascimento date not null , sexo char ( 1 ) not null check ( sexo in ( 'M' , 'F' )), cep_endereco char ( 8 ) not null check ( cep_endereco ~ '^[0-9]{8,9}$' ) ); insert into pessoa values ( 1 , 'Lorena F\u00e1tima Carolina Nunes' , '5137140997' , '50037489062' , '265780329' , 1 , '635' , '' , '01/11/1996' , 'F' , '99910020' ), ( 2 , 'Diogo Hugo C\u00e9sar Silva' , '5135356502' , '66911317037' , '238012669' , 2 , '197' , '' , '27/02/1996' , 'M' , '99810020' ), ( 3 , 'Matheus Manoel Martin Viana' , '5135703717' , '53775328050' , '199665953' , 3 , '402' , '' , '12/11/1996' , 'M' , '99710020' ), ( 4 , 'Kevin Marcos Vinicius Raimundo Vieira' , '5135356503' , '66911317037' , '238012669' , 2 , '197' , '' , '27/02/1996' , 'F' , '69910020' ), ( 5 , 'Ben\u00edcio Alexandre Andr\u00e9 Rocha' , '5135356504' , '66911317078' , '238012669' , 2 , '197' , '' , '27/02/1995' , 'F' , '78910030' ), ( 6 , 'Lorena Vit\u00f3ria da Silva' , '5135356505' , '66911317058' , '238012669' , 2 , '197' , '' , '27/02/1994' , 'F' , '76910029' ), ( 7 , 'Andreia Mariah Rocha' , '5135356506' , '66911317034' , '238012669' , 2 , '197' , '' , '27/02/1993' , 'F' , '76910028' ), ( 8 , 'Elza Mariane Sophia Bernardes' , '5135356507' , '66911317056' , '238012669' , 2 , '197' , '' , '27/02/1994' , 'F' , '76910027' ), ( 9 , 'D\u00e9bora Ester Adriana Rodrigues' , '5135356508' , '66911317090' , '238012669' , 2 , '197' , '' , '27/02/1993' , 'F' , '76910026' ), ( 10 , 'Joana Olivia Castro' , '5135356510' , '66911317067' , '238012669' , 2 , '197' , '' , '27/02/1992' , 'F' , '76910025' ), ( 11 , 'Giovana Cl\u00e1udia da Silva' , '5135356512' , '66911317056' , '238012669' , 2 , '197' , '' , '27/02/1991' , 'F' , '76910024' ), ( 12 , 'Lorena Vit\u00f3ria Jesus' , '5135356513' , '66911317040' , '238012669' , 2 , '197' , '' , '27/02/1999' , 'F' , '76910023' ), ( 13 , 'Fl\u00e1via L\u00edvia Martins' , '5135356514' , '66911317039' , '238012669' , 2 , '197' , '' , '27/02/1998' , 'F' , '76910022' ), ( 14 , 'Angela da Mata' , '5135356515' , '66911317041' , '238011669' , 2 , '197' , '' , '27/02/1995' , 'F' , '76910321' ), ( 15 , 'Marcia Fagundes' , '5135356515' , '66911317051' , '238112669' , 2 , '197' , '' , '27/02/1995' , 'F' , '76912021' ), ( 16 , 'Artur da Mata' , '5135356515' , '66911317061' , '231012669' , 2 , '197' , '' , '27/02/1995' , 'F' , '76911021' ), ( 17 , 'Maiki Dellani' , '5135756515' , '66421317061' , '233014669' , 2 , '197' , '' , '28/02/1995' , 'F' , '76611021' ), ( 18 , 'Fabio Dellani' , '5135656515' , '66431317061' , '233018669' , 2 , '197' , '' , '28/02/1995' , 'F' , '76611021' ), ( 19 , 'Mateus Dellani' , '5134356515' , '66511317061' , '233019669' , 2 , '197' , '' , '28/02/1995' , 'F' , '76611021' ); create table posto ( id serial not null primary key , nome varchar ( 10 ) not null unique , descricao text ); insert into posto values ( 1 , 'P1' , null ),( 2 , 'P2' , null ),( 3 , 'P3' , null ),( 4 , 'P4' , null ); create table prescricao ( prescricao_id serial not null primary key , internacao_id integer not null , data date not null default current_date , hora time not null default current_time , evolucao_medica text , unique ( internacao_id , data ) ); insert into prescricao values ( 1 , 1 , current_date - 2 , default , 'Paciente n\u00e3o apresentou melhora' ), ( 2 , 1 , current_date - 1 , default , 'Paciente n\u00e3o apresentou melhora' ), ( 3 , 1 , default , default , 'Paciente apresentou leve melhora com a nova medica\u00e7\u00e3o utilizada' ), ( 4 , 2 , default , default , 'N\u00e3o houve melhora cl\u00ednica aparente' ), ( 5 , 3 , default , default , 'O procedimento realizado demonstrou normalidade nas atividades vitais b\u00e1sicas' ), ( 6 , 4 , default , default , 'Aguarda-se resultado de exames para orientar a escolha da melhor medica\u00e7\u00e3o' ); create table procedimento ( id serial not null primary key , nome t_nome , descricao text ); comment on table procedimento is 'Interven\u00e7\u00f5es m\u00e9dicas met\u00f3dicas para fins diagn\u00f3sticos, cir\u00fargicos, etc' ; insert into procedimento values ( 1 , 'Ultrassonografia' ),( 2 , 'Eletrocardiograma' ),( 3 , 'Radiografia' ); create table procedimento_internacao ( procedimento_id integer not null , internacao_id integer not null , data_hora timestamp not null default current_timestamp , primary key ( procedimento_id , internacao_id , data_hora ) ); insert into procedimento_internacao values ( 1 , 1 , default ), ( 2 , 3 , default ); create table rua ( id serial not null primary key , nome t_nome , bairro_id integer not null ); insert into rua values ( 1 , 'Rog\u00e9rio Nunes' , 1 ), ( 2 , 'Travessa Tiradentes' , 2 ), ( 3 , 'Raimunda Pereira Lima' , 3 ), ( 4 , 'Aren\u00f3polis' , 4 ), ( 5 , 'Rui Barbosa' , 5 ), ( 6 , 'Cristov\u00e3o Colombo' , 6 ), ( 7 , 'Get\u00falio Vargas' , 7 ), ( 8 , 'Nelson Mandela' , 8 ), ( 9 , 'Andr\u00e9 Franco Montora' , 9 ); alter table rua add constraint fk_rua_bairro foreign key ( bairro_id ) references bairro ; alter table procedimento_internacao add constraint fk_procedimento_int_internacao foreign key ( internacao_id ) references internacao ; alter table procedimento_internacao add constraint fk_procedimento_int_procedimento foreign key ( procedimento_id ) references procedimento ; alter table prescricao add constraint fk_prescricao_internacao foreign key ( internacao_id ) references internacao ; alter table pessoa add constraint fk_pessoa_rua foreign key ( rua_id ) references rua ; alter table paciente add constraint fk_paciente_responsavel foreign key ( responsavel_id ) references pessoa ; alter table paciente add constraint fk_paciente_pessoa foreign key ( pessoa_id ) references pessoa ; alter table medicamento_prescricao add constraint fk_medicamento_pres_prescricao foreign key ( prescricao_id ) references prescricao ; alter table medicamento_prescricao add constraint fk_medicamento_pres_medicamento foreign key ( medicamento_id ) references medicamento ; alter table medico_especialidade add constraint fk_medico_esp_medico foreign key ( medico_id ) references medico ; alter table medico_especialidade add constraint fk_medico_esp_especialidade foreign key ( especialidade_id ) references especialidade ; alter table medico add constraint fk_medico_pessoa foreign key ( pessoa_id ) references pessoa ; alter table material_prescricao add constraint fk_mat_pres_prescricao foreign key ( prescricao_id ) references prescricao ; alter table material_prescricao add constraint fk_mat_pres_material foreign key ( material_id ) references material ; alter table leito add constraint fk_leito_quarto foreign key ( quarto_id ) references quarto ; alter table internacao add constraint fk_internacao_medico foreign key ( medico_id ) references medico ; alter table internacao add constraint fk_internacao_leito foreign key ( leito_id ) references leito ; alter table internacao add constraint fk_internacao_paciente foreign key ( paciente_id ) references paciente ; alter table internacao add constraint fk_internacao_funcionario foreign key ( registrante_id ) references funcionario ; alter table internacao add constraint fk_internacao_convenio foreign key ( convenio_id ) references convenio ; alter table funcionario add constraint fk_funcionario_pessoa foreign key ( pessoa_id ) references pessoa ; alter table evolucao_internacao add constraint fk_evolucao_int_enfermeiro foreign key ( enfermeiro_id ) references enfermeiro ; alter table evolucao_internacao add constraint fk_evolucao_int_internacao foreign key ( internacao_id ) references internacao ; alter table enfermeiro add constraint fk_enfermeiro_pessoa foreign key ( pessoa_id ) references pessoa ; alter table diagnostico_prescricao add constraint fk_diag_int_prescricao foreign key ( prescricao_id ) references prescricao ; alter table diagnostico_prescricao add constraint fk_diag_int_diagnostico foreign key ( diagnostico_id ) references diagnostico ; alter table bairro add constraint fk_bairro_cidade foreign key ( cidade_id ) references cidade ; alter table quarto add constraint fk_quarto_posto foreign key ( posto_id ) references posto ; commit ;","title":"Estudo de Caso - Hospital_Db"},{"location":"banco-dados/lang/","text":"Data Definition Language \u00b6 Data Manipulation Language \u00b6 Comando INSERT \u00b6 {: .notice--info} Respons\u00e1vel por adicionar novas linhas a uma tabela, o comando INSERT apresenta sintaxe muito simples, embora com algumas varia\u00e7\u00f5es. A forma trivial de escrev\u00ea-lo \u00e9 especificando todas as colunas da tabela e os seus respectivos valores. Observe o trecho de c\u00f3digo a seguir: INSERT INTO quote ( id , entrance_exam_id , NAME , reference_code , description , comment , is_universal_access ) VALUES ( 1 , 1 , 'ACESSO UNIVERSAL' , '1' , 'Vagas de acesso universal' , '' , true ); Para ter sucesso na execu\u00e7\u00e3o, o comando insert deve respeitar a sintaxe e as constraints definidas para as colunas da tabela. Todas as colunas obrigat\u00f3rias ( not null ) devem aparecer no comando, com exce\u00e7\u00e3o daquelas que possuem valor default , que podem ser omitidas. Ainda, quando a(s) coluna(s) representam chaves estrangeiras, os valores informados devem respeitar a integridade referencial , ou seja, devem estar presentes como valores de chave prim\u00e1ria na tabela referenciada. E, para n\u00e3o esquecer, os valores informados devem respeitar o dom\u00ednio de dados da coluna. Quando h\u00e1 necessidade de adicionar m\u00faltiplas linhas em uma tabela n\u00e3o precisamos repetir diversas vezes o comando insert . Nestes casos, \u00e9 poss\u00edvel informar v\u00e1rios valores de tupla (linha) na cl\u00e1usula VALUES . No exemplo abaixo, o resultado da execu\u00e7\u00e3o ser\u00e1 a inser\u00e7\u00e3o de duas linhas na tabela produto . INSERT INTO produto ( id , nome ) VALUES ( default , 'L\u00e1pis' ), ( default , 'Caneta' ); Outra varia\u00e7\u00e3o de grande utilidade \u00e9 a possibilidade de substituir VALUES por um comando de SELECT . Observe: INSERT INTO produto ( nome ) SELECT item_nome FROM item_nota_fiscal WHERE tipo = 'P' ; Por fim, o PostgreSQL possibilita o retorno de valores em comandos de insert atrav\u00e9s da cl\u00e1usula returning . Esse recurso \u00e9 especialmente \u00fatil para obter valores de colunas configuradas como default , inclu\u00edndo tipos seriais utilizados em chaves prim\u00e1rias, bem como para comandos de PL/SQL que envolvem a atribui\u00e7\u00e3o de vari\u00e1veis ( Vide Documenta\u00e7\u00e3o ). No exemplo abaixo, o comando insert ir\u00e1 retornar o valor gerado para a coluna id , tal qual faria um comando select an\u00e1logo. INSERT INTO produto ( id , nome ) VALUES ( default , 'P\u00e3o' ) RETURNING id ; Comando DELETE \u00b6 {: .notice--info} A exclus\u00e3o de linhas de uma tabela \u00e9 realizada pelo comando delete . N\u00e3o confunda, portanto com o comando drop , cuja finalidade \u00e9 remover do dicion\u00e1rio (schema) a defini\u00e7\u00e3o e dados (se houver) de um objeto existente na base de dados. O comando delete n\u00e3o requer a especifica\u00e7\u00e3o de filtros. Neste caso, todas as linhas da tabela ser\u00e3o removidas, o que pode ser imprudente. Normalmente todo comando delete acompanha condi\u00e7\u00f5es que determinam quais linhas devem ser exclu\u00eddas dentre todas as existentes. Tais condi\u00e7\u00f5es s\u00e3o expressas na cl\u00e1usula WHERE , na forma de condi\u00e7\u00f5es l\u00f3gicas. --ir\u00e1 excluir todas as linhas da tabela estudante DELETE FROM estudante ; /*ir\u00e1 excluir somente as linhas cujas condi\u00e7\u00f5es forem satisfeitas*/ DELETE FROM estudante WHERE cpf = '012365478963' or status = 'C' ; A exclus\u00e3o das linhas somente ocorre quando nenhuma constraint for violada. Casos t\u00edpicos s\u00e3o linhas referenciadas em chaves estrangeiras, as quais n\u00e3o podem ser exclu\u00eddas pois implicaria na viola\u00e7\u00e3o da restri\u00e7\u00e3o de integrade referencial . Um meio de contornar a restri\u00e7\u00e3o e permitir a exclus\u00e3o da linha com depend\u00eancia \u00e9 valer-se da cl\u00e1usula ON DELETE CASCADE no momento de criar a chave estrangeira. Isso, contudo, ir\u00e1 depender das regras do neg\u00f3cio, que por vezes tornam invi\u00e1vel o uso de tal recurso. Pense, por exemplo, se ao excluir o registro de uma cidade, todos os dados de habitantes a ela associados fossem exclu\u00eddos automaticamente. Certamente n\u00e3o parece ser a melhor estrat\u00e9gia. Da mesma forma que ocorre com o comando INSERT , o PostgreSQL possibilita o retorno de valores em comandos de delete atrav\u00e9s da cl\u00e1usula returning . Observe o comando abaixo ( Vide Documenta\u00e7\u00e3o ): DELETE FROM produto WHERE data_validade > current_date - interval '10 days' returning id , nome ; Comando UPDATE \u00b6 {: .notice--info} Para realizar modifica\u00e7\u00f5es em dados armazenados, utilizamos o comando UPDATE . Por meio dele \u00e9 poss\u00edvel alterar valores de uma ou mais colunas da linha (ou linhas) de uma tabela. Se definido sem filtros, a altera\u00e7\u00e3o solicitada ser\u00e1 efetivada em todas as linhas, contudo nos cen\u00e1rios triviais de uso, este n\u00e3o \u00e9 o objetivo pretendido. Normalmente utilizamos condi\u00e7\u00f5es que restringem o efeito da atualiza\u00e7\u00e3o para uma quantia menor de linhas. --Todas as linhas de produto ter\u00e3o o valor da coluna nome alterado para Feij\u00e3o UPDATE produto SET nome = 'Feij\u00e3o' ; --O mesmo comando, agora com filtro UPDATE produto SET nome = 'Feij\u00e3o' WHERE codigo = 25 ; No comando update podemos especificar apenas uma tabela. A partir da cl\u00e1usula set informamos qual ser\u00e1 o novo valor das colunas que desejamos modificar. \u00c9 poss\u00edvel informar uma ou mais colunas na mesma instru\u00e7\u00e3o, assim como utilizar o valor atual de colunas para compor novos. Observe: --Modificando v\u00e1rias colunas em uma \u00fanica instru\u00e7\u00e3o UPDATE produto SET nome = 'Feij\u00e3o' , preco = 4 . 86 , peso = 2000 WHERE codigo = 25 ; --Novos valores de coluna com base nos atuais UPDATE produto SET preco = preco + preco * 0 . 05 WHERE codigo = 25 ; Voc\u00ea deve ter observado que a cl\u00e1usula set \u00e9 uma sequ\u00eancia de pares de coluna/valor separados por v\u00edrgula. Utilizando o trecho preco= preco + preco * 0.05 como exemplo, percebemos que \u00e0 esquerda da igualdade temos o nome da coluna que ter\u00e1 o valor modificado, enquanto que na direita encontramos o novo valor. Quando o nome de uma coluna aparece na direita (nosso exemplo), estamos lendo o valor atual para utiliz\u00e1-lo de alguma forma na composi\u00e7\u00e3o do novo. Assim, supondo que a coluna preco tenha por valor atual 2.40 , o novo valor ser\u00e1 o resultado da express\u00e3o 2.40 + 2.40 * 0.05 , ou seja, 2.52 . O PostgreSQL possibilita o retorno de valores em comandos update atrav\u00e9s da cl\u00e1usula returning . Observe o comando abaixo ( Vide Documenta\u00e7\u00e3o ): UPDATE produto SET nome = 'Feij\u00e3o' , preco = preco * 0 . 15 WHERE codigo = 25 RETURNING preco ; Comando SELECT \u00b6 {: .notice--info} Certamente podemos afirmar que o comando select \u00e9 um dos mais importantes da linguagem SQL. Isso porque atrav\u00e9s dele temos condi\u00e7\u00f5es de recompor as informa\u00e7\u00f5es do mundo fragmentados nas diferentes tabelas da base, respondendo \u00e0s consultas dos usu\u00e1rios. A informa\u00e7\u00e3o \u00e9, portanto, o que se busca apresentar nos diferentes softwares que constru\u00edmos para interagir com bases de dados. Proporcional a import\u00e2ncia do comando select \u00e9 a sua complexidade e varia\u00e7\u00e3o de sintaxe. Logo, extrair todo pontencial do comando pode levar certo tempo de estudo e dedica\u00e7\u00e3o. Em termos gerais, o comando select representa o meio que temos, em bases relacionais, para recuperar dados. O seu retorno representa uma rela\u00e7\u00e3o (nome formal dado \u00e0s tabelas), uma vez que falamos em um retorno estruturado em linhas e colunas. Vamos come\u00e7ar nosso estudo entendendo as principais se\u00e7\u00f5es que comp\u00f5em o comando select . Para tal, considere o c\u00f3digo SQL abaixo: select medico_id , paciente_id , anamnese , data_hora_alta from internacao Observe a cl\u00e1usula from . Nela especificamos a(s) rela\u00e7\u00e3o(\u00f5es) que iremos consultar. A tabela internacao \u00e9 nossa rela\u00e7\u00e3o e estamos interessados em recuperar as linhas que ela cont\u00e9m. Sabemos que rela\u00e7\u00f5es s\u00e3o segmentadas em colunas e, na consulta, podemos limitar a quais delas gostar\u00edamos de receber no retorno. Portanto, somente as colunas medico_id , paciente_id , anamnese e data_hora_alta de todas as linhas armazenadas em internacao ser\u00e3o retornadas. Perceba que a lista de colunas deve ser expressa entre as cl\u00e1usulas select e from , utilizando v\u00edrgula como caractere separador e respeitando a nomenclatura utilizada no momento da cria\u00e7\u00e3o da tabela. Para os casos onde todas as colunas devem estar presentes na sa\u00edda, utilizamos um asterisco para simplificar a escrita da consulta. Neste caso, ter\u00edamos: select * from internacao Bem, e se voc\u00ea preferir mudar o nome de sa\u00edda da coluna...como faria? Neste caso, basta utilizar o recurso de troca de nomes ( rename ). Veja: select medico_id as \"codigo do m\u00e9dico\" , paciente_id paciente , anamnese , data_hora_alta as saida_paciente from internacao Ao optar por renomear colunas, quando utilizamos nomes compostos com espa\u00e7os entre as palavras, ser\u00e1 preciso envolver com aspas duplas ( medico_id as \"codigo do m\u00e9dico\" ). O operador as \u00e9 opcional, logo fica a seu crit\u00e9rio utiliz\u00e1-lo ou n\u00e3o. Apenas mantenha um padr\u00e3o de escrita, aderindo a uma das formas apenas. Aten\u00e7\u00e3o: A oper\u00e7\u00e3o rename n\u00e3o realiza altera\u00e7\u00f5es de schema. Seu efeito vale apenas no contexto da query. {: .notice--warning} Al\u00e9m de nomes de colunas, podemos solicitar sa\u00edda de express\u00f5es. \u00c9 poss\u00edvel, por exemplo, realizar chamadas de fun\u00e7\u00f5es, c\u00e1lculos matem\u00e1ticos e at\u00e9 fazer uso de subqueries no espa\u00e7o reservado \u00e0s colunas. Contudo, precisamos utilizar tais liberdades com modera\u00e7\u00e3o, pois em alguns casos podemos comprometer o desempenho da consulta (veremos estas situa\u00e7\u00f5es em outro post). select upper ( anamnese ), age ( data_hora_alta ) as tempo_de_saida , 3 * 9 as calculo from internacao At\u00e9 o momento sabemos como especificar as colunas (ou express\u00f5es) e a rela\u00e7\u00e3o para nossas consultas via select . Da forma que apresentamos at\u00e9 ent\u00e3o, todas as linhas da rela\u00e7\u00e3o ser\u00e3o retornadas, uma vez que n\u00e3o definimos filtros para os dados. \u00c9 pouco prov\u00e1vel que suas queries considerem a integralidade de linhas de uma tabela, logo saber restringir o retorno apenas as linhas de interesse \u00e9 de fundamental import\u00e2ncia. A cl\u00e1usula que nos permite condicionar linhas ao retorno chama-se where . Nela, expressamos as restri\u00e7\u00f5es na forma de condi\u00e7\u00f5es l\u00f3gicas, elaboradas por meio de operadores de compara\u00e7\u00e3o ( < > = <= >= <> ) e conectores l\u00f3gicos ( NOT AND OR ) envolvendo colunas e/ou express\u00f5es. select * from internacao where data_hora_internacao > current_timestamp - interval '3 days' and tipo_clinica = 'M' Na query acima, condicionamos ao retorno linhas da tabela internacao que possuem valor igual a M na coluna tipo_clinica e cuja data_hora_internacao registra uma estampa de tempo de at\u00e9 3 dias. Jun\u00e7\u00f5es Internas \u00b6","title":"Structured Query Language - SQL"},{"location":"banco-dados/lang/#data-definition-language","text":"","title":"Data Definition Language"},{"location":"banco-dados/lang/#data-manipulation-language","text":"","title":"Data Manipulation Language"},{"location":"banco-dados/lang/#comando-insert","text":"{: .notice--info} Respons\u00e1vel por adicionar novas linhas a uma tabela, o comando INSERT apresenta sintaxe muito simples, embora com algumas varia\u00e7\u00f5es. A forma trivial de escrev\u00ea-lo \u00e9 especificando todas as colunas da tabela e os seus respectivos valores. Observe o trecho de c\u00f3digo a seguir: INSERT INTO quote ( id , entrance_exam_id , NAME , reference_code , description , comment , is_universal_access ) VALUES ( 1 , 1 , 'ACESSO UNIVERSAL' , '1' , 'Vagas de acesso universal' , '' , true ); Para ter sucesso na execu\u00e7\u00e3o, o comando insert deve respeitar a sintaxe e as constraints definidas para as colunas da tabela. Todas as colunas obrigat\u00f3rias ( not null ) devem aparecer no comando, com exce\u00e7\u00e3o daquelas que possuem valor default , que podem ser omitidas. Ainda, quando a(s) coluna(s) representam chaves estrangeiras, os valores informados devem respeitar a integridade referencial , ou seja, devem estar presentes como valores de chave prim\u00e1ria na tabela referenciada. E, para n\u00e3o esquecer, os valores informados devem respeitar o dom\u00ednio de dados da coluna. Quando h\u00e1 necessidade de adicionar m\u00faltiplas linhas em uma tabela n\u00e3o precisamos repetir diversas vezes o comando insert . Nestes casos, \u00e9 poss\u00edvel informar v\u00e1rios valores de tupla (linha) na cl\u00e1usula VALUES . No exemplo abaixo, o resultado da execu\u00e7\u00e3o ser\u00e1 a inser\u00e7\u00e3o de duas linhas na tabela produto . INSERT INTO produto ( id , nome ) VALUES ( default , 'L\u00e1pis' ), ( default , 'Caneta' ); Outra varia\u00e7\u00e3o de grande utilidade \u00e9 a possibilidade de substituir VALUES por um comando de SELECT . Observe: INSERT INTO produto ( nome ) SELECT item_nome FROM item_nota_fiscal WHERE tipo = 'P' ; Por fim, o PostgreSQL possibilita o retorno de valores em comandos de insert atrav\u00e9s da cl\u00e1usula returning . Esse recurso \u00e9 especialmente \u00fatil para obter valores de colunas configuradas como default , inclu\u00edndo tipos seriais utilizados em chaves prim\u00e1rias, bem como para comandos de PL/SQL que envolvem a atribui\u00e7\u00e3o de vari\u00e1veis ( Vide Documenta\u00e7\u00e3o ). No exemplo abaixo, o comando insert ir\u00e1 retornar o valor gerado para a coluna id , tal qual faria um comando select an\u00e1logo. INSERT INTO produto ( id , nome ) VALUES ( default , 'P\u00e3o' ) RETURNING id ;","title":"Comando INSERT"},{"location":"banco-dados/lang/#comando-delete","text":"{: .notice--info} A exclus\u00e3o de linhas de uma tabela \u00e9 realizada pelo comando delete . N\u00e3o confunda, portanto com o comando drop , cuja finalidade \u00e9 remover do dicion\u00e1rio (schema) a defini\u00e7\u00e3o e dados (se houver) de um objeto existente na base de dados. O comando delete n\u00e3o requer a especifica\u00e7\u00e3o de filtros. Neste caso, todas as linhas da tabela ser\u00e3o removidas, o que pode ser imprudente. Normalmente todo comando delete acompanha condi\u00e7\u00f5es que determinam quais linhas devem ser exclu\u00eddas dentre todas as existentes. Tais condi\u00e7\u00f5es s\u00e3o expressas na cl\u00e1usula WHERE , na forma de condi\u00e7\u00f5es l\u00f3gicas. --ir\u00e1 excluir todas as linhas da tabela estudante DELETE FROM estudante ; /*ir\u00e1 excluir somente as linhas cujas condi\u00e7\u00f5es forem satisfeitas*/ DELETE FROM estudante WHERE cpf = '012365478963' or status = 'C' ; A exclus\u00e3o das linhas somente ocorre quando nenhuma constraint for violada. Casos t\u00edpicos s\u00e3o linhas referenciadas em chaves estrangeiras, as quais n\u00e3o podem ser exclu\u00eddas pois implicaria na viola\u00e7\u00e3o da restri\u00e7\u00e3o de integrade referencial . Um meio de contornar a restri\u00e7\u00e3o e permitir a exclus\u00e3o da linha com depend\u00eancia \u00e9 valer-se da cl\u00e1usula ON DELETE CASCADE no momento de criar a chave estrangeira. Isso, contudo, ir\u00e1 depender das regras do neg\u00f3cio, que por vezes tornam invi\u00e1vel o uso de tal recurso. Pense, por exemplo, se ao excluir o registro de uma cidade, todos os dados de habitantes a ela associados fossem exclu\u00eddos automaticamente. Certamente n\u00e3o parece ser a melhor estrat\u00e9gia. Da mesma forma que ocorre com o comando INSERT , o PostgreSQL possibilita o retorno de valores em comandos de delete atrav\u00e9s da cl\u00e1usula returning . Observe o comando abaixo ( Vide Documenta\u00e7\u00e3o ): DELETE FROM produto WHERE data_validade > current_date - interval '10 days' returning id , nome ;","title":"Comando DELETE"},{"location":"banco-dados/lang/#comando-update","text":"{: .notice--info} Para realizar modifica\u00e7\u00f5es em dados armazenados, utilizamos o comando UPDATE . Por meio dele \u00e9 poss\u00edvel alterar valores de uma ou mais colunas da linha (ou linhas) de uma tabela. Se definido sem filtros, a altera\u00e7\u00e3o solicitada ser\u00e1 efetivada em todas as linhas, contudo nos cen\u00e1rios triviais de uso, este n\u00e3o \u00e9 o objetivo pretendido. Normalmente utilizamos condi\u00e7\u00f5es que restringem o efeito da atualiza\u00e7\u00e3o para uma quantia menor de linhas. --Todas as linhas de produto ter\u00e3o o valor da coluna nome alterado para Feij\u00e3o UPDATE produto SET nome = 'Feij\u00e3o' ; --O mesmo comando, agora com filtro UPDATE produto SET nome = 'Feij\u00e3o' WHERE codigo = 25 ; No comando update podemos especificar apenas uma tabela. A partir da cl\u00e1usula set informamos qual ser\u00e1 o novo valor das colunas que desejamos modificar. \u00c9 poss\u00edvel informar uma ou mais colunas na mesma instru\u00e7\u00e3o, assim como utilizar o valor atual de colunas para compor novos. Observe: --Modificando v\u00e1rias colunas em uma \u00fanica instru\u00e7\u00e3o UPDATE produto SET nome = 'Feij\u00e3o' , preco = 4 . 86 , peso = 2000 WHERE codigo = 25 ; --Novos valores de coluna com base nos atuais UPDATE produto SET preco = preco + preco * 0 . 05 WHERE codigo = 25 ; Voc\u00ea deve ter observado que a cl\u00e1usula set \u00e9 uma sequ\u00eancia de pares de coluna/valor separados por v\u00edrgula. Utilizando o trecho preco= preco + preco * 0.05 como exemplo, percebemos que \u00e0 esquerda da igualdade temos o nome da coluna que ter\u00e1 o valor modificado, enquanto que na direita encontramos o novo valor. Quando o nome de uma coluna aparece na direita (nosso exemplo), estamos lendo o valor atual para utiliz\u00e1-lo de alguma forma na composi\u00e7\u00e3o do novo. Assim, supondo que a coluna preco tenha por valor atual 2.40 , o novo valor ser\u00e1 o resultado da express\u00e3o 2.40 + 2.40 * 0.05 , ou seja, 2.52 . O PostgreSQL possibilita o retorno de valores em comandos update atrav\u00e9s da cl\u00e1usula returning . Observe o comando abaixo ( Vide Documenta\u00e7\u00e3o ): UPDATE produto SET nome = 'Feij\u00e3o' , preco = preco * 0 . 15 WHERE codigo = 25 RETURNING preco ;","title":"Comando UPDATE"},{"location":"banco-dados/lang/#comando-select","text":"{: .notice--info} Certamente podemos afirmar que o comando select \u00e9 um dos mais importantes da linguagem SQL. Isso porque atrav\u00e9s dele temos condi\u00e7\u00f5es de recompor as informa\u00e7\u00f5es do mundo fragmentados nas diferentes tabelas da base, respondendo \u00e0s consultas dos usu\u00e1rios. A informa\u00e7\u00e3o \u00e9, portanto, o que se busca apresentar nos diferentes softwares que constru\u00edmos para interagir com bases de dados. Proporcional a import\u00e2ncia do comando select \u00e9 a sua complexidade e varia\u00e7\u00e3o de sintaxe. Logo, extrair todo pontencial do comando pode levar certo tempo de estudo e dedica\u00e7\u00e3o. Em termos gerais, o comando select representa o meio que temos, em bases relacionais, para recuperar dados. O seu retorno representa uma rela\u00e7\u00e3o (nome formal dado \u00e0s tabelas), uma vez que falamos em um retorno estruturado em linhas e colunas. Vamos come\u00e7ar nosso estudo entendendo as principais se\u00e7\u00f5es que comp\u00f5em o comando select . Para tal, considere o c\u00f3digo SQL abaixo: select medico_id , paciente_id , anamnese , data_hora_alta from internacao Observe a cl\u00e1usula from . Nela especificamos a(s) rela\u00e7\u00e3o(\u00f5es) que iremos consultar. A tabela internacao \u00e9 nossa rela\u00e7\u00e3o e estamos interessados em recuperar as linhas que ela cont\u00e9m. Sabemos que rela\u00e7\u00f5es s\u00e3o segmentadas em colunas e, na consulta, podemos limitar a quais delas gostar\u00edamos de receber no retorno. Portanto, somente as colunas medico_id , paciente_id , anamnese e data_hora_alta de todas as linhas armazenadas em internacao ser\u00e3o retornadas. Perceba que a lista de colunas deve ser expressa entre as cl\u00e1usulas select e from , utilizando v\u00edrgula como caractere separador e respeitando a nomenclatura utilizada no momento da cria\u00e7\u00e3o da tabela. Para os casos onde todas as colunas devem estar presentes na sa\u00edda, utilizamos um asterisco para simplificar a escrita da consulta. Neste caso, ter\u00edamos: select * from internacao Bem, e se voc\u00ea preferir mudar o nome de sa\u00edda da coluna...como faria? Neste caso, basta utilizar o recurso de troca de nomes ( rename ). Veja: select medico_id as \"codigo do m\u00e9dico\" , paciente_id paciente , anamnese , data_hora_alta as saida_paciente from internacao Ao optar por renomear colunas, quando utilizamos nomes compostos com espa\u00e7os entre as palavras, ser\u00e1 preciso envolver com aspas duplas ( medico_id as \"codigo do m\u00e9dico\" ). O operador as \u00e9 opcional, logo fica a seu crit\u00e9rio utiliz\u00e1-lo ou n\u00e3o. Apenas mantenha um padr\u00e3o de escrita, aderindo a uma das formas apenas. Aten\u00e7\u00e3o: A oper\u00e7\u00e3o rename n\u00e3o realiza altera\u00e7\u00f5es de schema. Seu efeito vale apenas no contexto da query. {: .notice--warning} Al\u00e9m de nomes de colunas, podemos solicitar sa\u00edda de express\u00f5es. \u00c9 poss\u00edvel, por exemplo, realizar chamadas de fun\u00e7\u00f5es, c\u00e1lculos matem\u00e1ticos e at\u00e9 fazer uso de subqueries no espa\u00e7o reservado \u00e0s colunas. Contudo, precisamos utilizar tais liberdades com modera\u00e7\u00e3o, pois em alguns casos podemos comprometer o desempenho da consulta (veremos estas situa\u00e7\u00f5es em outro post). select upper ( anamnese ), age ( data_hora_alta ) as tempo_de_saida , 3 * 9 as calculo from internacao At\u00e9 o momento sabemos como especificar as colunas (ou express\u00f5es) e a rela\u00e7\u00e3o para nossas consultas via select . Da forma que apresentamos at\u00e9 ent\u00e3o, todas as linhas da rela\u00e7\u00e3o ser\u00e3o retornadas, uma vez que n\u00e3o definimos filtros para os dados. \u00c9 pouco prov\u00e1vel que suas queries considerem a integralidade de linhas de uma tabela, logo saber restringir o retorno apenas as linhas de interesse \u00e9 de fundamental import\u00e2ncia. A cl\u00e1usula que nos permite condicionar linhas ao retorno chama-se where . Nela, expressamos as restri\u00e7\u00f5es na forma de condi\u00e7\u00f5es l\u00f3gicas, elaboradas por meio de operadores de compara\u00e7\u00e3o ( < > = <= >= <> ) e conectores l\u00f3gicos ( NOT AND OR ) envolvendo colunas e/ou express\u00f5es. select * from internacao where data_hora_internacao > current_timestamp - interval '3 days' and tipo_clinica = 'M' Na query acima, condicionamos ao retorno linhas da tabela internacao que possuem valor igual a M na coluna tipo_clinica e cuja data_hora_internacao registra uma estampa de tempo de at\u00e9 3 dias.","title":"Comando SELECT"},{"location":"banco-dados/lang/#juncoes-internas","text":"","title":"Jun\u00e7\u00f5es Internas"},{"location":"banco-dados/project/","text":"","title":"Modelagem e projeto de banco de dados relacionais"},{"location":"banco-dados/references/","text":"Refer\u00eancias \u00b6 1 - Garcia-Molina, H. et al. Database Systems: The Complete Book . 2. ed. Upper Saddle River: Pearson Prentice Hall, 2008. 1240 p. 2 - DAMA International. DAMA-DMBOK (2nd Edition): Data Management Body of Knowledge .2. ed. Technics Publications, 2017. 1827 p.","title":"Refer\u00eancias"},{"location":"banco-dados/references/#referencias","text":"1 - Garcia-Molina, H. et al. Database Systems: The Complete Book . 2. ed. Upper Saddle River: Pearson Prentice Hall, 2008. 1240 p. 2 - DAMA International. DAMA-DMBOK (2nd Edition): Data Management Body of Knowledge .2. ed. Technics Publications, 2017. 1827 p.","title":"Refer\u00eancias"},{"location":"informatica/editores-apresentacao/","text":"","title":"Editores apresentacao"},{"location":"informatica/editores-planilhas/","text":"","title":"Editores planilhas"},{"location":"informatica/fundamentos/","text":"Tentativas de construir m\u00e1quinas que pudessem realizar atividades tipicamente humanas s\u00e3o extremamente comuns na hist\u00f3ria. Com o computador n\u00e3o foi diferente. De avan\u00e7o em avan\u00e7o nos campos da matem\u00e1tica, qu\u00edmica, f\u00edsica e eletr\u00f4nica chegamos ao computador como o conhecemos hoje. Das habilidades humanas, o c\u00e1lculo foi objeto de diversos inventos que buscavam facilitar o processo. O mais antigo deles \u00e9 o \u00e1baco, que embora seja aparentemente simples, pode ser t\u00e3o eficaz quanto uma calculadora eletr\u00f4nica nas m\u00e3os de um usu\u00e1rio experiente. As primeiras m\u00e1quinas capazes de realizar c\u00e1lculos eram puramente mec\u00e2nicas, utilizando rotores e combina\u00e7\u00f5es de engrenagens para efetuar opera\u00e7\u00f5es matem\u00e1ticas. Aqui podemos citar a M\u00e1quina de Pascal e a M\u00e1quina Anal\u00edtica de Charles Babbage , considerado um dos precursores da computa\u00e7\u00e3o. Outro invento marcante na hist\u00f3ria foi a M\u00e1quina de Tabular por Hermann Hollerith em 1890. Utilizando conceitos como cart\u00e3o perfurado, l\u00f3gica booleana e eletricidade, a m\u00e1quina de Hollerith tornou o processamento dos dados de censo americano da \u00e9poca muito mais r\u00e1pidos. Devido ao sucesso alcan\u00e7ado, Hollerith abriu sua pr\u00f3pria compania que, em 1916, viria a ser conhecida como International Business Machine , a famosa IBM.","title":"Fundamentos"},{"location":"informatica/editores-texto/abnt/","text":"Em diversas situa\u00e7\u00f5es, a formata\u00e7\u00e3o do documento n\u00e3o \u00e9 de livre escolha do autor. Um exemplo cl\u00e1ssico s\u00e3o trabalhos acad\u00eamicos de conclus\u00e3o de curso, como artigos, monografias, teses, disserta\u00e7\u00f5es, entre outros. Para estes, a institui\u00e7\u00e3o define o modelo ( template ) do documento, que deve ser seguido a rigor pelo autor. Boa parte das regras de formata\u00e7\u00e3o contidas nestes modelos s\u00e3o baseados em normas da Associa\u00e7\u00e3o Brasileira de Normas T\u00e9cnicas (ABNT). Tentaremos, neste artigo, abordar alguns elementos presentes nestas normas para a formata\u00e7\u00e3o de trabalhos de conclus\u00e3o de curso. Contudo, aviso que o objetivo n\u00e3o ser\u00e1 apresentar detalhadamente a especifica\u00e7\u00e3o ditada pela norma, mas como configuramos no writer tais informa\u00e7\u00f5es do modo correto. Partes de Documento \u00b6 Trabalhos acad\u00eamicos tem suas partes divididas em tr\u00eas categorias: elementos pr\u00e9-textuais, elementos textuais e p\u00f3s-textuais. Vamos abordar cada um deles e apresentar dicas de como podemos configurar a formata\u00e7\u00e3o no LibreOffice Writer. Fonte: Manual ABNT: Regras Gerais de Estilo e Formata\u00e7\u00e3o de Trabalhos Acad\u00eamicos, pg. 13 De antem\u00e3o, devemos considerar que as p\u00e1ginas devem ser configuradas para formato A4 , orienta\u00e7\u00e3o retrato , e margens esquerda e superior em 3cm, direita e inferior, 2 cm . Quanto a fonte, devemos utilizar Times New Roman ou Arial em tamanho 12 para corpo do texto e 10 , para cita\u00e7\u00f5es, notas de rodap\u00e9, pagina\u00e7\u00e3o e legendas. Para configurar as p\u00e1ginas, sugiro criar estilos e, considerando a exist\u00eancia de tr\u00eas segmentos no documento (pr\u00e9-textuais, textuais e p\u00f3s-textuais), pode ser interessante realizar a cria\u00e7\u00e3o de tr\u00eas novos estilos de p\u00e1gina. Caso esteja com d\u00favidas sobre como criar tais estilos, sugiro a leitura do t\u00f3pico que falamos sobre o recurso . Ser\u00e1 importante tamb\u00e9m colocar todos os elementos pr\u00e9-textuais obrigat\u00f3rio e \u00e0queles opcionais que far\u00e3o parte do trabalho, um em cada p\u00e1gina (apenas reservar a p\u00e1gina). Assim teremos idea do n\u00famero de p\u00e1ginas utilizadas e, tamb\u00e9m, do que ser\u00e1 necess\u00e1rio configurar para gerar os \u00edndices de forma autom\u00e1tica. Elementos pr\u00e9-textuais \u00b6 S\u00e3o as partes do documento que antecedem o conte\u00fado do trababalho. Nesta categoria, temos: Capa \u00b6 Item obrigat\u00f3rio de qualquer trabalho. Identifica a institui\u00e7\u00e3o, curso, autores, t\u00edtulo e subt\u00edtulo do trabalho, local e ano de entrega. Importante lembrar que a capa n\u00e3o conta na numera\u00e7\u00e3o de p\u00e1gina (p\u00e1gina 0) e que todos os elementos pr\u00e9-textuas n\u00e3o devem apresentar a n\u00famera\u00e7\u00e3o de p\u00e1gina no rodap\u00e9. Lombada \u00b6 Para trabalhos encadernados, este item se torna obrigat\u00f3rio. Sua estrutura \u00e9 definida pela institui\u00e7\u00e3o. Folha de Rosto \u00b6 Sua presen\u00e7a no documento \u00e9 obrigat\u00f3ria. Tem por objetivo apresentar os elementos de identifica\u00e7\u00e3o do trabalho, como nome do autor, t\u00edtulo e subt\u00edtulo, natureza, objetivo do trabalho, nome da institui\u00e7\u00e3o, nome do orientador, local e ano de entrega. Composi\u00e7\u00e3o Institucional e Ficha Catalogr\u00e1fica \u00b6 Normalmente gerada por bibliotec\u00e1rios. Ser\u00e1 preciso verificar o procedimento da institui\u00e7\u00e3o para sua obten\u00e7\u00e3o. Errata \u00b6 Item opcional, utilizado para adicionar a lista de erros e suas respectivas corre\u00e7\u00f5es. Folha de Aprova\u00e7\u00e3o \u00b6 Obrigat\u00f3ria. Deve conter detalhes dos autores, da institui\u00e7\u00e3o, t\u00edtulo pretendido e detalhes dos componentes da banca, com espa\u00e7o para assinatura. Dedicat\u00f3ria \u00b6 Item opcional utilizado para prestar homenagens e/ou dedicar o trabalho para algu\u00e9m. Agradecimento \u00b6 Item opcional utilizado para agradecer pessoas e/ou institui\u00e7\u00f5es que colaboraram de alguma forma para o desenvolvimento do trabalho. Ep\u00edgrafe \u00b6 Elemento opcional onde o autor pode fazer uma cita\u00e7\u00e3o que foi significativa no contexto do trabalho. A fonte deve ser indicada. Resumo \u00b6 Item obrigat\u00f3rio, escrito na l\u00edngua vern\u00e1cula (do pa\u00eds). Apresenta os pontos relevantes do documento. Acompanha ao final a lista de palavras-chave. Resumo em L\u00edngua Estrangeira \u00b6 Corresponde ao abstract , vers\u00e3o do resumo escrito em ingl\u00eas, acompanhado das keywords (palavras-chave). \u00c9 obrigat\u00f3rio apresent\u00e1-lo. Lista de Ilustra\u00e7\u00f5es \u00b6 \u00cdndice contendo as legendas das ilustra\u00e7\u00f5es apresentadas no texto, conforme sua ordem de apari\u00e7\u00e3o. \u00c9 opcional. Lista de Tabelas \u00b6 \u00cdndice contendo as legendas das tabelas apresentadas no texto, conforme sua ordem de apari\u00e7\u00e3o. \u00c9 opcional. Lista de Abreviaturas e Siglas \u00b6 Rela\u00e7\u00e3o de siglas e abreviaturas utilizadas no texto, acompanhadas dos respectivos significados. Tamb\u00e9m \u00e9 um elemento opcional. Lista de S\u00edmbolos \u00b6 Rela\u00e7\u00e3o de s\u00edmbolos utilizados e seus respectivos significados. \u00c9 opcional. Sum\u00e1rio \u00b6 \u00daltimo dos elementos pr\u00e9-textuais. \u00c9 obrigatorio constar no documento. Corresponde a organiza\u00e7\u00e3o de t\u00f3picos do trabalho (cap\u00edtulos, se\u00e7\u00f5es, etc), apresentadas na ordem em que aparecem com o respectivo n\u00famero de p\u00e1gina. Elementos textuais \u00b6 Os elementos textuais devem contemplar a Introdu\u00e7\u00e3o , Desenvolvimento e Conclus\u00e3o do trabalho e naturalmente s\u00e3o obrigat\u00f3rios. Em termos de formata\u00e7\u00e3o, os pontos mais relevantes dos elementos textuais s\u00e3o t\u00edtulos , numera\u00e7\u00e3o de p\u00e1ginas , corpo do texto , cita\u00e7\u00f5es , figuras , quadros e tabelas . Vamos come\u00e7ar analisando a quest\u00e3o da numera\u00e7\u00e3o de p\u00e1ginas. Neste ponto, precisamos saber exatamente quantas p\u00e1ginas iremos utilizar nos elementos pr\u00e9-textuais (todos os obrigat\u00f3rios e os opcionais escolhidos). Tamb\u00e9m devemos nos atentar de que a capa n\u00e3o \u00e9 contabilizada. Ent\u00e3o, para nosso tutorial, vamos supor que nosso trabalho tenha os seguintes elementos pr\u00e9-textuais: Capa Folha de Rosto Folha de Aprova\u00e7\u00e3o Agradecimentos Lista de Ilustra\u00e7\u00f5es Lista de Tabelas Resumo Abstract Sum\u00e1rio Considerando que teremos 9 p\u00e1ginas de elementos pr\u00e9-textuais e que a capa n\u00e3o entra na contagem, a numera\u00e7\u00e3o de p\u00e1ginas, que ser\u00e1 apresentada a partir da Introdu\u00e7\u00e3o , deve iniciar em 9. Para conseguirmos ocultar a numera\u00e7\u00e3o dos elementos pr\u00e9-textuais e apresentarmos a partir dos elementos textuais, devemos utilizar o recurso quebra manual de p\u00e1gina , em conjunto com os estilos de p\u00e1gina que criamos anterioremente. Antes de realizar a quebra de p\u00e1gina, voc\u00ea deve reservar as p\u00e1ginas para os elementos pr\u00e9-textuais. Utilize o atalho CTRL+ENTER para inserir nova p\u00e1gina no documento. Agora, estando com o cursor na \u00faltima p\u00e1gina dos elementos pr\u00e9-textuais (referente ao sum\u00e1rio), v\u00e1 at\u00e9 o menu Inserir -> Mais quebras -> Quebra Manual e configure os valores conforme a imagem a seguir. Perceba que iremos utilizar o estilo de p\u00e1gina que criamos, alterando a sequ\u00eancia de numera\u00e7\u00e3o para 9 . As quebras de p\u00e1gina s\u00e3o extrememente \u00fateis porque definem regi\u00f5es do documento em que podemos aplicar estilos de p\u00e1gina diferentes. Al\u00e9m disso, cada regi\u00e3o ter\u00e1 cabe\u00e7alho e rodap\u00e9 espec\u00edficos, o que nos permitir\u00e1 ocultar o n\u00famero de p\u00e1gina dos elementos pr\u00e9-textuais de forma simples. Sabemos que o n\u00famero de p\u00e1gina deve estar no canto superior direito do documento, em fonte Arial ou Times New Roman, tamanho 10. O primeiro passo para adicion\u00e1-lo \u00e9 exibir o cabe\u00e7alho da p\u00e1gina, clicar no espa\u00e7o correspondente e finalmente acessar o menu Inserir -> N\u00famero de P\u00e1gina . Nossos pr\u00f3ximos itens de formata\u00e7\u00e3o ser\u00e3o os t\u00edtulos. Configur\u00e1-los corretamente \u00e9 o segredo para a gera\u00e7\u00e3o do sum\u00e1rio de forma simples. Neste procedimento estaremos alterando estilos de par\u00e1grafo . Por padr\u00e3o, o LibreOffice Writer tr\u00e1s estilos espec\u00edficos para t\u00edtulos. Logo, \u00e9 mais r\u00e1pido modificar estes existentes do que criar novos. Para encontr\u00e1-los, um dos caminhos \u00e9 pela aba de estilos, filtrando por Estilos de Texto . T\u00edtulos \u00b6 Come\u00e7aremos a configura\u00e7\u00e3o pelo t\u00edtulo de primeiro n\u00edvel, que estabelece os cap\u00edtulos do documento e, pela norma, deve sempre iniciar nova p\u00e1gina. Para modificarmos o estilo T\u00edtulo 1 devemos clicar com o bot\u00e3o direito do mouse sobre ele, escolhendo a op\u00e7\u00e3o Modificar . Lembre-se que j\u00e1 apresentamos as telas de edi\u00e7\u00e3o de estilos de par\u00e1grafo . Caso n\u00e3o lembre, sugiro uma nova leitura. Os demais n\u00edveis voc\u00ea poder\u00e1 formatar utilizando como refer\u00eancia os exemplos aqui apresentados. Haver\u00e1 varia\u00e7\u00e3o do tamanho da fonte e efeitos aplicados. Revise a norma para detalhes. E, o mais importante: certifique-se de configurar os t\u00edtulos do n\u00edvel correto e de aplicar o estilo nos respectivos t\u00edtulos. Na sequ\u00eancia apresentamos os passos de configura\u00e7\u00e3o para T\u00edtulo 1 . Alinhamento do texto \u00b6 Dica Alinhar \u00e0 esquerda. Aba Alinhamento , Op\u00e7\u00f5es . Caracteres \u00b6 Dica Converter automaticamente todos os caracteres para mai\u00fasculo. Aba Efeitos da fonte , Efeitos Fonte \u00b6 Dica A norma define que a fonte seja arial ou times, tamanho 14 e um efeito, como negrito. Estas configura\u00e7\u00f5es s\u00e3o encontradas na Aba Fonte Fluxo do texto \u00b6 Dica T\u00edtulos de primeiro n\u00edvel devem iniciar nova p\u00e1gina.Aba Fluxo do texto , Quebras N\u00edvel do par\u00e1grafo \u00b6 Dica Verificar se o par\u00e1grafo est\u00e1 vinculado ao n\u00edvel 1 do texto. Esta configura\u00e7\u00e3o est\u00e1 indispon\u00edvel para edi\u00e7\u00e3o. Espa\u00e7amento \u00b6 Dica Antes ou ap\u00f3s o par\u00e1grafo deve-se deixar a dist\u00e2ncia equivalente a duas linhas de texto. No caso do t\u00edtulo de primeiro n\u00edvel, informamos somente o espa\u00e7o abaixo do par\u00e1grafo. Tal configura\u00e7\u00e3o \u00e9 feita na Aba Recuo e Espa\u00e7amento . Importante observar que, para os demais n\u00edveis, deve ser configurado o espa\u00e7o acima e abaixo do par\u00e1grofo. N\u00famera\u00e7\u00e3o dos cap\u00edtulos \u00b6 A n\u00famera\u00e7\u00e3o de t\u00edtulos deve utilizar n\u00fameros ar\u00e1bicos, identificando a sequ\u00eancia em que aparecem no documento. Considerando que voc\u00ea configurou e aplicou os estilos corretamente, iremos agora configurar a numera\u00e7\u00e3o por meio do menu Ferramentas -> Numera\u00e7\u00e3o de Cap\u00edtulos . Observe na tela acima que, no lado esquerdo, temos os 10 n\u00edveis de t\u00f3picos poss\u00edveis. Clicando sobre um deles, temos a possibilidade de configurar o n\u00famero , \u00ednicio da contagem , estilo de par\u00e1grafo associado ao n\u00edvel , estilo de caractere , mostrar subn\u00edveis e separadores . Em n\u00famero , informe a sequ\u00eancia de n\u00famero ar\u00e1bicos (1,2,3). Verifique se o estilo de par\u00e1grafo infomado condiz com \u00e0queles que voc\u00ea utilizou. Fa\u00e7a as altera\u00e7\u00f5es conforme necess\u00e1rio. No campo mostrar subn\u00edveis voc\u00ea deve informar os n\u00edveis que ir\u00e3o compor a numera\u00e7\u00e3o. Aumente este valor para o m\u00e1ximo poss\u00edvel (todos os n\u00edveis anteriores). Demais itens podem ficar com os valores padr\u00e3o. Repita a configura\u00e7\u00e3o para cada n\u00edvel existente no seu documento. Por fim, na aba Posi\u00e7\u00e3o , campo numera\u00e7\u00e3o seguida de , informe Espa\u00e7o . Sum\u00e1rio \u00b6 Uma vez configurados os estilos e numera\u00e7\u00e3o dos cap\u00edtulos, a gera\u00e7\u00e3o do sum\u00e1rio de forma autom\u00e1tica se torna poss\u00edvel. Para o procedimento, devemos ir at\u00e9 a p\u00e1gina reservada ao sum\u00e1rio na se\u00e7\u00e3o de elementos pr\u00e9-textuais. Ap\u00f3s, acessar a aba Refer\u00eancias , bot\u00e3o Refer\u00eancias que est\u00e1 a direita, opa\u00e7\u00e3o Sum\u00e1rio, \u00cdndice ou Bibliografia continua... Elementos p\u00f3s-textuais \u00b6 Refer\u00eancias \u00b6 BRITO, G. F.; CHOI, V. P.; ALMEIDA, A. Manual ABNT: Regras Gerais de Estilo e Formata\u00e7\u00e3o de Trabalhos Acad\u00eamicos (4\u00aa edi\u00e7\u00e3o revisada e ampliada). 2014. Dispon\u00edvel em: < http://biblioteca.fecap.br/wp-content/uploads/2016/03/Manual-ABNT_-regras-gerais-de-estilo-e-formata\u00e7\u00e3o-de-trabalhos-acad\u00eamicos.pdf >. Acesso em: 5 jun. 2021.","title":"ABNT"},{"location":"informatica/editores-texto/abnt/#partes-de-documento","text":"Trabalhos acad\u00eamicos tem suas partes divididas em tr\u00eas categorias: elementos pr\u00e9-textuais, elementos textuais e p\u00f3s-textuais. Vamos abordar cada um deles e apresentar dicas de como podemos configurar a formata\u00e7\u00e3o no LibreOffice Writer. Fonte: Manual ABNT: Regras Gerais de Estilo e Formata\u00e7\u00e3o de Trabalhos Acad\u00eamicos, pg. 13 De antem\u00e3o, devemos considerar que as p\u00e1ginas devem ser configuradas para formato A4 , orienta\u00e7\u00e3o retrato , e margens esquerda e superior em 3cm, direita e inferior, 2 cm . Quanto a fonte, devemos utilizar Times New Roman ou Arial em tamanho 12 para corpo do texto e 10 , para cita\u00e7\u00f5es, notas de rodap\u00e9, pagina\u00e7\u00e3o e legendas. Para configurar as p\u00e1ginas, sugiro criar estilos e, considerando a exist\u00eancia de tr\u00eas segmentos no documento (pr\u00e9-textuais, textuais e p\u00f3s-textuais), pode ser interessante realizar a cria\u00e7\u00e3o de tr\u00eas novos estilos de p\u00e1gina. Caso esteja com d\u00favidas sobre como criar tais estilos, sugiro a leitura do t\u00f3pico que falamos sobre o recurso . Ser\u00e1 importante tamb\u00e9m colocar todos os elementos pr\u00e9-textuais obrigat\u00f3rio e \u00e0queles opcionais que far\u00e3o parte do trabalho, um em cada p\u00e1gina (apenas reservar a p\u00e1gina). Assim teremos idea do n\u00famero de p\u00e1ginas utilizadas e, tamb\u00e9m, do que ser\u00e1 necess\u00e1rio configurar para gerar os \u00edndices de forma autom\u00e1tica.","title":"Partes de Documento"},{"location":"informatica/editores-texto/abnt/#elementos-pre-textuais","text":"S\u00e3o as partes do documento que antecedem o conte\u00fado do trababalho. Nesta categoria, temos:","title":"Elementos pr\u00e9-textuais"},{"location":"informatica/editores-texto/abnt/#capa","text":"Item obrigat\u00f3rio de qualquer trabalho. Identifica a institui\u00e7\u00e3o, curso, autores, t\u00edtulo e subt\u00edtulo do trabalho, local e ano de entrega. Importante lembrar que a capa n\u00e3o conta na numera\u00e7\u00e3o de p\u00e1gina (p\u00e1gina 0) e que todos os elementos pr\u00e9-textuas n\u00e3o devem apresentar a n\u00famera\u00e7\u00e3o de p\u00e1gina no rodap\u00e9.","title":"Capa"},{"location":"informatica/editores-texto/abnt/#lombada","text":"Para trabalhos encadernados, este item se torna obrigat\u00f3rio. Sua estrutura \u00e9 definida pela institui\u00e7\u00e3o.","title":"Lombada"},{"location":"informatica/editores-texto/abnt/#folha-de-rosto","text":"Sua presen\u00e7a no documento \u00e9 obrigat\u00f3ria. Tem por objetivo apresentar os elementos de identifica\u00e7\u00e3o do trabalho, como nome do autor, t\u00edtulo e subt\u00edtulo, natureza, objetivo do trabalho, nome da institui\u00e7\u00e3o, nome do orientador, local e ano de entrega.","title":"Folha de Rosto"},{"location":"informatica/editores-texto/abnt/#composicao-institucional-e-ficha-catalografica","text":"Normalmente gerada por bibliotec\u00e1rios. Ser\u00e1 preciso verificar o procedimento da institui\u00e7\u00e3o para sua obten\u00e7\u00e3o.","title":"Composi\u00e7\u00e3o Institucional e Ficha Catalogr\u00e1fica"},{"location":"informatica/editores-texto/abnt/#errata","text":"Item opcional, utilizado para adicionar a lista de erros e suas respectivas corre\u00e7\u00f5es.","title":"Errata"},{"location":"informatica/editores-texto/abnt/#folha-de-aprovacao","text":"Obrigat\u00f3ria. Deve conter detalhes dos autores, da institui\u00e7\u00e3o, t\u00edtulo pretendido e detalhes dos componentes da banca, com espa\u00e7o para assinatura.","title":"Folha de Aprova\u00e7\u00e3o"},{"location":"informatica/editores-texto/abnt/#dedicatoria","text":"Item opcional utilizado para prestar homenagens e/ou dedicar o trabalho para algu\u00e9m.","title":"Dedicat\u00f3ria"},{"location":"informatica/editores-texto/abnt/#agradecimento","text":"Item opcional utilizado para agradecer pessoas e/ou institui\u00e7\u00f5es que colaboraram de alguma forma para o desenvolvimento do trabalho.","title":"Agradecimento"},{"location":"informatica/editores-texto/abnt/#epigrafe","text":"Elemento opcional onde o autor pode fazer uma cita\u00e7\u00e3o que foi significativa no contexto do trabalho. A fonte deve ser indicada.","title":"Ep\u00edgrafe"},{"location":"informatica/editores-texto/abnt/#resumo","text":"Item obrigat\u00f3rio, escrito na l\u00edngua vern\u00e1cula (do pa\u00eds). Apresenta os pontos relevantes do documento. Acompanha ao final a lista de palavras-chave.","title":"Resumo"},{"location":"informatica/editores-texto/abnt/#resumo-em-lingua-estrangeira","text":"Corresponde ao abstract , vers\u00e3o do resumo escrito em ingl\u00eas, acompanhado das keywords (palavras-chave). \u00c9 obrigat\u00f3rio apresent\u00e1-lo.","title":"Resumo em L\u00edngua Estrangeira"},{"location":"informatica/editores-texto/abnt/#lista-de-ilustracoes","text":"\u00cdndice contendo as legendas das ilustra\u00e7\u00f5es apresentadas no texto, conforme sua ordem de apari\u00e7\u00e3o. \u00c9 opcional.","title":"Lista de Ilustra\u00e7\u00f5es"},{"location":"informatica/editores-texto/abnt/#lista-de-tabelas","text":"\u00cdndice contendo as legendas das tabelas apresentadas no texto, conforme sua ordem de apari\u00e7\u00e3o. \u00c9 opcional.","title":"Lista de Tabelas"},{"location":"informatica/editores-texto/abnt/#lista-de-abreviaturas-e-siglas","text":"Rela\u00e7\u00e3o de siglas e abreviaturas utilizadas no texto, acompanhadas dos respectivos significados. Tamb\u00e9m \u00e9 um elemento opcional.","title":"Lista de Abreviaturas e Siglas"},{"location":"informatica/editores-texto/abnt/#lista-de-simbolos","text":"Rela\u00e7\u00e3o de s\u00edmbolos utilizados e seus respectivos significados. \u00c9 opcional.","title":"Lista de S\u00edmbolos"},{"location":"informatica/editores-texto/abnt/#sumario","text":"\u00daltimo dos elementos pr\u00e9-textuais. \u00c9 obrigatorio constar no documento. Corresponde a organiza\u00e7\u00e3o de t\u00f3picos do trabalho (cap\u00edtulos, se\u00e7\u00f5es, etc), apresentadas na ordem em que aparecem com o respectivo n\u00famero de p\u00e1gina.","title":"Sum\u00e1rio"},{"location":"informatica/editores-texto/abnt/#elementos-textuais","text":"Os elementos textuais devem contemplar a Introdu\u00e7\u00e3o , Desenvolvimento e Conclus\u00e3o do trabalho e naturalmente s\u00e3o obrigat\u00f3rios. Em termos de formata\u00e7\u00e3o, os pontos mais relevantes dos elementos textuais s\u00e3o t\u00edtulos , numera\u00e7\u00e3o de p\u00e1ginas , corpo do texto , cita\u00e7\u00f5es , figuras , quadros e tabelas . Vamos come\u00e7ar analisando a quest\u00e3o da numera\u00e7\u00e3o de p\u00e1ginas. Neste ponto, precisamos saber exatamente quantas p\u00e1ginas iremos utilizar nos elementos pr\u00e9-textuais (todos os obrigat\u00f3rios e os opcionais escolhidos). Tamb\u00e9m devemos nos atentar de que a capa n\u00e3o \u00e9 contabilizada. Ent\u00e3o, para nosso tutorial, vamos supor que nosso trabalho tenha os seguintes elementos pr\u00e9-textuais: Capa Folha de Rosto Folha de Aprova\u00e7\u00e3o Agradecimentos Lista de Ilustra\u00e7\u00f5es Lista de Tabelas Resumo Abstract Sum\u00e1rio Considerando que teremos 9 p\u00e1ginas de elementos pr\u00e9-textuais e que a capa n\u00e3o entra na contagem, a numera\u00e7\u00e3o de p\u00e1ginas, que ser\u00e1 apresentada a partir da Introdu\u00e7\u00e3o , deve iniciar em 9. Para conseguirmos ocultar a numera\u00e7\u00e3o dos elementos pr\u00e9-textuais e apresentarmos a partir dos elementos textuais, devemos utilizar o recurso quebra manual de p\u00e1gina , em conjunto com os estilos de p\u00e1gina que criamos anterioremente. Antes de realizar a quebra de p\u00e1gina, voc\u00ea deve reservar as p\u00e1ginas para os elementos pr\u00e9-textuais. Utilize o atalho CTRL+ENTER para inserir nova p\u00e1gina no documento. Agora, estando com o cursor na \u00faltima p\u00e1gina dos elementos pr\u00e9-textuais (referente ao sum\u00e1rio), v\u00e1 at\u00e9 o menu Inserir -> Mais quebras -> Quebra Manual e configure os valores conforme a imagem a seguir. Perceba que iremos utilizar o estilo de p\u00e1gina que criamos, alterando a sequ\u00eancia de numera\u00e7\u00e3o para 9 . As quebras de p\u00e1gina s\u00e3o extrememente \u00fateis porque definem regi\u00f5es do documento em que podemos aplicar estilos de p\u00e1gina diferentes. Al\u00e9m disso, cada regi\u00e3o ter\u00e1 cabe\u00e7alho e rodap\u00e9 espec\u00edficos, o que nos permitir\u00e1 ocultar o n\u00famero de p\u00e1gina dos elementos pr\u00e9-textuais de forma simples. Sabemos que o n\u00famero de p\u00e1gina deve estar no canto superior direito do documento, em fonte Arial ou Times New Roman, tamanho 10. O primeiro passo para adicion\u00e1-lo \u00e9 exibir o cabe\u00e7alho da p\u00e1gina, clicar no espa\u00e7o correspondente e finalmente acessar o menu Inserir -> N\u00famero de P\u00e1gina . Nossos pr\u00f3ximos itens de formata\u00e7\u00e3o ser\u00e3o os t\u00edtulos. Configur\u00e1-los corretamente \u00e9 o segredo para a gera\u00e7\u00e3o do sum\u00e1rio de forma simples. Neste procedimento estaremos alterando estilos de par\u00e1grafo . Por padr\u00e3o, o LibreOffice Writer tr\u00e1s estilos espec\u00edficos para t\u00edtulos. Logo, \u00e9 mais r\u00e1pido modificar estes existentes do que criar novos. Para encontr\u00e1-los, um dos caminhos \u00e9 pela aba de estilos, filtrando por Estilos de Texto .","title":"Elementos textuais"},{"location":"informatica/editores-texto/abnt/#titulos","text":"Come\u00e7aremos a configura\u00e7\u00e3o pelo t\u00edtulo de primeiro n\u00edvel, que estabelece os cap\u00edtulos do documento e, pela norma, deve sempre iniciar nova p\u00e1gina. Para modificarmos o estilo T\u00edtulo 1 devemos clicar com o bot\u00e3o direito do mouse sobre ele, escolhendo a op\u00e7\u00e3o Modificar . Lembre-se que j\u00e1 apresentamos as telas de edi\u00e7\u00e3o de estilos de par\u00e1grafo . Caso n\u00e3o lembre, sugiro uma nova leitura. Os demais n\u00edveis voc\u00ea poder\u00e1 formatar utilizando como refer\u00eancia os exemplos aqui apresentados. Haver\u00e1 varia\u00e7\u00e3o do tamanho da fonte e efeitos aplicados. Revise a norma para detalhes. E, o mais importante: certifique-se de configurar os t\u00edtulos do n\u00edvel correto e de aplicar o estilo nos respectivos t\u00edtulos. Na sequ\u00eancia apresentamos os passos de configura\u00e7\u00e3o para T\u00edtulo 1 .","title":"T\u00edtulos"},{"location":"informatica/editores-texto/abnt/#alinhamento-do-texto","text":"Dica Alinhar \u00e0 esquerda. Aba Alinhamento , Op\u00e7\u00f5es .","title":"Alinhamento do texto"},{"location":"informatica/editores-texto/abnt/#caracteres","text":"Dica Converter automaticamente todos os caracteres para mai\u00fasculo. Aba Efeitos da fonte , Efeitos","title":"Caracteres"},{"location":"informatica/editores-texto/abnt/#fonte","text":"Dica A norma define que a fonte seja arial ou times, tamanho 14 e um efeito, como negrito. Estas configura\u00e7\u00f5es s\u00e3o encontradas na Aba Fonte","title":"Fonte"},{"location":"informatica/editores-texto/abnt/#fluxo-do-texto","text":"Dica T\u00edtulos de primeiro n\u00edvel devem iniciar nova p\u00e1gina.Aba Fluxo do texto , Quebras","title":"Fluxo do texto"},{"location":"informatica/editores-texto/abnt/#nivel-do-paragrafo","text":"Dica Verificar se o par\u00e1grafo est\u00e1 vinculado ao n\u00edvel 1 do texto. Esta configura\u00e7\u00e3o est\u00e1 indispon\u00edvel para edi\u00e7\u00e3o.","title":"N\u00edvel do par\u00e1grafo"},{"location":"informatica/editores-texto/abnt/#espacamento","text":"Dica Antes ou ap\u00f3s o par\u00e1grafo deve-se deixar a dist\u00e2ncia equivalente a duas linhas de texto. No caso do t\u00edtulo de primeiro n\u00edvel, informamos somente o espa\u00e7o abaixo do par\u00e1grafo. Tal configura\u00e7\u00e3o \u00e9 feita na Aba Recuo e Espa\u00e7amento . Importante observar que, para os demais n\u00edveis, deve ser configurado o espa\u00e7o acima e abaixo do par\u00e1grofo.","title":"Espa\u00e7amento"},{"location":"informatica/editores-texto/abnt/#numeracao-dos-capitulos","text":"A n\u00famera\u00e7\u00e3o de t\u00edtulos deve utilizar n\u00fameros ar\u00e1bicos, identificando a sequ\u00eancia em que aparecem no documento. Considerando que voc\u00ea configurou e aplicou os estilos corretamente, iremos agora configurar a numera\u00e7\u00e3o por meio do menu Ferramentas -> Numera\u00e7\u00e3o de Cap\u00edtulos . Observe na tela acima que, no lado esquerdo, temos os 10 n\u00edveis de t\u00f3picos poss\u00edveis. Clicando sobre um deles, temos a possibilidade de configurar o n\u00famero , \u00ednicio da contagem , estilo de par\u00e1grafo associado ao n\u00edvel , estilo de caractere , mostrar subn\u00edveis e separadores . Em n\u00famero , informe a sequ\u00eancia de n\u00famero ar\u00e1bicos (1,2,3). Verifique se o estilo de par\u00e1grafo infomado condiz com \u00e0queles que voc\u00ea utilizou. Fa\u00e7a as altera\u00e7\u00f5es conforme necess\u00e1rio. No campo mostrar subn\u00edveis voc\u00ea deve informar os n\u00edveis que ir\u00e3o compor a numera\u00e7\u00e3o. Aumente este valor para o m\u00e1ximo poss\u00edvel (todos os n\u00edveis anteriores). Demais itens podem ficar com os valores padr\u00e3o. Repita a configura\u00e7\u00e3o para cada n\u00edvel existente no seu documento. Por fim, na aba Posi\u00e7\u00e3o , campo numera\u00e7\u00e3o seguida de , informe Espa\u00e7o .","title":"N\u00famera\u00e7\u00e3o dos cap\u00edtulos"},{"location":"informatica/editores-texto/abnt/#sumario_1","text":"Uma vez configurados os estilos e numera\u00e7\u00e3o dos cap\u00edtulos, a gera\u00e7\u00e3o do sum\u00e1rio de forma autom\u00e1tica se torna poss\u00edvel. Para o procedimento, devemos ir at\u00e9 a p\u00e1gina reservada ao sum\u00e1rio na se\u00e7\u00e3o de elementos pr\u00e9-textuais. Ap\u00f3s, acessar a aba Refer\u00eancias , bot\u00e3o Refer\u00eancias que est\u00e1 a direita, opa\u00e7\u00e3o Sum\u00e1rio, \u00cdndice ou Bibliografia continua...","title":"Sum\u00e1rio"},{"location":"informatica/editores-texto/abnt/#elementos-pos-textuais","text":"","title":"Elementos p\u00f3s-textuais"},{"location":"informatica/editores-texto/abnt/#referencias","text":"BRITO, G. F.; CHOI, V. P.; ALMEIDA, A. Manual ABNT: Regras Gerais de Estilo e Formata\u00e7\u00e3o de Trabalhos Acad\u00eamicos (4\u00aa edi\u00e7\u00e3o revisada e ampliada). 2014. Dispon\u00edvel em: < http://biblioteca.fecap.br/wp-content/uploads/2016/03/Manual-ABNT_-regras-gerais-de-estilo-e-formata\u00e7\u00e3o-de-trabalhos-acad\u00eamicos.pdf >. Acesso em: 5 jun. 2021.","title":"Refer\u00eancias"},{"location":"informatica/editores-texto/estilos/","text":"Certamente um dos recursos mais \u00fateis e importantes do Writer assim como de outros editores de texto s\u00e3o os estilos. Os estilos s\u00e3o recursos b\u00e1sicos, que permitem a formata\u00e7\u00e3o do texto de forma simples e consistente. Uma vez aplicado o estilo, tudo grupo de formata\u00e7\u00f5es associado \u00e9 aplicado de uma \u00fanica vez. Da mesma forma, altera\u00e7\u00f5es no estilo t\u00eam impacto direto em todos os locais em que o estilo foi aplicado no documento, tornando o processo de modifica\u00e7\u00f5es de formato muito mais simples. Al\u00e9m disso, os estilos s\u00e3o utilizados para automatizar a gera\u00e7\u00e3o de tabelas de conte\u00fado, como sum\u00e1rios, lista de figuras, lista de tabelas. Trabalhando com estilos \u00b6 Os estilos s\u00e3o particularmente \u00fateis na escrita de documentos com muitas p\u00e1ginas e/ou baseados em algum modelo. Alguns usu\u00e1rios aplicam formata\u00e7\u00e3o de par\u00e1grafo para cada trecho do documento que precisa respeitar a mesma est\u00e9tica. Embora produza o resultado esperado, \u00e9 mais demorado e propenso a erros. Imagine que voc\u00ea tenha formatado um documento de 200 p\u00e1ginas e na \u00faltima percebeu que o tamanho do corpo do texto deveria ser 11 e n\u00e3o 12, como est\u00e1. O que fazer? Sem utilizar estilos, a \u00fanica op\u00e7\u00e3o \u00e9 aplicar a formata\u00e7\u00e3o novamente em todos os trechos necess\u00e1rios. J\u00e1 se utilizarmos estilos, basta editar a configura\u00e7\u00e3o do estilo e aplicar a altera\u00e7\u00e3o. Automaticamente todos os trechos associado \u00e0quele estilo ser\u00e1 atualizados. Da\u00ed a import\u00e2ncia de sabermos como utilizar este importante recurso. O Writer oferece estilos para caracteres , par\u00e1grafos , p\u00e1ginas , quadros , tabelas e listas . Para cada um deles pode-se configurar uma ampla quantidade de par\u00e2metros de formata\u00e7\u00e3o associados. Na sequ\u00eancia, as principais destas categorias de estilo ser\u00e3o descritas de forma detalhada. Estilos de Par\u00e1grafo \u00b6 Estilos de par\u00e1grafo controlam todos os aspectos de apar\u00eancia de um par\u00e1grafo de texto, como alinhamento, paradas de tabula\u00e7\u00e3o, espa\u00e7amento entrelinhas, bordas, espa\u00e7amento antes e ap\u00f3s o par\u00e1grafo, recuo de primeira linha, entre outros. Para adicionar um novo estilo de par\u00e1grafo ao documento, o usu\u00e1rio deve acessar o Gerenciador de Estilos , o qual encontra-se no menu Estilos . Ao ativar o gerenciador, uma janela \u00e9 apresentada encaixada \u00e0 direita da tela de trabalho. Nela apresentam-se todas as categorias de estilo, bem como os estilos existentes para elas. Para criar um estilo de par\u00e1grafo, devemos clicar com o bot\u00e3o direito no Gerenciador de Estilos , estando selecionado a op\u00e7\u00e3o Estilos de Par\u00e1grafo , op\u00e7\u00e3o Novo . Ao concluir o procedimento, a janela de configura\u00e7\u00e3o do novo estilo ser\u00e1 exibida. Voc\u00ea ir\u00e1 perceber que o n\u00famero de configura\u00e7\u00f5es \u00e9 consider\u00e1vel. Iremos tentar explorar as principais na sequ\u00eancia. Aba Organizador \u00b6 Permite configurar o nome do novo estilo, que \u00e9 uma informa\u00e7\u00e3o obrigat\u00f3ria. Este nome deve ser suficientemente autodescritivo, de modo que possa indicar claramente sua aplicabilidade no documento. A configura\u00e7\u00e3o Autoatualizar deve ser utilizada se h\u00e1 interesse de que, quando aplicada uma formata\u00e7\u00e3o direta ao par\u00e1grafo, todos os demais par\u00e1grafos associados ao estilo recebam tal formata\u00e7\u00e3o de forma autom\u00e1tica. Pr\u00f3ximo estilo refere-se ao pr\u00f3ximo estilo de par\u00e1grafo aplicado assim que o usu\u00e1rio pressionar a tecla Enter estando em um par\u00e1grafo do estilo atual. \u00c9 uma configura\u00e7\u00e3o muito \u00fatil para automatizar o fluxo de estilos de um documento. H\u00e1 tamb\u00e9m a possibilidade de herdar propriedades de outros estilos preexistentes e de se associar o novo estilo a uma das categorias dispon\u00edveis. Aba Recuos e Espa\u00e7amento \u00b6 Aqui configuramos o distanciamento (recuo) do par\u00e1grafo em rela\u00e7\u00e3o \u00e0s margens esquerda e direita, bem como o recuo de primeira linha que deve ser aplicado. \u00c9 poss\u00edvel aplicar medidas utilizando unidades como pontos (pt), cent\u00edmetros (cm), mil\u00edmetros (mm), metros (m), entre outras. Assim que o campo perde o foco, a ferramenta automaticamente converte a medida informada para cent\u00edmetros. Outro recurso \u00e9 o espa\u00e7amentos antes e ap\u00f3s o par\u00e1grafo. Caso este distanciamento deva ocorrer apenas quando o pr\u00f3ximo par\u00e1grafo for de um estilo diferente, ent\u00e3o deve-se marcar a op\u00e7\u00e3o N\u00e3o adicionar espa\u00e7os entre os par\u00e1grafos do mesmo estilo . O espa\u00e7o entre as linhas do par\u00e1grafo \u00e9 outra configura\u00e7\u00e3o dispon\u00edvel, que pode ser um dos valores predefinidos, como simples, 1.5 linhas, duplo, proporcional (100% equivale ao espa\u00e7amento simples), entre outros. Aba Alinhamento \u00b6 Especifica o alinhamento do par\u00e1grafo quando aplicado o estilo. Os alinhamentos dispon\u00edveis s\u00e3o esquerda , direita , centralizado e justificar . \u00c9 poss\u00edvel definir tamb\u00e9m um alinhamento espec\u00edfico para a \u00faltima linha do par\u00e1grafo, que pode diferir das anteriores. Pode-se tamb\u00e9m adicionar outras configura\u00e7\u00f5es de alinhamento relacionadas a idiomas asi\u00e1ticos, caracteres subdimensionados e superdimensionados e de dire\u00e7\u00e3o de entrada. Aba Fonte \u00b6 As op\u00e7\u00f5es de formata\u00e7\u00e3o de fonte compreendem a fam\u00edlia, estilo, tamanho (em pontos) e idioma. Aba Efeitos da Fonte \u00b6 Efeitos da fonte, por sua vez, apresenta configura\u00e7\u00f5es relacionadas a efeitos, como cor, relevo, tachado, sublinhado, sobrelinhas, sombra e contorno. \u00c9 poss\u00edvel, por exemplo, definir que todas as letras ser\u00e3o convertidas para mai\u00fasculo, min\u00fasculo ou mesmo para t\u00edtulo, onde a inicial de cada palavra \u00e9 posta em mai\u00fasculo e as demais letras em min\u00fasculo. Aba Posi\u00e7\u00e3o \u00b6 Configurar a posi\u00e7\u00e3o dos caracteres do par\u00e1grafo refere-se \u00e0 mudan\u00e7a para sobrescrita, subscrita ou posi\u00e7\u00e3o normal de escrita. Quando informado sobrescrito ou subscrito, pode-se informar o percentual de deslocamento para cima ou para baixo em rela\u00e7\u00e3o a linha base. Outra configura\u00e7\u00e3o interessante \u00e9 a possibilidade de rotacionar e/ou dimensionar caracteres de diversas formas. Aba Estruturas de T\u00f3picos \u00b6 A configura\u00e7\u00e3o de estrutura de t\u00f3picos \u00e9 um recurso de grande valia para gera\u00e7\u00e3o de sum\u00e1rio autom\u00e1tico, por exemplo. Isso porque todo estilo de par\u00e1grafo est\u00e1 vinculado a um n\u00edvel de estrutura espec\u00edfico do texto, que ao todo s\u00e3o 11. Dentre estes 11 n\u00edveis consta o Corpo do Texto , que refere-se ao conte\u00fado escrito e que n\u00e3o tem rela\u00e7\u00e3o com a hierarquia de t\u00edtulos do documento. Os demais 10 n\u00edveis, nomeados de N\u00edvel 1 a N\u00edvel 10 , compreendem toda hierarquia de estrutura de t\u00edtulos. Deste modo, se um determinado estilo for vinculado ao N\u00edvel 2 , ele automaticamente indicar\u00e1 que o conte\u00fado do par\u00e1grafo corresponde a um t\u00edtulo de n\u00edvel 2 no documento. Na configura\u00e7\u00e3o de Numera\u00e7\u00e3o especificamos qual \u00e9 o estilo de lista utilizado para numerar o par\u00e1grafo. Tamb\u00e9m \u00e9 poss\u00edvel habilitar e configurar a numera\u00e7\u00e3o das linhas do par\u00e1grafo, recurso muito interessante para reda\u00e7\u00e3o de atas, por exemplo. No caso da gera\u00e7\u00e3o de sum\u00e1rio autom\u00e1tico, cria-se um estilo para cada um dos 10 n\u00edveis da estrutura de t\u00f3picos, associando-os com um estilo de lista espec\u00edfico. Feito isso, basta configurar o documento para fazer uso dos estilos criados para numerar os diferentes cap\u00edtulos. Tal configura\u00e7\u00e3o \u00e9 feita por meio do menu Ferramentas-> Numera\u00e7\u00e3o de Cap\u00edtulos , o qual d\u00e1 acesso \u00e0 janela de configura\u00e7\u00f5es. Estilos de Caracteres \u00b6 Estilos de caractere permitem definir formata\u00e7\u00e3o espec\u00edfica para um \u00fanico caractere ou palavra em meio a um par\u00e1grafo. Tal qual ocorre com os estilos de par\u00e1grafo, a cria\u00e7\u00e3o de um estilo de caractere \u00e9 feito clicando-se com o bot\u00e3o direito sobre a \u00e1rea branco do Gerenciador de Estilos , naturalmente estando agora na categoria Estilos de Caractere , selecionando a op\u00e7\u00e3o Novo . As principais op\u00e7\u00f5es de configura\u00e7\u00e3o de estilos de caractere s\u00e3o oferecidas pelas abas Organizador , Fonte , Efeito de Fonte e Posi\u00e7\u00e3o , todas elas j\u00e1 abordadas em detalhes. Estilos de P\u00e1gina \u00b6 Assim como par\u00e1grafos e caracteres, as p\u00e1ginas de um documento tamb\u00e9m podem receber estilos de formata\u00e7\u00e3o. Normalmente os estilos de p\u00e1gina s\u00e3o \u00fateis para configurar margens, orienta\u00e7\u00e3o, bordas e a apar\u00eancia do cabe\u00e7alho, rodap\u00e9 e notas de rodap\u00e9. O procedimento utilizado para criar um novo estilo de p\u00e1gina segue o mesmo procedimento dos estilos de caractere e par\u00e1grafo. H\u00e1, contudo, altera\u00e7\u00f5es substanciais nas op\u00e7\u00f5es de formata\u00e7\u00e3o que podem ser configuradas, conforme podemos ver na tela a seguir. Aba P\u00e1gina \u00b6 As configura\u00e7\u00f5es de p\u00e1gina v\u00e3o desde aspectos b\u00e1sicos, como formato do papel, margens e orienta\u00e7\u00e3o a configura\u00e7\u00f5es mais avan\u00e7adas de leiaute, como estilos vinculados somente \u00e0s p\u00e1ginas da direita ou da esquerda e o tipo de numera\u00e7\u00e3o a ser utilizado. Um mesmo documento pode apresentar diversos estilos de p\u00e1gina vinculados, em primeiro momento, pela possibilidade de um estilo de p\u00e1gina vincular-se a um pr\u00f3ximo estilo ( Aba Organizador ) e, em segundo momento, pela possibilidade de sec\u00e7\u00e3o do documento em diferentes partes l\u00f3gicas. Este processo de seccionamento \u00e9 feito pelo menu Inserir -> Quebra Manual . Dentre as op\u00e7\u00f5es oferecidas (quebra de linha, coluna e p\u00e1gina), a quebra de p\u00e1gina permite, a partir da posi\u00e7\u00e3o do cursor, modificar o fluxo de estilos de p\u00e1gina aplicados. As quebras de p\u00e1gina s\u00e3o necess\u00e1rias pois representam o \u00fanico meio de alterar os fluxos de estilo sem modificar o documento integralmente, afinal inicialmente o documento encontra-se integralmente dentro de uma \u00fanica se\u00e7\u00e3o de conte\u00fado. Aba \u00c1rea \u00b6 Permite configurar o preenchimento de fundo da p\u00e1gina. Comumente nenhum preenchimento \u00e9 utilizado, mas a ferramenta Writer permite utilizar preenchimentos de diferentes categorias, como Cor , Gradiente , Bitmap , Padronagem e Hachurado . Para ilustrar, imagem a seguir apresenta a op\u00e7\u00e3o preenchimento de \u00e1rea por hachuras. Aba Transpar\u00eancia \u00b6 Sendo poss\u00edvel aplicar diferentes tipos de preenchimento \u00e0 \u00e1rea da p\u00e1gina, podemos tamb\u00e9m aplicar diferentes estrat\u00e9gias de transpar\u00eancia, como gradiente, padr\u00e3o ou simplesmente nenhuma. Importante considerar que a transpar\u00eancia tem por efeito tornar gradualmente vis\u00edvel aquilo que encontra-se atr\u00e1s do preenchimento e que a escala de valores inicia em 0%, indicando total opacidade at\u00e9 100%, conferindo total transpar\u00eancia \u00e0 \u00e1rea. Aba Cabe\u00e7alho e Aba Rodap\u00e9 \u00b6 Cabe\u00e7alhos e rodap\u00e9s s\u00e3o \u00e1reas nas margens superior e inferior das p\u00e1ginas para adicionar textos ou figuras. Os cabe\u00e7alhos e rodap\u00e9s s\u00e3o adicionados ao estilo de p\u00e1gina atual. Todas as p\u00e1ginas que usarem o mesmo estilo receber\u00e3o automaticamente o cabe\u00e7alho ou rodap\u00e9 adicionado. \u00c9 poss\u00edvel inserir campos, tais como n\u00fameros de p\u00e1ginas e t\u00edtulos de cap\u00edtulos, nos cabe\u00e7alhos e rodap\u00e9s de um documento de texto. Quando configuramos cabe\u00e7alho e rodap\u00e9 no estilo de p\u00e1gina, estamos informando a apar\u00eancia e formato que tais estruturas ter\u00e3o nas p\u00e1ginas onde o estilo em quest\u00e3o for aplicado. Cabe\u00e7alho e rodap\u00e9 s\u00e3o estruturas opcionais, podendo ser exibidas ou n\u00e3o no documento. Os principais atributos de formata\u00e7\u00e3o relacionados aos cabe\u00e7alhos s\u00e3o a repeti\u00e7\u00e3o do conte\u00fado, tanto em p\u00e1ginas da esquerda quanto da direita e se a primeira p\u00e1gina ter\u00e1 o mesmo conte\u00fado que as demais. Adicionalmente tamb\u00e9m \u00e9 poss\u00edvel especificar as margens do cabe\u00e7alho (esquerda e direita). Para rodap\u00e9, os mesmos atributos de formata\u00e7\u00e3o de cabe\u00e7alho s\u00e3o aplicados. Aba Bordas \u00b6 Bordas s\u00e3o contornos aplicados a diferentes objetos, dentre eles, \u00e0s p\u00e1ginas. Na configura\u00e7\u00e3o de bordas pode-se especificar quais dos lados a borda estar\u00e1 ativa. Quando ativa, \u00e9 poss\u00edvel tamb\u00e9m determinar o tipo de linha, espessura, cor, dist\u00e2ncia em rela\u00e7\u00e3o ao conte\u00fado e efeito de sombra. Todas as op\u00e7\u00f5es dispon\u00edveis s\u00e3o apresentadas na aba Bordas . Aba Colunas \u00b6 O espa\u00e7o contido entre as margens, que \u00e9 destinado ao conte\u00fado do documento, a depender do estilo da p\u00e1gina, pode ser subdividido em colunas, na quantidade que o usu\u00e1rio desejar. Quando a quantidade de colunas for superior a 1 (um), torna-se poss\u00edvel configurar a largura de cada uma das colunas, espa\u00e7amento entre as mesmas e eventualmente as caracter\u00edsticas da linha que as separa. Aba Notas de Rodap\u00e9 \u00b6 Por vezes, na constru\u00e7\u00e3o de um documento de texto, torna-se conveniente adicionar uma anota\u00e7\u00e3o explicativa ao p\u00e9 da p\u00e1gina. Comumente tal anota\u00e7\u00e3o est\u00e1 diretamente vinculada a uma palavra ou trecho de par\u00e1grafo da p\u00e1gina em que se encontra. A este recurso tipogr\u00e1fico chamamos de nota de rodap\u00e9 . No Writer, as configura\u00e7\u00f5es de formata\u00e7\u00e3o das notas de rodap\u00e9 s\u00e3o feitas por meio dos estilos de p\u00e1gina. As op\u00e7\u00f5es de formata\u00e7\u00e3o oferecidas permitem controlar a \u00e1rea reservada para as notas e a configura\u00e7\u00e3o da linha separadora, que estabelece a divisa entre o texto e as suas respectivas notas. Com rela\u00e7\u00e3o \u00e0 linha separadora, \u00e9 poss\u00edvel especificar a posi\u00e7\u00e3o horizontal da mesma, sua espessura, cor, comprimento e distanciamento em rela\u00e7\u00e3o a primeira nota. Refer\u00eancias \u00b6 The Document Foundation. Ajuda do LibreOffice 7.1 . Dispon\u00edvel em https://help.libreoffice.org/latest/pt-BR/text/shared/05/new_help.html?&DbPAR=WRITER . Acesso em 21 mai. 2021.","title":"Estilos"},{"location":"informatica/editores-texto/estilos/#trabalhando-com-estilos","text":"Os estilos s\u00e3o particularmente \u00fateis na escrita de documentos com muitas p\u00e1ginas e/ou baseados em algum modelo. Alguns usu\u00e1rios aplicam formata\u00e7\u00e3o de par\u00e1grafo para cada trecho do documento que precisa respeitar a mesma est\u00e9tica. Embora produza o resultado esperado, \u00e9 mais demorado e propenso a erros. Imagine que voc\u00ea tenha formatado um documento de 200 p\u00e1ginas e na \u00faltima percebeu que o tamanho do corpo do texto deveria ser 11 e n\u00e3o 12, como est\u00e1. O que fazer? Sem utilizar estilos, a \u00fanica op\u00e7\u00e3o \u00e9 aplicar a formata\u00e7\u00e3o novamente em todos os trechos necess\u00e1rios. J\u00e1 se utilizarmos estilos, basta editar a configura\u00e7\u00e3o do estilo e aplicar a altera\u00e7\u00e3o. Automaticamente todos os trechos associado \u00e0quele estilo ser\u00e1 atualizados. Da\u00ed a import\u00e2ncia de sabermos como utilizar este importante recurso. O Writer oferece estilos para caracteres , par\u00e1grafos , p\u00e1ginas , quadros , tabelas e listas . Para cada um deles pode-se configurar uma ampla quantidade de par\u00e2metros de formata\u00e7\u00e3o associados. Na sequ\u00eancia, as principais destas categorias de estilo ser\u00e3o descritas de forma detalhada.","title":"Trabalhando com estilos"},{"location":"informatica/editores-texto/estilos/#estilos-de-paragrafo","text":"Estilos de par\u00e1grafo controlam todos os aspectos de apar\u00eancia de um par\u00e1grafo de texto, como alinhamento, paradas de tabula\u00e7\u00e3o, espa\u00e7amento entrelinhas, bordas, espa\u00e7amento antes e ap\u00f3s o par\u00e1grafo, recuo de primeira linha, entre outros. Para adicionar um novo estilo de par\u00e1grafo ao documento, o usu\u00e1rio deve acessar o Gerenciador de Estilos , o qual encontra-se no menu Estilos . Ao ativar o gerenciador, uma janela \u00e9 apresentada encaixada \u00e0 direita da tela de trabalho. Nela apresentam-se todas as categorias de estilo, bem como os estilos existentes para elas. Para criar um estilo de par\u00e1grafo, devemos clicar com o bot\u00e3o direito no Gerenciador de Estilos , estando selecionado a op\u00e7\u00e3o Estilos de Par\u00e1grafo , op\u00e7\u00e3o Novo . Ao concluir o procedimento, a janela de configura\u00e7\u00e3o do novo estilo ser\u00e1 exibida. Voc\u00ea ir\u00e1 perceber que o n\u00famero de configura\u00e7\u00f5es \u00e9 consider\u00e1vel. Iremos tentar explorar as principais na sequ\u00eancia.","title":"Estilos de Par\u00e1grafo"},{"location":"informatica/editores-texto/estilos/#aba-organizador","text":"Permite configurar o nome do novo estilo, que \u00e9 uma informa\u00e7\u00e3o obrigat\u00f3ria. Este nome deve ser suficientemente autodescritivo, de modo que possa indicar claramente sua aplicabilidade no documento. A configura\u00e7\u00e3o Autoatualizar deve ser utilizada se h\u00e1 interesse de que, quando aplicada uma formata\u00e7\u00e3o direta ao par\u00e1grafo, todos os demais par\u00e1grafos associados ao estilo recebam tal formata\u00e7\u00e3o de forma autom\u00e1tica. Pr\u00f3ximo estilo refere-se ao pr\u00f3ximo estilo de par\u00e1grafo aplicado assim que o usu\u00e1rio pressionar a tecla Enter estando em um par\u00e1grafo do estilo atual. \u00c9 uma configura\u00e7\u00e3o muito \u00fatil para automatizar o fluxo de estilos de um documento. H\u00e1 tamb\u00e9m a possibilidade de herdar propriedades de outros estilos preexistentes e de se associar o novo estilo a uma das categorias dispon\u00edveis.","title":"Aba Organizador"},{"location":"informatica/editores-texto/estilos/#aba-recuos-e-espacamento","text":"Aqui configuramos o distanciamento (recuo) do par\u00e1grafo em rela\u00e7\u00e3o \u00e0s margens esquerda e direita, bem como o recuo de primeira linha que deve ser aplicado. \u00c9 poss\u00edvel aplicar medidas utilizando unidades como pontos (pt), cent\u00edmetros (cm), mil\u00edmetros (mm), metros (m), entre outras. Assim que o campo perde o foco, a ferramenta automaticamente converte a medida informada para cent\u00edmetros. Outro recurso \u00e9 o espa\u00e7amentos antes e ap\u00f3s o par\u00e1grafo. Caso este distanciamento deva ocorrer apenas quando o pr\u00f3ximo par\u00e1grafo for de um estilo diferente, ent\u00e3o deve-se marcar a op\u00e7\u00e3o N\u00e3o adicionar espa\u00e7os entre os par\u00e1grafos do mesmo estilo . O espa\u00e7o entre as linhas do par\u00e1grafo \u00e9 outra configura\u00e7\u00e3o dispon\u00edvel, que pode ser um dos valores predefinidos, como simples, 1.5 linhas, duplo, proporcional (100% equivale ao espa\u00e7amento simples), entre outros.","title":"Aba Recuos e Espa\u00e7amento"},{"location":"informatica/editores-texto/estilos/#aba-alinhamento","text":"Especifica o alinhamento do par\u00e1grafo quando aplicado o estilo. Os alinhamentos dispon\u00edveis s\u00e3o esquerda , direita , centralizado e justificar . \u00c9 poss\u00edvel definir tamb\u00e9m um alinhamento espec\u00edfico para a \u00faltima linha do par\u00e1grafo, que pode diferir das anteriores. Pode-se tamb\u00e9m adicionar outras configura\u00e7\u00f5es de alinhamento relacionadas a idiomas asi\u00e1ticos, caracteres subdimensionados e superdimensionados e de dire\u00e7\u00e3o de entrada.","title":"Aba Alinhamento"},{"location":"informatica/editores-texto/estilos/#aba-fonte","text":"As op\u00e7\u00f5es de formata\u00e7\u00e3o de fonte compreendem a fam\u00edlia, estilo, tamanho (em pontos) e idioma.","title":"Aba Fonte"},{"location":"informatica/editores-texto/estilos/#aba-efeitos-da-fonte","text":"Efeitos da fonte, por sua vez, apresenta configura\u00e7\u00f5es relacionadas a efeitos, como cor, relevo, tachado, sublinhado, sobrelinhas, sombra e contorno. \u00c9 poss\u00edvel, por exemplo, definir que todas as letras ser\u00e3o convertidas para mai\u00fasculo, min\u00fasculo ou mesmo para t\u00edtulo, onde a inicial de cada palavra \u00e9 posta em mai\u00fasculo e as demais letras em min\u00fasculo.","title":"Aba Efeitos da Fonte"},{"location":"informatica/editores-texto/estilos/#aba-posicao","text":"Configurar a posi\u00e7\u00e3o dos caracteres do par\u00e1grafo refere-se \u00e0 mudan\u00e7a para sobrescrita, subscrita ou posi\u00e7\u00e3o normal de escrita. Quando informado sobrescrito ou subscrito, pode-se informar o percentual de deslocamento para cima ou para baixo em rela\u00e7\u00e3o a linha base. Outra configura\u00e7\u00e3o interessante \u00e9 a possibilidade de rotacionar e/ou dimensionar caracteres de diversas formas.","title":"Aba Posi\u00e7\u00e3o"},{"location":"informatica/editores-texto/estilos/#aba-estruturas-de-topicos","text":"A configura\u00e7\u00e3o de estrutura de t\u00f3picos \u00e9 um recurso de grande valia para gera\u00e7\u00e3o de sum\u00e1rio autom\u00e1tico, por exemplo. Isso porque todo estilo de par\u00e1grafo est\u00e1 vinculado a um n\u00edvel de estrutura espec\u00edfico do texto, que ao todo s\u00e3o 11. Dentre estes 11 n\u00edveis consta o Corpo do Texto , que refere-se ao conte\u00fado escrito e que n\u00e3o tem rela\u00e7\u00e3o com a hierarquia de t\u00edtulos do documento. Os demais 10 n\u00edveis, nomeados de N\u00edvel 1 a N\u00edvel 10 , compreendem toda hierarquia de estrutura de t\u00edtulos. Deste modo, se um determinado estilo for vinculado ao N\u00edvel 2 , ele automaticamente indicar\u00e1 que o conte\u00fado do par\u00e1grafo corresponde a um t\u00edtulo de n\u00edvel 2 no documento. Na configura\u00e7\u00e3o de Numera\u00e7\u00e3o especificamos qual \u00e9 o estilo de lista utilizado para numerar o par\u00e1grafo. Tamb\u00e9m \u00e9 poss\u00edvel habilitar e configurar a numera\u00e7\u00e3o das linhas do par\u00e1grafo, recurso muito interessante para reda\u00e7\u00e3o de atas, por exemplo. No caso da gera\u00e7\u00e3o de sum\u00e1rio autom\u00e1tico, cria-se um estilo para cada um dos 10 n\u00edveis da estrutura de t\u00f3picos, associando-os com um estilo de lista espec\u00edfico. Feito isso, basta configurar o documento para fazer uso dos estilos criados para numerar os diferentes cap\u00edtulos. Tal configura\u00e7\u00e3o \u00e9 feita por meio do menu Ferramentas-> Numera\u00e7\u00e3o de Cap\u00edtulos , o qual d\u00e1 acesso \u00e0 janela de configura\u00e7\u00f5es.","title":"Aba Estruturas de T\u00f3picos"},{"location":"informatica/editores-texto/estilos/#estilos-de-caracteres","text":"Estilos de caractere permitem definir formata\u00e7\u00e3o espec\u00edfica para um \u00fanico caractere ou palavra em meio a um par\u00e1grafo. Tal qual ocorre com os estilos de par\u00e1grafo, a cria\u00e7\u00e3o de um estilo de caractere \u00e9 feito clicando-se com o bot\u00e3o direito sobre a \u00e1rea branco do Gerenciador de Estilos , naturalmente estando agora na categoria Estilos de Caractere , selecionando a op\u00e7\u00e3o Novo . As principais op\u00e7\u00f5es de configura\u00e7\u00e3o de estilos de caractere s\u00e3o oferecidas pelas abas Organizador , Fonte , Efeito de Fonte e Posi\u00e7\u00e3o , todas elas j\u00e1 abordadas em detalhes.","title":"Estilos de Caracteres"},{"location":"informatica/editores-texto/estilos/#estilos-de-pagina","text":"Assim como par\u00e1grafos e caracteres, as p\u00e1ginas de um documento tamb\u00e9m podem receber estilos de formata\u00e7\u00e3o. Normalmente os estilos de p\u00e1gina s\u00e3o \u00fateis para configurar margens, orienta\u00e7\u00e3o, bordas e a apar\u00eancia do cabe\u00e7alho, rodap\u00e9 e notas de rodap\u00e9. O procedimento utilizado para criar um novo estilo de p\u00e1gina segue o mesmo procedimento dos estilos de caractere e par\u00e1grafo. H\u00e1, contudo, altera\u00e7\u00f5es substanciais nas op\u00e7\u00f5es de formata\u00e7\u00e3o que podem ser configuradas, conforme podemos ver na tela a seguir.","title":"Estilos de P\u00e1gina"},{"location":"informatica/editores-texto/estilos/#aba-pagina","text":"As configura\u00e7\u00f5es de p\u00e1gina v\u00e3o desde aspectos b\u00e1sicos, como formato do papel, margens e orienta\u00e7\u00e3o a configura\u00e7\u00f5es mais avan\u00e7adas de leiaute, como estilos vinculados somente \u00e0s p\u00e1ginas da direita ou da esquerda e o tipo de numera\u00e7\u00e3o a ser utilizado. Um mesmo documento pode apresentar diversos estilos de p\u00e1gina vinculados, em primeiro momento, pela possibilidade de um estilo de p\u00e1gina vincular-se a um pr\u00f3ximo estilo ( Aba Organizador ) e, em segundo momento, pela possibilidade de sec\u00e7\u00e3o do documento em diferentes partes l\u00f3gicas. Este processo de seccionamento \u00e9 feito pelo menu Inserir -> Quebra Manual . Dentre as op\u00e7\u00f5es oferecidas (quebra de linha, coluna e p\u00e1gina), a quebra de p\u00e1gina permite, a partir da posi\u00e7\u00e3o do cursor, modificar o fluxo de estilos de p\u00e1gina aplicados. As quebras de p\u00e1gina s\u00e3o necess\u00e1rias pois representam o \u00fanico meio de alterar os fluxos de estilo sem modificar o documento integralmente, afinal inicialmente o documento encontra-se integralmente dentro de uma \u00fanica se\u00e7\u00e3o de conte\u00fado.","title":"Aba P\u00e1gina"},{"location":"informatica/editores-texto/estilos/#aba-area","text":"Permite configurar o preenchimento de fundo da p\u00e1gina. Comumente nenhum preenchimento \u00e9 utilizado, mas a ferramenta Writer permite utilizar preenchimentos de diferentes categorias, como Cor , Gradiente , Bitmap , Padronagem e Hachurado . Para ilustrar, imagem a seguir apresenta a op\u00e7\u00e3o preenchimento de \u00e1rea por hachuras.","title":"Aba \u00c1rea"},{"location":"informatica/editores-texto/estilos/#aba-transparencia","text":"Sendo poss\u00edvel aplicar diferentes tipos de preenchimento \u00e0 \u00e1rea da p\u00e1gina, podemos tamb\u00e9m aplicar diferentes estrat\u00e9gias de transpar\u00eancia, como gradiente, padr\u00e3o ou simplesmente nenhuma. Importante considerar que a transpar\u00eancia tem por efeito tornar gradualmente vis\u00edvel aquilo que encontra-se atr\u00e1s do preenchimento e que a escala de valores inicia em 0%, indicando total opacidade at\u00e9 100%, conferindo total transpar\u00eancia \u00e0 \u00e1rea.","title":"Aba Transpar\u00eancia"},{"location":"informatica/editores-texto/estilos/#aba-cabecalho-e-aba-rodape","text":"Cabe\u00e7alhos e rodap\u00e9s s\u00e3o \u00e1reas nas margens superior e inferior das p\u00e1ginas para adicionar textos ou figuras. Os cabe\u00e7alhos e rodap\u00e9s s\u00e3o adicionados ao estilo de p\u00e1gina atual. Todas as p\u00e1ginas que usarem o mesmo estilo receber\u00e3o automaticamente o cabe\u00e7alho ou rodap\u00e9 adicionado. \u00c9 poss\u00edvel inserir campos, tais como n\u00fameros de p\u00e1ginas e t\u00edtulos de cap\u00edtulos, nos cabe\u00e7alhos e rodap\u00e9s de um documento de texto. Quando configuramos cabe\u00e7alho e rodap\u00e9 no estilo de p\u00e1gina, estamos informando a apar\u00eancia e formato que tais estruturas ter\u00e3o nas p\u00e1ginas onde o estilo em quest\u00e3o for aplicado. Cabe\u00e7alho e rodap\u00e9 s\u00e3o estruturas opcionais, podendo ser exibidas ou n\u00e3o no documento. Os principais atributos de formata\u00e7\u00e3o relacionados aos cabe\u00e7alhos s\u00e3o a repeti\u00e7\u00e3o do conte\u00fado, tanto em p\u00e1ginas da esquerda quanto da direita e se a primeira p\u00e1gina ter\u00e1 o mesmo conte\u00fado que as demais. Adicionalmente tamb\u00e9m \u00e9 poss\u00edvel especificar as margens do cabe\u00e7alho (esquerda e direita). Para rodap\u00e9, os mesmos atributos de formata\u00e7\u00e3o de cabe\u00e7alho s\u00e3o aplicados.","title":"Aba Cabe\u00e7alho e Aba Rodap\u00e9"},{"location":"informatica/editores-texto/estilos/#aba-bordas","text":"Bordas s\u00e3o contornos aplicados a diferentes objetos, dentre eles, \u00e0s p\u00e1ginas. Na configura\u00e7\u00e3o de bordas pode-se especificar quais dos lados a borda estar\u00e1 ativa. Quando ativa, \u00e9 poss\u00edvel tamb\u00e9m determinar o tipo de linha, espessura, cor, dist\u00e2ncia em rela\u00e7\u00e3o ao conte\u00fado e efeito de sombra. Todas as op\u00e7\u00f5es dispon\u00edveis s\u00e3o apresentadas na aba Bordas .","title":"Aba Bordas"},{"location":"informatica/editores-texto/estilos/#aba-colunas","text":"O espa\u00e7o contido entre as margens, que \u00e9 destinado ao conte\u00fado do documento, a depender do estilo da p\u00e1gina, pode ser subdividido em colunas, na quantidade que o usu\u00e1rio desejar. Quando a quantidade de colunas for superior a 1 (um), torna-se poss\u00edvel configurar a largura de cada uma das colunas, espa\u00e7amento entre as mesmas e eventualmente as caracter\u00edsticas da linha que as separa.","title":"Aba Colunas"},{"location":"informatica/editores-texto/estilos/#aba-notas-de-rodape","text":"Por vezes, na constru\u00e7\u00e3o de um documento de texto, torna-se conveniente adicionar uma anota\u00e7\u00e3o explicativa ao p\u00e9 da p\u00e1gina. Comumente tal anota\u00e7\u00e3o est\u00e1 diretamente vinculada a uma palavra ou trecho de par\u00e1grafo da p\u00e1gina em que se encontra. A este recurso tipogr\u00e1fico chamamos de nota de rodap\u00e9 . No Writer, as configura\u00e7\u00f5es de formata\u00e7\u00e3o das notas de rodap\u00e9 s\u00e3o feitas por meio dos estilos de p\u00e1gina. As op\u00e7\u00f5es de formata\u00e7\u00e3o oferecidas permitem controlar a \u00e1rea reservada para as notas e a configura\u00e7\u00e3o da linha separadora, que estabelece a divisa entre o texto e as suas respectivas notas. Com rela\u00e7\u00e3o \u00e0 linha separadora, \u00e9 poss\u00edvel especificar a posi\u00e7\u00e3o horizontal da mesma, sua espessura, cor, comprimento e distanciamento em rela\u00e7\u00e3o a primeira nota.","title":"Aba Notas de Rodap\u00e9"},{"location":"informatica/editores-texto/estilos/#referencias","text":"The Document Foundation. Ajuda do LibreOffice 7.1 . Dispon\u00edvel em https://help.libreoffice.org/latest/pt-BR/text/shared/05/new_help.html?&DbPAR=WRITER . Acesso em 21 mai. 2021.","title":"Refer\u00eancias"},{"location":"informatica/editores-texto/introducao/","text":"Afirmar que a tecnologia transformou drasticamente o mundo nas \u00faltimas d\u00e9cadas certamente n\u00e3o tr\u00e1s espanto a ningu\u00e9m, afinal todos s\u00e3o testemunhas oculares das transforma\u00e7\u00f5es que dia ap\u00f3s dia ocorrem na sociedade em fun\u00e7\u00e3o dela. Dentre as diversas \u00e1reas que popularmente chama-se \u201ctecnologia\u201d, a Inform\u00e1tica certamente ocupa lugar de destaque, haja vista que solu\u00e7\u00f5es de hardware e software t\u00eam contribu\u00eddo significativamente para revolu\u00e7\u00f5es em diversas \u00e1reas, como comunica\u00e7\u00e3o, rela\u00e7\u00f5es de consumo, educa\u00e7\u00e3o, medicina, entre outros. Um dos usos mais t\u00edpicos do computador compreende a edi\u00e7\u00e3o e produ\u00e7\u00e3o de documentos escritos e planilhas eletr\u00f4nicas. Estes recursos, hoje t\u00e3o comuns, foram importantes alicerces na populariza\u00e7\u00e3o do uso da arquitetura PC ( Personal Computer ) em empresas e, tempos ap\u00f3s, nos ambientes dom\u00e9sticos. Logo, ter dom\u00ednio na manipula\u00e7\u00e3o de tais softwares representa uma das muitas habilidades exigidas pelo mercado de trabalho atual. Vamos come\u00e7ar falando de editores de texto, softwares especializados na produ\u00e7\u00e3o de documentos textuais com amplos recursos para edi\u00e7\u00e3o e diagrama\u00e7\u00e3o. Est\u00e3o presentes no dia-a-dia de boa parte dos usu\u00e1rios de computador, seja para escrever aquele relat\u00f3rio da faculdade, fazer um curr\u00edculo caprichado ou mesmo um cart\u00e3o de Dia das M\u00e3es. No mundo do trabalho, \u00e9 ferramenta essencial para produ\u00e7\u00e3o dos mais variados tipos de documentos que transmitem informa\u00e7\u00f5es e formalizam etapas de processos. \u00c9 comum encontrar editores de texto como sendo parte de pacotes para escrit\u00f3rio. Um dos mais populares \u00e9 o Microsoft Office , software propriet\u00e1rio da Microsoft, cujo editor de texto chama-se Microsoft Word . Para fazer uso deste pacote de softwares o usu\u00e1rio deve ter em m\u00e3os uma licen\u00e7a. Para aqueles que n\u00e3o disp\u00f5em de recursos ou mesmo preferem solu\u00e7\u00f5es livres, temos dispon\u00edvel a suite LibreOffice , mantida por uma comunidade de desenvolvedores e distribu\u00edda livremente, sem custos, a qualquer interessado. Outra alternativa interessante s\u00e3o as solu\u00e7\u00f5es em nuvem, como Google Docs. Para finalidades triviais de edi\u00e7\u00e3o, atendem perfeitamente as necessidades. E, quando associadas a recursos de colabora\u00e7\u00e3o e compartilhamento, tornam-se ferramentas extremamente poderosas. Para nossos estudos, utilizaremos o LibreOffice Writer, editor de texto dispon\u00edvel no pacote LibreOffice , vers\u00e3o 7.1, bem como o Google Docs, buscando realizar um contraponto dos recursos dispon\u00edveis. A Suite LibreOffice, da qual o software Writer faz parte, compreende um projeto iniciado em setembro de 2010, \u00e9poca em que um grupo de desenvolvedores volunt\u00e1rios da comunidade anunciou a cria\u00e7\u00e3o do The Document Foundation com vistas a dar continuidade ao desenvolvimento da suite de escrit\u00f3rio OpenOffice. Com o evento da aquisi\u00e7\u00e3o da Sun Microsystems pela empresa Oracle, o projeto OpenOffice foi entregue \u00e0 Funda\u00e7\u00e3o Apache , visto que at\u00e9 ent\u00e3o a Sun era respons\u00e1vel por manter o desenvolvimento ativo. O Writer apresenta uma grande quantidade de recursos para manipula\u00e7\u00e3o de texto e de objetos em documentos por meio da tecnologia WYSIWYG. A tecnologia WYSIWYG \u00e9 acr\u00f4nimo de What You See Is What You Get , ou seja, tecnologias de software onde o usu\u00e1rio tem feedback imediado do resultado final da formata\u00e7\u00e3o do documento, de tal modo que o visto na tela ser\u00e1 o resultado final quando impresso. Apresentamos tela inicial de trabalho do Writer na sequ\u00eancia. Na parte superior consta a barra de menus, com as op\u00e7\u00f5es Arquivo , Editar , Exibir , Inserir , Formatar , Estilos , Tabela , Formul\u00e1rio , Ferramentas , Janela e Ajuda . Logo abaixo \u00e0 barra de menus, encontram-se as abas para acesso r\u00e1pido \u00e0s ferramentas de edi\u00e7\u00e3o. Na aba Arquivo s\u00e3o oferecidos recursos de abertura de documentos locais e remotos, op\u00e7\u00f5es de salvamento e de exporta\u00e7\u00e3o em PDF. Na aba In\u00edcio encontram-se ferramentas de formata\u00e7\u00e3o de fonte (cor, tipo, tamanho), tipos de listas, alinhamento de texto, entre outros. A aba Inserir , por sua vez, cont\u00e9m op\u00e7\u00f5es para adi\u00e7\u00e3o de objetos como figuras, tabelas, galeria, gr\u00e1ficos, s\u00edmbolos e refer\u00eancias cruzadas no documento. Na aba P\u00e1gina s\u00e3o oferecidas as op\u00e7\u00f5es que permitem configurar margens, tamanho do papel, divis\u00e3o em colunas e orienta\u00e7\u00e3o do documento. Na aba Refer\u00eancias encontram-se as op\u00e7\u00f5es para gest\u00e3o de bibliografia, notas de rodap\u00e9, notas de fim e gera\u00e7\u00e3o de sum\u00e1rio. A aba Revisar cont\u00e9m ferramentas de corre\u00e7\u00e3o ortogr\u00e1fica, dicion\u00e1rio de sin\u00f4nimos, contagem de palavras, anota\u00e7\u00f5es e gest\u00e3o de mudan\u00e7as. Por fim, na aba Exibir , est\u00e3o as op\u00e7\u00f5es relacionadas \u00e0 exibi\u00e7\u00e3o de r\u00e9guas, zoom e visualiza\u00e7\u00e3o de impress\u00e3o.","title":"Writer"},{"location":"programacao/ambiente/","text":"Para codificar em C++ \u00e9 preciso minimamente do compilador e de um editor de texto. A instala\u00e7\u00e3o do compilador apresenta diferen\u00e7as de acordo com a plataforma. J\u00e1 o editor de texto pode ser qualquer um dispon\u00edvel no mercado. Quando falamos de codifica\u00e7\u00e3o profissional de software, os editores de texto s\u00e3o substitu\u00eddos por IDEs ( Integrated Development Environment ) com a finalidade de aumentar a produtividade e a qualidade do c\u00f3digo-fonte. As IDEs agregam diversos plugins que auxiliam o desenvolvedor na tarefa de codifica\u00e7\u00e3o. Na sequ\u00eancia apresento a configura\u00e7\u00e3o do ambiente m\u00ednimo para desenvolvimento em C++ nas plataformas Linux ( Debian based ) e Windows. Plataforma Linux \u00b6 Normalmente as distribui\u00e7\u00f5es Linux j\u00e1 possuem o compilador g++ instalado. Para verificar se o compilador est\u00e1 corretamente instalado, podemos abrir o terminal e executar o comando abaixo, que solicita a vers\u00e3o do mesmo. g++ --version Uma vez instalado, esperamos que a sa\u00edda seja semelhante ao trecho abaixo: g++ ( Ubuntu 7 .3.0-27ubuntu1~18.04 ) 7 .3.0 Copyright ( C ) 2017 Free Software Foundation, Inc. This is free software ; see the source for copying conditions. There is NO warranty ; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Caso o compilador n\u00e3o esteja instalado no sistema, ser\u00e1 preciso utilizar a ferramenta de gest\u00e3o de pacotes da distribui\u00e7\u00e3o para instala\u00e7\u00e3o. Em distrui\u00e7\u00f5es baseadas no Debian ( Ubuntu, por exemplo ) , o comando apt-get install realiza a instala\u00e7\u00e3o do compilador via terminal. A checagem da instala\u00e7\u00e3o pode ser realizada utilizando o comando g++ --version, conforme demonstrando anteriormente. Caso o compilador n\u00e3o esteja dispon\u00edvel no sistema, ser\u00e1 preciso utilizar a ferramenta de gest\u00e3o de pacotes da distribui\u00e7\u00e3o para instala\u00e7\u00e3o. Em distrui\u00e7\u00f5es baseadas no Debian (Ubuntu, por exemplo), o comando sudo apt-get install g++ realiza a instala\u00e7\u00e3o do compilador via terminal. A checagem da instala\u00e7\u00e3o pode ser realizada utilizando o comando g++ --version , conforme demonstrando anteriormente. Windows Plataforma Windows \u00b6 Assim como na plataforma Linux, no Windows temos diferentes op\u00e7\u00f5es de editores e IDEs para desenvolvimento em C++. Uma destas solu\u00e7\u00f5es \u00e9 o DevC++ , uma ferramenta gratuita e com bons recursos para quem est\u00e1 iniciando na linguagem. Outras op\u00e7\u00f5es tamb\u00e9m podem ser consideradas, como Code::Blocks , Netbeans , Eclipse , Clion e Visual Studio Code . Basicamente, a diferen\u00e7a entre uma IDE e outra refere-se ao conjunto de ferramentas e recursos oferecidos pelas mesmas. Interessante observar que boa parte destas ferramentas vem com o compilador integrado, o que facilita o processo de instala\u00e7\u00e3o. Dos listados abaixo, a exce\u00e7\u00e3o fica para o Visual Studio Code. DevC++ Visual Studio Visual Studio Code NetBeans Eclipse CLion CodeBlocks Dentre as ferramentas que citei, tenho prefer\u00eancia pelo Visual Studio Code . O processo de instala\u00e7\u00e3o do editor \u00e9 simples, compreendendo o download do arquivo de pacote (.deb ou .rpm) ou do instalador (conforme sistema operacional escolhido). O VS Code , como tamb\u00e9m \u00e9 conhecido, \u00e9 um editor avan\u00e7ado com suporte para in\u00fameras linguagens e tecnologias. Apresenta interface intuitiva, baixo consumo de mem\u00f3ria e terminal integrado. N\u00e3o posso deixar de comentar que a ferramenta \u00e9 gratuita, estando o usu\u00e1rio livre de qualquer cobran\u00e7a/restri\u00e7\u00e3o em rela\u00e7\u00e3o ao seu uso. A tela inicial do software cont\u00e9m \u00e0 esquerda o Explorer , no qual apresentam-se os arquivos e diret\u00f3rios do projeto, ferramenta de Busca , integra\u00e7\u00e3o com ferramenta de Versionamento de C\u00f3digo , Debug e Extens\u00f5es . A parte central da tela \u00e9 ocupada pelos diferentes arquivos em edi\u00e7\u00e3o e na parte inferior constam o Terminal Integrado , sa\u00edda de logs, erros, entre outros. Programas escritos em C++ podem compreender um ou mais arquivos de c\u00f3digo-fonte. Ao conjunto de arquivos que formam o programa chamamos de projeto . No VS Code podemos mapear o projeto abrindo a pasta raiz que cont\u00e9m os arquivos. Ainda, para deixar o ambiente completo, podemos instalar uma extens\u00e3o espec\u00edfica para a linguagem C++, que ir\u00e1 nos auxiliar nas tarefas relacionadas \u00e0 codifica\u00e7\u00e3o. Existem in\u00fameras extens\u00f5es, mas recomendo a C/C++ for Visual Studio Code . \u00c9 poss\u00edvel instalar a extens\u00e3o diretamente pelo VS Code procurando pela mesma na tela Extensions (observe a imagem a seguir). Execu\u00e7\u00e3o \u00b6 Com a extens\u00e3o C/C++ for Visual Studio Code instalada, o VS Code j\u00e1 tem condi\u00e7\u00f5es de compilar o c\u00f3digo-fonte e executar o programa gerado de forma integrada. O processo \u00e9 muito simples! Utilize o bot\u00e3o direito do mouse na tela de edi\u00e7\u00e3o do c\u00f3digo-fonte e escolha a op\u00e7\u00e3o Run Code . Aten\u00e7\u00e3o Como o VS Code n\u00e3o possui compilador C++ integrado, \u00e9 preciso instalar separadamente. Neste endere\u00e7o voc\u00ea ir\u00e1 encontrar informa\u00e7\u00f5es de como realizar o procedimento.","title":"Ambiente de Desenvolvimento"},{"location":"programacao/ambiente/#plataforma-linux","text":"Normalmente as distribui\u00e7\u00f5es Linux j\u00e1 possuem o compilador g++ instalado. Para verificar se o compilador est\u00e1 corretamente instalado, podemos abrir o terminal e executar o comando abaixo, que solicita a vers\u00e3o do mesmo. g++ --version Uma vez instalado, esperamos que a sa\u00edda seja semelhante ao trecho abaixo: g++ ( Ubuntu 7 .3.0-27ubuntu1~18.04 ) 7 .3.0 Copyright ( C ) 2017 Free Software Foundation, Inc. This is free software ; see the source for copying conditions. There is NO warranty ; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. Caso o compilador n\u00e3o esteja instalado no sistema, ser\u00e1 preciso utilizar a ferramenta de gest\u00e3o de pacotes da distribui\u00e7\u00e3o para instala\u00e7\u00e3o. Em distrui\u00e7\u00f5es baseadas no Debian ( Ubuntu, por exemplo ) , o comando apt-get install realiza a instala\u00e7\u00e3o do compilador via terminal. A checagem da instala\u00e7\u00e3o pode ser realizada utilizando o comando g++ --version, conforme demonstrando anteriormente. Caso o compilador n\u00e3o esteja dispon\u00edvel no sistema, ser\u00e1 preciso utilizar a ferramenta de gest\u00e3o de pacotes da distribui\u00e7\u00e3o para instala\u00e7\u00e3o. Em distrui\u00e7\u00f5es baseadas no Debian (Ubuntu, por exemplo), o comando sudo apt-get install g++ realiza a instala\u00e7\u00e3o do compilador via terminal. A checagem da instala\u00e7\u00e3o pode ser realizada utilizando o comando g++ --version , conforme demonstrando anteriormente.","title":"Plataforma Linux"},{"location":"programacao/ambiente/#windows-plataforma-windows","text":"Assim como na plataforma Linux, no Windows temos diferentes op\u00e7\u00f5es de editores e IDEs para desenvolvimento em C++. Uma destas solu\u00e7\u00f5es \u00e9 o DevC++ , uma ferramenta gratuita e com bons recursos para quem est\u00e1 iniciando na linguagem. Outras op\u00e7\u00f5es tamb\u00e9m podem ser consideradas, como Code::Blocks , Netbeans , Eclipse , Clion e Visual Studio Code . Basicamente, a diferen\u00e7a entre uma IDE e outra refere-se ao conjunto de ferramentas e recursos oferecidos pelas mesmas. Interessante observar que boa parte destas ferramentas vem com o compilador integrado, o que facilita o processo de instala\u00e7\u00e3o. Dos listados abaixo, a exce\u00e7\u00e3o fica para o Visual Studio Code. DevC++ Visual Studio Visual Studio Code NetBeans Eclipse CLion CodeBlocks Dentre as ferramentas que citei, tenho prefer\u00eancia pelo Visual Studio Code . O processo de instala\u00e7\u00e3o do editor \u00e9 simples, compreendendo o download do arquivo de pacote (.deb ou .rpm) ou do instalador (conforme sistema operacional escolhido). O VS Code , como tamb\u00e9m \u00e9 conhecido, \u00e9 um editor avan\u00e7ado com suporte para in\u00fameras linguagens e tecnologias. Apresenta interface intuitiva, baixo consumo de mem\u00f3ria e terminal integrado. N\u00e3o posso deixar de comentar que a ferramenta \u00e9 gratuita, estando o usu\u00e1rio livre de qualquer cobran\u00e7a/restri\u00e7\u00e3o em rela\u00e7\u00e3o ao seu uso. A tela inicial do software cont\u00e9m \u00e0 esquerda o Explorer , no qual apresentam-se os arquivos e diret\u00f3rios do projeto, ferramenta de Busca , integra\u00e7\u00e3o com ferramenta de Versionamento de C\u00f3digo , Debug e Extens\u00f5es . A parte central da tela \u00e9 ocupada pelos diferentes arquivos em edi\u00e7\u00e3o e na parte inferior constam o Terminal Integrado , sa\u00edda de logs, erros, entre outros. Programas escritos em C++ podem compreender um ou mais arquivos de c\u00f3digo-fonte. Ao conjunto de arquivos que formam o programa chamamos de projeto . No VS Code podemos mapear o projeto abrindo a pasta raiz que cont\u00e9m os arquivos. Ainda, para deixar o ambiente completo, podemos instalar uma extens\u00e3o espec\u00edfica para a linguagem C++, que ir\u00e1 nos auxiliar nas tarefas relacionadas \u00e0 codifica\u00e7\u00e3o. Existem in\u00fameras extens\u00f5es, mas recomendo a C/C++ for Visual Studio Code . \u00c9 poss\u00edvel instalar a extens\u00e3o diretamente pelo VS Code procurando pela mesma na tela Extensions (observe a imagem a seguir).","title":"Windows Plataforma Windows"},{"location":"programacao/ambiente/#execucao","text":"Com a extens\u00e3o C/C++ for Visual Studio Code instalada, o VS Code j\u00e1 tem condi\u00e7\u00f5es de compilar o c\u00f3digo-fonte e executar o programa gerado de forma integrada. O processo \u00e9 muito simples! Utilize o bot\u00e3o direito do mouse na tela de edi\u00e7\u00e3o do c\u00f3digo-fonte e escolha a op\u00e7\u00e3o Run Code . Aten\u00e7\u00e3o Como o VS Code n\u00e3o possui compilador C++ integrado, \u00e9 preciso instalar separadamente. Neste endere\u00e7o voc\u00ea ir\u00e1 encontrar informa\u00e7\u00f5es de como realizar o procedimento.","title":"Execu\u00e7\u00e3o"},{"location":"programacao/compilacao/","text":"Ap\u00f3s escrito o c\u00f3digo-fonte de um programa, precisamos convert\u00ea-lo em c\u00f3digo de m\u00e1quina, para que o processador tenha condi\u00e7\u00f5es de execut\u00e1-lo. Esse processo de \"tradu\u00e7\u00e3o\" pode ser realizado de duas formas diferentes: compila\u00e7\u00e3o e interpreta\u00e7\u00e3o . A compila\u00e7\u00e3o \u00e9 o processo em que submetemos o c\u00f3digo-fonte do programa a um software chamado compilador . O compilador deve estar dispon\u00edvel no sistema e corretamente configurado. No processo, o compilador realiza verifica\u00e7\u00f5es sint\u00e1ticas (uso correto da sintaxe da linguagem) e sem\u00e2nticas (interpreta\u00e7\u00e3o do significado de instru\u00e7\u00f5es para detectar erros). N\u00e3o havendo erros, o c\u00f3digo de alto n\u00edvel \u00e9 traduzido para c\u00f3digo de baixo n\u00edvel (m\u00e1quina) direcionado \u00e0 plataforma (sistema operacional + arquitetura de m\u00e1quina) alvo. \u00c9 criado ent\u00e3o um execut\u00e1vel . A compila\u00e7\u00e3o ocorre apenas uma vez, sendo que o produto final \u00e9 o programa que o usu\u00e1rio ir\u00e1 utilizar. Podemos citar as seguintes vantagens do processo: N\u00e3o h\u00e1 custo de tradu\u00e7\u00e3o em tempo de execu\u00e7\u00e3o O c\u00f3digo-fonte \u00e9 preservado, n\u00e3o sendo distribu\u00eddo para o cliente Possibilidade de otimiza\u00e7\u00f5es aprimoradas, visto que um maior tempo de compila\u00e7\u00e3o \u00e9 aceit\u00e1vel Contudo tamb\u00e9m existem desvantagens, como: Dificuldade no diagn\u00f3stico de erros Testar o software torna-se mais oneroso, porque requer v\u00e1rios ciclos de compila\u00e7\u00e3o Algumas valida\u00e7\u00f5es s\u00e3o dif\u00edceis de executar em tempo de compila\u00e7\u00e3o Construir bons compiladores \u00e9 algo muito complexo J\u00e1 a interpreta\u00e7\u00e3o \u00e9 o processo em que o c\u00f3d igo-fonte \u00e9 traduzido a cada execu\u00e7\u00e3o ( on the fly ). O interpretador \u00e9 o software que realiza tal tarefa e ele sempre trabalha com dois elementos: programa e o c\u00f3digo-fonte. O c\u00f3digo \u00e9 gerado sob demanda, seguindo o fluxo de execu\u00e7\u00e3o do algoritmo. Existem intepretadores que otimizam o processo, mantendo trechos de c\u00f3digo frequentemente acessados j\u00e1 compilados. A intepreta\u00e7\u00e3o tem benef\u00edcios interessantes. Podemos citar, por exemplo: Facilitade em debugar o c\u00f3digo Interpretadores s\u00e3o mais simples de desenvolver, se comparados \u00e0 compiladores Testar o software torna-se mais simples O intepretador pode ser incorporado ao software para fins de implanta\u00e7\u00e3o \u00c9 poss\u00edvel avaliar c\u00f3digo em tempo de execu\u00e7\u00e3o Como desvantagens do processo de intepreta\u00e7\u00e3o, podemos citar: Necessidade de tradu\u00e7\u00e3o a cada execu\u00e7\u00e3o, que implica em maior custo computacional Dificuldades em se proteger o c\u00f3digo-fonte Interpretadores eficientes s\u00e3o complexos para desenvolver Voc\u00ea pode saber mais sobre estes processos de tradu\u00e7\u00e3o no excelente material produzido para a disciplina COMP 524: Programming Language Concepts , por Bj\u00f6rn B. Brandenburg da University of North Carolina Dica Lembre-se que a linguagem C++ \u00e9 compilada!","title":"Compila\u00e7\u00e3o"},{"location":"programacao/condicionais/","text":"Na programa\u00e7\u00e3o, os estruturas de sele\u00e7\u00e3o s\u00e3o um dos componentes b\u00e1sicos na constru\u00e7\u00e3o dos programas. Entendemos por estruturas de sele\u00e7\u00e3o comandos que permitem desviar o fluxo natural de execu\u00e7\u00e3o das instru\u00e7\u00f5es de um programa sob determinadas condi\u00e7\u00f5es. Tais estruturas permitem criar ramifica\u00e7\u00f5es de fluxo e est\u00e3o intimamente relacionadas com o uso da l\u00f3gica booleana. Desta forma, a compreens\u00e3o de desvios condicionais requer bons fundamentos de l\u00f3gica, o que tentaremos oferecer na sequ\u00eancia, antes de propriamente apresentarmos os comandos de sele\u00e7\u00e3o. L\u00f3gica Booleana \u00b6 Como sabemos, computa\u00e7\u00e3o e matem\u00e1tica s\u00e3o \u00e1reas irm\u00e3s. Uma das mais relevantes contribui\u00e7\u00f5es da matem\u00e1tica incorporadas \u00e0 computa\u00e7\u00e3o foi do matem\u00e1tico ingl\u00eas George Boole (1815-1864), que desenvolveu um sistema alg\u00e9brico bin\u00e1rio essencial ao funcionamento dos computadores. De modo simplificado, as ideias de Boole permitem obter conclus\u00f5es l\u00f3gicas a partir de vari\u00e1veis que representam apenas dois valores (0 e 1) e operadores que retornam apenas dois valores (0 e 1). Dica 0 indica FALSO e 1 , VERDADEIRO A aplica\u00e7\u00e3o da L\u00f3gica Booleana, como normalmente \u00e9 conhecida, vai desde a constru\u00e7\u00e3o de circuitos de hardware a partir de portas l\u00f3gicas at\u00e9 a programa\u00e7\u00e3o, quando se faz necess\u00e1rio realizar testes l\u00f3gicos no c\u00f3digo. Mas afinal, o que s\u00e3o testes l\u00f3gicos e qual \u00e9 a rela\u00e7\u00e3o destes com o sistema alg\u00e9brico desenvolvido por Boole? N\u00f3s, humanos, expressamos e avaliamos proposi\u00e7\u00f5es l\u00f3gicas a todo o momento. De forma pr\u00e1tica, vamos entender proposi\u00e7\u00e3o l\u00f3gica como sendo uma declara\u00e7\u00e3o que pode ser avaliada como VERDADEIRA ou FALSA, mas nunca ambas . Logo, as duas afirma\u00e7\u00f5es abaixo podem ser consideradas proposi\u00e7\u00f5es l\u00f3gicas: p : Vai chover amanh\u00e3 q : Tenho 10 reais na carteira Tanto para p quanto para q , somente existem duas possibilidades de conclus\u00e3o: V erdadeiro ou F also. Sabemos tamb\u00e9m que os operadores l\u00f3gicos somente podem retornar V ou F , o que nos leva a concluir que express\u00f5es l\u00f3gicas que combinam v\u00e1rias proposi\u00e7\u00f5es, ao final, se reduzem a V ou F . Mas, para elaborar tais express\u00f5es, precisamos conhecer o funcionamento de tr\u00eas operadores l\u00f3gicos b\u00e1sicos: AND , OR e NOT . Aten\u00e7\u00e3o Estamos direcionando o entendimento da l\u00f3gica booleana para a programa\u00e7\u00e3o, omitindo alguns formalismos matem\u00e1ticos propositalmente. Operador AND (conjun\u00e7\u00e3o) \u00b6 O operador l\u00f3gico AND (^), tamb\u00e9m conhecido como conjun\u00e7\u00e3o, \u00e9 definido como sendo um operador l\u00f3gico bin\u00e1rio que retorna VERDADEIRO sempre que TODOS os seus operandos forem verdadeiros . Para facilitar a compreens\u00e3o, utilizamos uma tabela de valores l\u00f3gicos, a tabela verdade , para expressar os poss\u00edveis resultados da aplica\u00e7\u00e3o do operador AND sobre duas proposi\u00e7\u00f5es. Vamos supor que p tenha seus valores expressos na coluna e q , nas linhas. Deste modo, os poss\u00edvels resultados de p ^ q s\u00e3o: AND V F F F F V V F Resumo A conclus\u00e3o l\u00f3gica do operador AND somente \u00e9 verdadeira se todas as proposi\u00e7\u00f5es forem verdadeiras. Operador OR (disjun\u00e7\u00e3o) \u00b6 O operador l\u00f3gico OR (\u2228), tamb\u00e9m conhecido como disjun\u00e7\u00e3o, \u00e9 definido como sendo um operador l\u00f3gico bin\u00e1rio que retorna FALSO sempre que TODOS os seus operandos forem falsos . Utilizando a tabela verdade para expressar os poss\u00edvels resultados de p v q temos: OR V F F V F V V V Resumo A conclus\u00e3o l\u00f3gica do operador OR somente \u00e9 falsas se todas as proposi\u00e7\u00f5es forem falsas. Operador NOT (~) \u00b6 O operador l\u00f3gico NOT (~), tamb\u00e9m conhecido como nega\u00e7\u00e3o, \u00e9 definido como sendo um operador l\u00f3gico un\u00e1rio que retorna a nega\u00e7\u00e3o (inverso l\u00f3gico) de seu operando . Utilizando a tabela verdade para expressar os poss\u00edvels resultados de ~p temos: p ~p F V V F Resumo A conclus\u00e3o l\u00f3gica do operador NOT \u00e9 verdadeiro quando receber falso , e falso quando receber verdadeiro Tudo bem, sabemos o que s\u00e3o proposi\u00e7\u00f5es l\u00f3gicas e conhecemos os tr\u00eas operadores l\u00f3gicos b\u00e1sicos. Mas, de que forma utilizamos tais recursos na programa\u00e7\u00e3o? ...\u00c9 justamente isso que vou apresentar na sequ\u00eancia ;) L\u00f3gica booleana aplicada \u00e0 programa\u00e7\u00e3o \u00b6 Microprocessadores possuem uma ou mais unidades l\u00f3gico-aritm\u00e9ticas (ULA), componente que, como o pr\u00f3prio nome sugere, tem a capacidade de executar instru\u00e7\u00f5es aritm\u00e9ticas e instru\u00e7\u00f5es l\u00f3gicas. Utilizando linguagens de programa\u00e7\u00e3o de alto n\u00edvel, como C++, temos acesso a estes recursos atrav\u00e9s de operadores, s\u00edmbolos que a linguagem define para tais finalidades. Especificamente sobre as opera\u00e7\u00f5es l\u00f3gicas, precisamos lembrar que o C++ define um tipo de dado espec\u00edfico para representar valores booleanos, o tipo bool . Quanto aos operadores l\u00f3gicos, os s\u00edmbolos utilizados s\u00e3o: && para AND, || para OR e ! para NOT. J\u00e1 os operadores de compara\u00e7\u00e3o principais s\u00e3o os seguintes: Operador Significado Exemplo Descri\u00e7\u00e3o > maior que a > b verdadeiro, se a for maior que b < menor que a < b verdadeiro, se a for menor que b >= maior ou igual a a >= b verdadeiro, se a for maior ou igual a b <= menor ou igual a a <= b verdadeiro, se a for menor ou igual a b == igual a == b verdadeiro, se iguais != diferente a !== b verdadeiro, se diferentes Utilizando os operadores l\u00f3gicos e os operadores de compara\u00e7\u00e3o temos como escrever express\u00f5es l\u00f3gicas em nossos programas. Imaginemos por um instante que estamos trabalhando em c\u00f3digo para sele\u00e7\u00e3o de candidatos. Nossos crit\u00e9rios de sele\u00e7\u00e3o ser\u00e3o idade igual ou superior a 18 anos, altura superior a 160cm e peso superior a 60kg . Em nosso c\u00f3digo, armazenamos a idade do candidato em uma vari\u00e1vel inteira chamava idade_c , altura em uma vari\u00e1vel inteira altura_c e peso, em uma vari\u00e1vel de ponto fluturante peso_c . Ap\u00f3s atribuir os dados \u00e0s respectivas vari\u00e1veis, poder\u00edamos codificar a express\u00e3o abaixo para determinar se o candidato ser\u00e1 selecionado ou n\u00e3o: bool is_selecionado = idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ; Observe que utilizamos o operador && , uma vez que as tr\u00eas condi\u00e7\u00f5es (proposi\u00e7\u00f5es) devem ser atendidas. Portanto, a vari\u00e1vel is_selecionado receber\u00e1 true somente nesta situa\u00e7\u00e3o. Mas o que faremos com a vari\u00e1vel is_selecionado ? Sabemos que sendo true precisamos indicar ao usu\u00e1rio de nosso programa que o candidato atende os crit\u00e9rios. Ou seja, precisamos condicionar a execu\u00e7\u00e3o de determinadas instru\u00e7\u00f5es do programa ao resultado de avalia\u00e7\u00e3o da express\u00e3o l\u00f3gica. Como fazer ent\u00e3o? Comando IF ELSE \u00b6 Um dos comandos da linguagem C++ (e de boa parte das outras) \u00e9 o if . Utilizamos ele para criar desvios condicionais na execu\u00e7\u00e3o das instru\u00e7\u00f5es, que, pela ordem natural, s\u00e3o executadas em sequ\u00eancia. A estrutura do comando if \u00e9 simples e para demostrar, vamos seguir falando do nosso programa hipot\u00e9tico de sele\u00e7\u00e3o de candidatos. Observe o c\u00f3digo a seguir: bool is_selecionado = idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ; if ( is_selecionado ){ cout << \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\" << endl ; } else { cout << \"Candidato desclassificado\" << endl ; } Perceba que existem tr\u00eas partes do comando if no c\u00f3digo. express\u00e3o l\u00f3gica : sempre fica entre os par\u00eanteses () . \u00c9 parte obrigat\u00f3ria do comando e requer qualquer express\u00e3o l\u00f3gica v\u00e1lida, que possa ser reduzida a true ou false . Em nosso exemplo, estamos avaliando o valor contido na vari\u00e1vel is_selecionado , que \u00e9 do tipo bool . bloco de comandos para o resultado true : \u00e9 o primeiro par de chaves {} logo ap\u00f3s a express\u00e3o l\u00f3gica. Pode conter uma ou mais instru\u00e7\u00f5es, que ser\u00e3o executadas somente quando o resultado da express\u00e3o l\u00f3gica for avaliado como true . \u00c9 parte obrigat\u00f3ria do comando. bloco de comandos para o resultado false (else) : par de chaves imediatamente ap\u00f3s a palavra else . Pode conter uma ou mais instru\u00e7\u00f5es que ser\u00e3o executadas somente quando o resultado da express\u00e3o l\u00f3gica for avaliado como false . \u00c9 parte opcional do comando. Ent\u00e3o, conforme explicamos, nosso c\u00f3digo ir\u00e1 executar a instru\u00e7\u00e3o cout << \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\"<< endl; quando is_selecionado for true e cout << \"Candidato desclassificado\"<< endl; quando for false . A express\u00e3o l\u00f3gica pode ser informada diretamente no comando if . Inclusive, esta \u00e9 a forma mais comum de encontr\u00e1-la. Assim, podemos simplificar nosso trecho de c\u00f3digo, eliminando a vari\u00e1vel is_selecionado . Ter\u00edamos ent\u00e3o: if ( idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ){ cout << \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\" << endl ; } else { cout << \"Candidato desclassificado\" << endl ; } Comando IF ELSE IF \u00b6 Uma varia\u00e7\u00e3o do comando if permite especificar condi\u00e7\u00f5es para os blocos else . Para demonstrar seu uso, vamos imaginar um novo programa que apresente a situa\u00e7\u00e3o de estudantes com base na m\u00e9dia final em determinada disciplina. A rela\u00e7\u00e3o entre as notas e as respectivas situa\u00e7\u00f5es est\u00e3o na tabela que segue. Nota Situa\u00e7\u00e3o 0-4.9 Reprovado 5.0-6.9 Exame 7.0-10 Aprovado Uma poss\u00edvel codifica\u00e7\u00e3o para o programa em quest\u00e3o seria: /*defini\u00e7\u00e3o de vari\u00e1veis e leitura de dados...*/ if ( nota >= 0 && nota <= 4.9 ){ cout << \"Reprovado\" ; } else if ( nota >= 5.0 && nota <= 6.9 ){ cout << \"Exame\" ; } else { cout << \"Aprovado\" ; } Note que o else if pode aparecer v\u00e1rias vezes na mesma instru\u00e7\u00e3o, tantas quantas forem necess\u00e1rias. E, mais importante: assim que uma condi\u00e7\u00e3o for avaliada como true , nenhuma outra da mesma instru\u00e7\u00e3o ser\u00e1 avaliada. Operador tern\u00e1rio \u00b6 Para algumas situa\u00e7\u00f5es, podemos utilizar uma simplifica\u00e7\u00e3o de sintaxe da estrutura if else chamada operador tern\u00e1rio . Seu uso \u00e9 especialmente interessante para testes simples, como aquele que fizemos no programa de sele\u00e7\u00e3o de candidatos. Veja a diferen\u00e7a: cout << ( idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ? \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\" : \"Candidato desclassificado\" ) << endl ; Pelo c\u00f3digo, percebemos que a sintaxe do comando \u00e9: express\u00e3o l\u00f3gica ? valor quando true : valor quando false . \u00c9 simples de usar, mas pode prejudicar a legibilidade do c\u00f3digo se aplicado para testes mais complexos. Vale o bom senso ;) Switch \u00b6 Finalizamos nosso estudo com o comando switch , uma estrutura de decis\u00e3o baseada em casos. Antes de conhecermos a sintaxe do comando, vamos propor um c\u00f3digo de exemplo: int nota ; cin >> nota ; switch ( nota ) { case 1 : case 2 : case 3 : case 4 : cout << \"Reprovado\" << endl ; break ; case 5 : case 6 : cout << \"Exame\" << endl ; break ; case 7 : case 8 : case 9 : case 10 : cout << \"Aprovado\" << endl ; break ; default : cout << \"Nota inv\u00e1lida\" << endl ; } Nosso exemplo tr\u00e1s importantes informa\u00e7\u00f5es acerca da sintaxe e uso do comando switch . O primeiro deles \u00e9 que devemos informar uma vari\u00e1vel (ou express\u00e3o) que possa ser avaliada como inteiro ou tipo enumer\u00e1vel. No c\u00f3digo, a vari\u00e1vel nota entre parenteses () serve a tal finalidade. Objetivamente estamos consultando o valor de nota e estabelecendo o que fazer para cada um dos valores de interesse. Estes valores de interesse est\u00e3o expressos nos casos ( case ). Ent\u00e3o, se a leitura da vari\u00e1vel nota indicar que seu valor \u00e9 4 , o programa vai executar as instru\u00e7\u00f5es cout << \"Exame\" << endl; e break . E se o valor for 1 , vai executar todas as instru\u00e7\u00f5es que seguem nos pr\u00f3ximos cases at\u00e9 encontrar o break . Opa, como assim executar os \"outros cases\"? Exatamente isso: o comando break indica a interrup\u00e7\u00e3o do processamento do switch . Se ele n\u00e3o estiver presente, a execu\u00e7\u00e3o ir\u00e1 iniciar pelo case pertinente ao valor da express\u00e3o, continuando at\u00e9 o final, passando pelas instru\u00e7\u00f5es de outros casos. Ent\u00e3o, se voc\u00ea quer finalizar a execu\u00e7\u00e3o naquele case espec\u00edfico, deve colocar o comando break . Ok, mas por que o c\u00f3digo anterior n\u00e3o tem break em v\u00e1rios cases ? Bem, porque notas entre 1 e 4 est\u00e3o associadas com a situa\u00e7\u00e3o Reprovado . Para n\u00e3o repetir a mesma instru\u00e7\u00e3o v\u00e1rias vezes, colocamos o break somente no case 4 . O mesmo vale para 5 e 6 e 7 a 10 . J\u00e1 o comando default \u00e9 especial, executado quando nenhum dos cases anteriores corresponde ao valor da express\u00e3o avaliada. A presen\u00e7a do default \u00e9 opcional no comando switch . Para mais informa\u00e7\u00f5es sobre desvios condicionais, recomendo a leitura do tutorial da W3C que trata deste assunto.","title":"Condicionais"},{"location":"programacao/condicionais/#logica-booleana","text":"Como sabemos, computa\u00e7\u00e3o e matem\u00e1tica s\u00e3o \u00e1reas irm\u00e3s. Uma das mais relevantes contribui\u00e7\u00f5es da matem\u00e1tica incorporadas \u00e0 computa\u00e7\u00e3o foi do matem\u00e1tico ingl\u00eas George Boole (1815-1864), que desenvolveu um sistema alg\u00e9brico bin\u00e1rio essencial ao funcionamento dos computadores. De modo simplificado, as ideias de Boole permitem obter conclus\u00f5es l\u00f3gicas a partir de vari\u00e1veis que representam apenas dois valores (0 e 1) e operadores que retornam apenas dois valores (0 e 1). Dica 0 indica FALSO e 1 , VERDADEIRO A aplica\u00e7\u00e3o da L\u00f3gica Booleana, como normalmente \u00e9 conhecida, vai desde a constru\u00e7\u00e3o de circuitos de hardware a partir de portas l\u00f3gicas at\u00e9 a programa\u00e7\u00e3o, quando se faz necess\u00e1rio realizar testes l\u00f3gicos no c\u00f3digo. Mas afinal, o que s\u00e3o testes l\u00f3gicos e qual \u00e9 a rela\u00e7\u00e3o destes com o sistema alg\u00e9brico desenvolvido por Boole? N\u00f3s, humanos, expressamos e avaliamos proposi\u00e7\u00f5es l\u00f3gicas a todo o momento. De forma pr\u00e1tica, vamos entender proposi\u00e7\u00e3o l\u00f3gica como sendo uma declara\u00e7\u00e3o que pode ser avaliada como VERDADEIRA ou FALSA, mas nunca ambas . Logo, as duas afirma\u00e7\u00f5es abaixo podem ser consideradas proposi\u00e7\u00f5es l\u00f3gicas: p : Vai chover amanh\u00e3 q : Tenho 10 reais na carteira Tanto para p quanto para q , somente existem duas possibilidades de conclus\u00e3o: V erdadeiro ou F also. Sabemos tamb\u00e9m que os operadores l\u00f3gicos somente podem retornar V ou F , o que nos leva a concluir que express\u00f5es l\u00f3gicas que combinam v\u00e1rias proposi\u00e7\u00f5es, ao final, se reduzem a V ou F . Mas, para elaborar tais express\u00f5es, precisamos conhecer o funcionamento de tr\u00eas operadores l\u00f3gicos b\u00e1sicos: AND , OR e NOT . Aten\u00e7\u00e3o Estamos direcionando o entendimento da l\u00f3gica booleana para a programa\u00e7\u00e3o, omitindo alguns formalismos matem\u00e1ticos propositalmente.","title":"L\u00f3gica Booleana"},{"location":"programacao/condicionais/#operador-and-conjuncao","text":"O operador l\u00f3gico AND (^), tamb\u00e9m conhecido como conjun\u00e7\u00e3o, \u00e9 definido como sendo um operador l\u00f3gico bin\u00e1rio que retorna VERDADEIRO sempre que TODOS os seus operandos forem verdadeiros . Para facilitar a compreens\u00e3o, utilizamos uma tabela de valores l\u00f3gicos, a tabela verdade , para expressar os poss\u00edveis resultados da aplica\u00e7\u00e3o do operador AND sobre duas proposi\u00e7\u00f5es. Vamos supor que p tenha seus valores expressos na coluna e q , nas linhas. Deste modo, os poss\u00edvels resultados de p ^ q s\u00e3o: AND V F F F F V V F Resumo A conclus\u00e3o l\u00f3gica do operador AND somente \u00e9 verdadeira se todas as proposi\u00e7\u00f5es forem verdadeiras.","title":"Operador AND (conjun\u00e7\u00e3o)"},{"location":"programacao/condicionais/#operador-or-disjuncao","text":"O operador l\u00f3gico OR (\u2228), tamb\u00e9m conhecido como disjun\u00e7\u00e3o, \u00e9 definido como sendo um operador l\u00f3gico bin\u00e1rio que retorna FALSO sempre que TODOS os seus operandos forem falsos . Utilizando a tabela verdade para expressar os poss\u00edvels resultados de p v q temos: OR V F F V F V V V Resumo A conclus\u00e3o l\u00f3gica do operador OR somente \u00e9 falsas se todas as proposi\u00e7\u00f5es forem falsas.","title":"Operador OR (disjun\u00e7\u00e3o)"},{"location":"programacao/condicionais/#operador-not","text":"O operador l\u00f3gico NOT (~), tamb\u00e9m conhecido como nega\u00e7\u00e3o, \u00e9 definido como sendo um operador l\u00f3gico un\u00e1rio que retorna a nega\u00e7\u00e3o (inverso l\u00f3gico) de seu operando . Utilizando a tabela verdade para expressar os poss\u00edvels resultados de ~p temos: p ~p F V V F Resumo A conclus\u00e3o l\u00f3gica do operador NOT \u00e9 verdadeiro quando receber falso , e falso quando receber verdadeiro Tudo bem, sabemos o que s\u00e3o proposi\u00e7\u00f5es l\u00f3gicas e conhecemos os tr\u00eas operadores l\u00f3gicos b\u00e1sicos. Mas, de que forma utilizamos tais recursos na programa\u00e7\u00e3o? ...\u00c9 justamente isso que vou apresentar na sequ\u00eancia ;)","title":"Operador NOT (~)"},{"location":"programacao/condicionais/#logica-booleana-aplicada-a-programacao","text":"Microprocessadores possuem uma ou mais unidades l\u00f3gico-aritm\u00e9ticas (ULA), componente que, como o pr\u00f3prio nome sugere, tem a capacidade de executar instru\u00e7\u00f5es aritm\u00e9ticas e instru\u00e7\u00f5es l\u00f3gicas. Utilizando linguagens de programa\u00e7\u00e3o de alto n\u00edvel, como C++, temos acesso a estes recursos atrav\u00e9s de operadores, s\u00edmbolos que a linguagem define para tais finalidades. Especificamente sobre as opera\u00e7\u00f5es l\u00f3gicas, precisamos lembrar que o C++ define um tipo de dado espec\u00edfico para representar valores booleanos, o tipo bool . Quanto aos operadores l\u00f3gicos, os s\u00edmbolos utilizados s\u00e3o: && para AND, || para OR e ! para NOT. J\u00e1 os operadores de compara\u00e7\u00e3o principais s\u00e3o os seguintes: Operador Significado Exemplo Descri\u00e7\u00e3o > maior que a > b verdadeiro, se a for maior que b < menor que a < b verdadeiro, se a for menor que b >= maior ou igual a a >= b verdadeiro, se a for maior ou igual a b <= menor ou igual a a <= b verdadeiro, se a for menor ou igual a b == igual a == b verdadeiro, se iguais != diferente a !== b verdadeiro, se diferentes Utilizando os operadores l\u00f3gicos e os operadores de compara\u00e7\u00e3o temos como escrever express\u00f5es l\u00f3gicas em nossos programas. Imaginemos por um instante que estamos trabalhando em c\u00f3digo para sele\u00e7\u00e3o de candidatos. Nossos crit\u00e9rios de sele\u00e7\u00e3o ser\u00e3o idade igual ou superior a 18 anos, altura superior a 160cm e peso superior a 60kg . Em nosso c\u00f3digo, armazenamos a idade do candidato em uma vari\u00e1vel inteira chamava idade_c , altura em uma vari\u00e1vel inteira altura_c e peso, em uma vari\u00e1vel de ponto fluturante peso_c . Ap\u00f3s atribuir os dados \u00e0s respectivas vari\u00e1veis, poder\u00edamos codificar a express\u00e3o abaixo para determinar se o candidato ser\u00e1 selecionado ou n\u00e3o: bool is_selecionado = idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ; Observe que utilizamos o operador && , uma vez que as tr\u00eas condi\u00e7\u00f5es (proposi\u00e7\u00f5es) devem ser atendidas. Portanto, a vari\u00e1vel is_selecionado receber\u00e1 true somente nesta situa\u00e7\u00e3o. Mas o que faremos com a vari\u00e1vel is_selecionado ? Sabemos que sendo true precisamos indicar ao usu\u00e1rio de nosso programa que o candidato atende os crit\u00e9rios. Ou seja, precisamos condicionar a execu\u00e7\u00e3o de determinadas instru\u00e7\u00f5es do programa ao resultado de avalia\u00e7\u00e3o da express\u00e3o l\u00f3gica. Como fazer ent\u00e3o?","title":"L\u00f3gica booleana aplicada \u00e0 programa\u00e7\u00e3o"},{"location":"programacao/condicionais/#comando-if-else","text":"Um dos comandos da linguagem C++ (e de boa parte das outras) \u00e9 o if . Utilizamos ele para criar desvios condicionais na execu\u00e7\u00e3o das instru\u00e7\u00f5es, que, pela ordem natural, s\u00e3o executadas em sequ\u00eancia. A estrutura do comando if \u00e9 simples e para demostrar, vamos seguir falando do nosso programa hipot\u00e9tico de sele\u00e7\u00e3o de candidatos. Observe o c\u00f3digo a seguir: bool is_selecionado = idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ; if ( is_selecionado ){ cout << \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\" << endl ; } else { cout << \"Candidato desclassificado\" << endl ; } Perceba que existem tr\u00eas partes do comando if no c\u00f3digo. express\u00e3o l\u00f3gica : sempre fica entre os par\u00eanteses () . \u00c9 parte obrigat\u00f3ria do comando e requer qualquer express\u00e3o l\u00f3gica v\u00e1lida, que possa ser reduzida a true ou false . Em nosso exemplo, estamos avaliando o valor contido na vari\u00e1vel is_selecionado , que \u00e9 do tipo bool . bloco de comandos para o resultado true : \u00e9 o primeiro par de chaves {} logo ap\u00f3s a express\u00e3o l\u00f3gica. Pode conter uma ou mais instru\u00e7\u00f5es, que ser\u00e3o executadas somente quando o resultado da express\u00e3o l\u00f3gica for avaliado como true . \u00c9 parte obrigat\u00f3ria do comando. bloco de comandos para o resultado false (else) : par de chaves imediatamente ap\u00f3s a palavra else . Pode conter uma ou mais instru\u00e7\u00f5es que ser\u00e3o executadas somente quando o resultado da express\u00e3o l\u00f3gica for avaliado como false . \u00c9 parte opcional do comando. Ent\u00e3o, conforme explicamos, nosso c\u00f3digo ir\u00e1 executar a instru\u00e7\u00e3o cout << \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\"<< endl; quando is_selecionado for true e cout << \"Candidato desclassificado\"<< endl; quando for false . A express\u00e3o l\u00f3gica pode ser informada diretamente no comando if . Inclusive, esta \u00e9 a forma mais comum de encontr\u00e1-la. Assim, podemos simplificar nosso trecho de c\u00f3digo, eliminando a vari\u00e1vel is_selecionado . Ter\u00edamos ent\u00e3o: if ( idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ){ cout << \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\" << endl ; } else { cout << \"Candidato desclassificado\" << endl ; }","title":"Comando IF ELSE"},{"location":"programacao/condicionais/#comando-if-else-if","text":"Uma varia\u00e7\u00e3o do comando if permite especificar condi\u00e7\u00f5es para os blocos else . Para demonstrar seu uso, vamos imaginar um novo programa que apresente a situa\u00e7\u00e3o de estudantes com base na m\u00e9dia final em determinada disciplina. A rela\u00e7\u00e3o entre as notas e as respectivas situa\u00e7\u00f5es est\u00e3o na tabela que segue. Nota Situa\u00e7\u00e3o 0-4.9 Reprovado 5.0-6.9 Exame 7.0-10 Aprovado Uma poss\u00edvel codifica\u00e7\u00e3o para o programa em quest\u00e3o seria: /*defini\u00e7\u00e3o de vari\u00e1veis e leitura de dados...*/ if ( nota >= 0 && nota <= 4.9 ){ cout << \"Reprovado\" ; } else if ( nota >= 5.0 && nota <= 6.9 ){ cout << \"Exame\" ; } else { cout << \"Aprovado\" ; } Note que o else if pode aparecer v\u00e1rias vezes na mesma instru\u00e7\u00e3o, tantas quantas forem necess\u00e1rias. E, mais importante: assim que uma condi\u00e7\u00e3o for avaliada como true , nenhuma outra da mesma instru\u00e7\u00e3o ser\u00e1 avaliada.","title":"Comando IF ELSE IF"},{"location":"programacao/condicionais/#operador-ternario","text":"Para algumas situa\u00e7\u00f5es, podemos utilizar uma simplifica\u00e7\u00e3o de sintaxe da estrutura if else chamada operador tern\u00e1rio . Seu uso \u00e9 especialmente interessante para testes simples, como aquele que fizemos no programa de sele\u00e7\u00e3o de candidatos. Veja a diferen\u00e7a: cout << ( idade_c >= 18 && altura_c > 160 && peso_c > 60.0 ? \"Candidato atende aos crit\u00e9rios de sele\u00e7\u00e3o\" : \"Candidato desclassificado\" ) << endl ; Pelo c\u00f3digo, percebemos que a sintaxe do comando \u00e9: express\u00e3o l\u00f3gica ? valor quando true : valor quando false . \u00c9 simples de usar, mas pode prejudicar a legibilidade do c\u00f3digo se aplicado para testes mais complexos. Vale o bom senso ;)","title":"Operador tern\u00e1rio"},{"location":"programacao/condicionais/#switch","text":"Finalizamos nosso estudo com o comando switch , uma estrutura de decis\u00e3o baseada em casos. Antes de conhecermos a sintaxe do comando, vamos propor um c\u00f3digo de exemplo: int nota ; cin >> nota ; switch ( nota ) { case 1 : case 2 : case 3 : case 4 : cout << \"Reprovado\" << endl ; break ; case 5 : case 6 : cout << \"Exame\" << endl ; break ; case 7 : case 8 : case 9 : case 10 : cout << \"Aprovado\" << endl ; break ; default : cout << \"Nota inv\u00e1lida\" << endl ; } Nosso exemplo tr\u00e1s importantes informa\u00e7\u00f5es acerca da sintaxe e uso do comando switch . O primeiro deles \u00e9 que devemos informar uma vari\u00e1vel (ou express\u00e3o) que possa ser avaliada como inteiro ou tipo enumer\u00e1vel. No c\u00f3digo, a vari\u00e1vel nota entre parenteses () serve a tal finalidade. Objetivamente estamos consultando o valor de nota e estabelecendo o que fazer para cada um dos valores de interesse. Estes valores de interesse est\u00e3o expressos nos casos ( case ). Ent\u00e3o, se a leitura da vari\u00e1vel nota indicar que seu valor \u00e9 4 , o programa vai executar as instru\u00e7\u00f5es cout << \"Exame\" << endl; e break . E se o valor for 1 , vai executar todas as instru\u00e7\u00f5es que seguem nos pr\u00f3ximos cases at\u00e9 encontrar o break . Opa, como assim executar os \"outros cases\"? Exatamente isso: o comando break indica a interrup\u00e7\u00e3o do processamento do switch . Se ele n\u00e3o estiver presente, a execu\u00e7\u00e3o ir\u00e1 iniciar pelo case pertinente ao valor da express\u00e3o, continuando at\u00e9 o final, passando pelas instru\u00e7\u00f5es de outros casos. Ent\u00e3o, se voc\u00ea quer finalizar a execu\u00e7\u00e3o naquele case espec\u00edfico, deve colocar o comando break . Ok, mas por que o c\u00f3digo anterior n\u00e3o tem break em v\u00e1rios cases ? Bem, porque notas entre 1 e 4 est\u00e3o associadas com a situa\u00e7\u00e3o Reprovado . Para n\u00e3o repetir a mesma instru\u00e7\u00e3o v\u00e1rias vezes, colocamos o break somente no case 4 . O mesmo vale para 5 e 6 e 7 a 10 . J\u00e1 o comando default \u00e9 especial, executado quando nenhum dos cases anteriores corresponde ao valor da express\u00e3o avaliada. A presen\u00e7a do default \u00e9 opcional no comando switch . Para mais informa\u00e7\u00f5es sobre desvios condicionais, recomendo a leitura do tutorial da W3C que trata deste assunto.","title":"Switch"},{"location":"programacao/estruturas-dados/","text":"","title":"Estruturas de Dados"},{"location":"programacao/identificadores/","text":"Codificar um software compreende, basicamente, modificar estados conforme sequ\u00eancia e regras previamente definidas. Neste processo, dar nomes \u00e0s estruturas e, por vezes, inicializ\u00e1-las com valores \u00e9 tarefa trivial. Por ser praticamente indissoci\u00e1vel da pr\u00e1tica de programa\u00e7\u00e3o, toda linguagem estabelece regras para nomenclatura de identificadores (nome que o programador atribui \u00e0s estruturas) e para defini\u00e7\u00e3o de literais (valores fixos). Na sequ\u00eancia vamos abordar como vari\u00e1veis e literais s\u00e3o definidos na linguagem C++. Vari\u00e1veis \u00b6 Um programa \u00e9 composto por instru\u00e7\u00f5es e dados , ambos armazenados na mem\u00f3ria RAM do computador. Enquanto que instru\u00e7\u00f5es, em sua maioria, representam que tipo de manipula\u00e7\u00e3o o processador deve executar com os dados (somas, subtra\u00e7\u00f5es, multiplica\u00e7\u00f5es, etc.), as vari\u00e1veis representam os espa\u00e7os de armazenamento de dados do programa. Os dados s\u00e3o armazenados em vari\u00e1veis , que nada mais s\u00e3o que espa\u00e7os de mem\u00f3ria RAM reservados para tal finalidade. Precisamos lembrar que vari\u00e1veis apresentam alguma propriedades importantes: Nome : O nome da vari\u00e1vel \u00e9 a identifica\u00e7\u00e3o que o programador atribui \u00e0 \u00e1rea de mem\u00f3ria. O nome deve ser suficientemente claro para indicar o significado dos dados nela armazemados. A nomenclatura de vari\u00e1veis deve respeitar as restri\u00e7\u00f5es impostas a identificadores da linguagem, bem como padr\u00f5es de legibilidade de c\u00f3digo que a boa pr\u00e1tica recomenda. Tamb\u00e9m h\u00e1 diferen\u00e7a entre caracteres mai\u00fasculos e min\u00fasculos. Tipo : Vari\u00e1veis, em linguagens fortemente tipadas, devem indicar qual \u00e9 a natureza dos dados que o programador poder\u00e1 nelas armazenar. O tipo representa uma restri\u00e7\u00e3o, limitando o conjunto de valores aceitos. A linguagem C++ define um conjunto de tipos b\u00e1sicos. Sugiro a leitura deste tutorial para maiores detalhes. No c\u00f3digo apresentado ao final deste tutorial, voc\u00ea ir\u00e1 observar diversas declara\u00e7\u00f5es de vari\u00e1veis. A t\u00edtulo de exemplo, observe o trecho de c\u00f3digo que segue. Nele s\u00e3o declaradas tr\u00eas vari\u00e1veis, a saber, contador , preco , lucro_liquido . Estes s\u00e3o os nomes das vari\u00e1veis. J\u00e1 int , float e double representam o tipo de dado. No caso da vari\u00e1vel contador , estamos fazendo a declara\u00e7\u00e3o e a inicializa\u00e7\u00e3o em uma \u00fanica instru\u00e7\u00e3o. Assim, t\u00e3o logo criada, a vari\u00e1vel receber\u00e1 o valor 0 . int contador = 0 ; float preco ; double lucro_liquido ; Literais \u00b6 Literal \u00e9 todo valor informado de forma fixa no c\u00f3digo. \u00c9 comum utilizar a express\u00e3o hard code para descrever a opera\u00e7\u00e3o. Normalmente os literais s\u00e3o utilizados para iniciar estruturas do programa, ou seja, definir seu valor inicial. Os literais podem representar n\u00fameros inteiros, n\u00fameros reais, valores booleanos, caracteres ou sequ\u00eancia de caracteres. Para cada caso existem particularidades, as quais iremos tratar a seguir. Literais para n\u00fameros inteiros \u00b6 N\u00fameros inteiros s\u00e3o n\u00fameros n\u00e3o fracionais, ou seja, n\u00e3o apresentam valores ap\u00f3s a v\u00edrgula. Sua representa\u00e7\u00e3o se d\u00e1, normalmente, em base decimal. Contudo, o C++ aceita tamb\u00e9m n\u00fameros representados em base octal , hexadecimal e bin\u00e1ria . Quando em decimal , um n\u00famero pode ser expresso utilizando somente caracteres de 0 a 9. A representa\u00e7\u00e3o decimal \u00e9 a mais confort\u00e1vel na perspectiva do programador porque \u00e9 o sistema de representa\u00e7\u00e3o num\u00e9rico do nosso dia-a-dia. Literais inteiros expressos em decimal podem utilizar aspa simples para demarcar milhares. Tal recurso conforme apenas maior legibilidade ao c\u00f3digo-fonte. Observe o trecho de c\u00f3digo a seguir: var_int = 24'000 ; //base decimal A presenta\u00e7\u00e3o octal , por sua vez, considera apenas caracteres de 0 a 7. Para informar literais octais em um programa C++, o programador deve prefixar o n\u00famero com 0. Observe o c\u00f3digo abaixo: var_octal = 071 ; //base octal Um m\u00e9todo simples para convers\u00e3o de octal para decimal \u00e9 utilizar uma tabela de pot\u00eancias de base 8 . Isso porque assim como decimal, o octal \u00e9 um sistema num\u00e9rico posicional. Observe: 8 3 8 2 8 1 8 0 7 1 Considerando a tabela de convers\u00e3o, o valor octal 71 equivale a 57 em decimal, resultante de 8*7 + 1 . No caso da representa\u00e7\u00e3o hexadecimal , os caracteres aceitos s\u00e3o de 0 a 9 e de A a F . Todo literal hexadecimal deve ser prefixado com 0X ou 0x . A base hexadecimal \u00e9 muito utilizada para expressar conte\u00fado de mem\u00f3ria do computador, pois al\u00e9m de reduz a quantidade de caracteres necess\u00e1rios, o processo de convers\u00e3o bin\u00e1rio-hexadecimal \u00e9 bastante simples. Observe o trecho de c\u00f3digo a seguir: var_hex = 0xF2 ; //base hexadecimal Os caracteres de A a F do sistema hexadecimal equivalem a 10 , 11 , 12 , 13 , 14 e 15 no sistema decimal, respectivamente. Desta forma, para converter de hexadecimal para decimal, podemos utilizar a tabela de pot\u00eancias, agora com base 16 . 16 3 16 2 16 1 16 0 F 2 Em nosso exemplo, F2 equivale ao valor 242 em decimal, visto que \u00e9 o resultado da express\u00e3o 15*16 + 2 . E finalmente chegamos a representa\u00e7\u00e3o bin\u00e1ria , natural da m\u00e1quina. Literais inteiros expressos em bin\u00e1rio s\u00e3o sequ\u00eancias de 0s e 1s prefixados com 0b ou 0B . Literais para n\u00fameros de ponto flutuante \u00b6 Ponto flutuante \u00e9 o nome dado para um n\u00famero real representado digitalmente no computador. Quando informamos um literal que expressa um n\u00famero real na programa\u00e7\u00e3o, devemos utilizar o caractere . para separar a parte decimal da inteira. Tamb\u00e9m \u00e9 poss\u00edvel utilizar aspas simples para separar os milhares. N\u00fameros de ponto flutuante podem ser armazenados com precis\u00e3o simples (identificados com o tipo float ) ou com precis\u00e3o dupla (tipo double ). N\u00fameros de precis\u00e3o simples utilizam 32 bits de espa\u00e7o de mem\u00f3ria, enquanto n\u00fameros de precis\u00e3o dupla utilizam 64 bits. Outra importante diferen\u00e7a refere-se a quantidade de casas decimais armazenadas: enquanto um tipo float armazena at\u00e9 7 casas decimais, um double armazena 15 casas. float var_float ; double var_double ; var_float = 1'234.34 ; var_double = 345 ; Literais booleanos \u00b6 \u00c1lgebra booleana \u00e9 um formalizmo matem\u00e1tico utilizado na computa\u00e7\u00e3o para implementar testes l\u00f3gicos. Na \u00e1lgebra booleana temos dois estados poss\u00edveis para um proposi\u00e7\u00e3o l\u00f3gica: verdadeiro e falso . No C++, o estado verdadeiro \u00e9 representado pelo literal true (ou pelo literal inteiro 1 ). J\u00e1 o estado falso \u00e9 representado pelo literal false (ou pelo literal inteiro 0 ). Observe o exemplo: bool var_true , var_false ; var_true = true ; var_false = false ; var_true = 1 ; var_false = 0 ; Literais para caracteres \u00b6 Caracteres s\u00e3o os s\u00edmbolos do alfabeto, pontua\u00e7\u00e3o, entre outros. Nem todo caractere tem representa\u00e7\u00e3o gr\u00e1fica (quebra de linha e fim de arquivo, por exemplo). Para representar caracteres computacionalmente, pode-se utilizar 1 ou 2 bytes. O padr\u00e3o Unicode \u00e9 a norma atual para representa\u00e7\u00e3o de caracteres de forma universal, independementente de plataforma, programa, linguagem ou mesmo idioma. O padr\u00e3o Unicode utiliza 2 bytes para representar o c\u00f3digo num\u00e9rico de cada um dos 137,929 caracteres existentes ( Vers\u00e3o 12 ) Em C++, os literais de caracteres s\u00e3o representados envolvidos por aspas simples. Observe o exemplo: char var_char ; var_char = 'c' ; var_char = 'B' ; Literais para strings \u00b6 Strings s\u00e3o sequ\u00eancias de caracteres, ou simplesmente, a forma de expressar texto na programa\u00e7\u00e3o. Literais s\u00e3o definidos no C++ por meio de aspas duplas, conforme demonstra o exemplo. string var_string ; var_string = \"Ol\u00e1, isso \u00e9 um texto\" ; Um pouco de c\u00f3digo \u00b6 Observe o c\u00f3digo-fonte do programa a seguir. Perceba que nele s\u00e3o declaradas vari\u00e1veis cuja inicializa\u00e7\u00e3o faz uso dos literais que estudamos anteriormente.","title":"Identificadores"},{"location":"programacao/identificadores/#variaveis","text":"Um programa \u00e9 composto por instru\u00e7\u00f5es e dados , ambos armazenados na mem\u00f3ria RAM do computador. Enquanto que instru\u00e7\u00f5es, em sua maioria, representam que tipo de manipula\u00e7\u00e3o o processador deve executar com os dados (somas, subtra\u00e7\u00f5es, multiplica\u00e7\u00f5es, etc.), as vari\u00e1veis representam os espa\u00e7os de armazenamento de dados do programa. Os dados s\u00e3o armazenados em vari\u00e1veis , que nada mais s\u00e3o que espa\u00e7os de mem\u00f3ria RAM reservados para tal finalidade. Precisamos lembrar que vari\u00e1veis apresentam alguma propriedades importantes: Nome : O nome da vari\u00e1vel \u00e9 a identifica\u00e7\u00e3o que o programador atribui \u00e0 \u00e1rea de mem\u00f3ria. O nome deve ser suficientemente claro para indicar o significado dos dados nela armazemados. A nomenclatura de vari\u00e1veis deve respeitar as restri\u00e7\u00f5es impostas a identificadores da linguagem, bem como padr\u00f5es de legibilidade de c\u00f3digo que a boa pr\u00e1tica recomenda. Tamb\u00e9m h\u00e1 diferen\u00e7a entre caracteres mai\u00fasculos e min\u00fasculos. Tipo : Vari\u00e1veis, em linguagens fortemente tipadas, devem indicar qual \u00e9 a natureza dos dados que o programador poder\u00e1 nelas armazenar. O tipo representa uma restri\u00e7\u00e3o, limitando o conjunto de valores aceitos. A linguagem C++ define um conjunto de tipos b\u00e1sicos. Sugiro a leitura deste tutorial para maiores detalhes. No c\u00f3digo apresentado ao final deste tutorial, voc\u00ea ir\u00e1 observar diversas declara\u00e7\u00f5es de vari\u00e1veis. A t\u00edtulo de exemplo, observe o trecho de c\u00f3digo que segue. Nele s\u00e3o declaradas tr\u00eas vari\u00e1veis, a saber, contador , preco , lucro_liquido . Estes s\u00e3o os nomes das vari\u00e1veis. J\u00e1 int , float e double representam o tipo de dado. No caso da vari\u00e1vel contador , estamos fazendo a declara\u00e7\u00e3o e a inicializa\u00e7\u00e3o em uma \u00fanica instru\u00e7\u00e3o. Assim, t\u00e3o logo criada, a vari\u00e1vel receber\u00e1 o valor 0 . int contador = 0 ; float preco ; double lucro_liquido ;","title":"Vari\u00e1veis"},{"location":"programacao/identificadores/#literais","text":"Literal \u00e9 todo valor informado de forma fixa no c\u00f3digo. \u00c9 comum utilizar a express\u00e3o hard code para descrever a opera\u00e7\u00e3o. Normalmente os literais s\u00e3o utilizados para iniciar estruturas do programa, ou seja, definir seu valor inicial. Os literais podem representar n\u00fameros inteiros, n\u00fameros reais, valores booleanos, caracteres ou sequ\u00eancia de caracteres. Para cada caso existem particularidades, as quais iremos tratar a seguir.","title":"Literais"},{"location":"programacao/identificadores/#literais-para-numeros-inteiros","text":"N\u00fameros inteiros s\u00e3o n\u00fameros n\u00e3o fracionais, ou seja, n\u00e3o apresentam valores ap\u00f3s a v\u00edrgula. Sua representa\u00e7\u00e3o se d\u00e1, normalmente, em base decimal. Contudo, o C++ aceita tamb\u00e9m n\u00fameros representados em base octal , hexadecimal e bin\u00e1ria . Quando em decimal , um n\u00famero pode ser expresso utilizando somente caracteres de 0 a 9. A representa\u00e7\u00e3o decimal \u00e9 a mais confort\u00e1vel na perspectiva do programador porque \u00e9 o sistema de representa\u00e7\u00e3o num\u00e9rico do nosso dia-a-dia. Literais inteiros expressos em decimal podem utilizar aspa simples para demarcar milhares. Tal recurso conforme apenas maior legibilidade ao c\u00f3digo-fonte. Observe o trecho de c\u00f3digo a seguir: var_int = 24'000 ; //base decimal A presenta\u00e7\u00e3o octal , por sua vez, considera apenas caracteres de 0 a 7. Para informar literais octais em um programa C++, o programador deve prefixar o n\u00famero com 0. Observe o c\u00f3digo abaixo: var_octal = 071 ; //base octal Um m\u00e9todo simples para convers\u00e3o de octal para decimal \u00e9 utilizar uma tabela de pot\u00eancias de base 8 . Isso porque assim como decimal, o octal \u00e9 um sistema num\u00e9rico posicional. Observe: 8 3 8 2 8 1 8 0 7 1 Considerando a tabela de convers\u00e3o, o valor octal 71 equivale a 57 em decimal, resultante de 8*7 + 1 . No caso da representa\u00e7\u00e3o hexadecimal , os caracteres aceitos s\u00e3o de 0 a 9 e de A a F . Todo literal hexadecimal deve ser prefixado com 0X ou 0x . A base hexadecimal \u00e9 muito utilizada para expressar conte\u00fado de mem\u00f3ria do computador, pois al\u00e9m de reduz a quantidade de caracteres necess\u00e1rios, o processo de convers\u00e3o bin\u00e1rio-hexadecimal \u00e9 bastante simples. Observe o trecho de c\u00f3digo a seguir: var_hex = 0xF2 ; //base hexadecimal Os caracteres de A a F do sistema hexadecimal equivalem a 10 , 11 , 12 , 13 , 14 e 15 no sistema decimal, respectivamente. Desta forma, para converter de hexadecimal para decimal, podemos utilizar a tabela de pot\u00eancias, agora com base 16 . 16 3 16 2 16 1 16 0 F 2 Em nosso exemplo, F2 equivale ao valor 242 em decimal, visto que \u00e9 o resultado da express\u00e3o 15*16 + 2 . E finalmente chegamos a representa\u00e7\u00e3o bin\u00e1ria , natural da m\u00e1quina. Literais inteiros expressos em bin\u00e1rio s\u00e3o sequ\u00eancias de 0s e 1s prefixados com 0b ou 0B .","title":"Literais para n\u00fameros inteiros"},{"location":"programacao/identificadores/#literais-para-numeros-de-ponto-flutuante","text":"Ponto flutuante \u00e9 o nome dado para um n\u00famero real representado digitalmente no computador. Quando informamos um literal que expressa um n\u00famero real na programa\u00e7\u00e3o, devemos utilizar o caractere . para separar a parte decimal da inteira. Tamb\u00e9m \u00e9 poss\u00edvel utilizar aspas simples para separar os milhares. N\u00fameros de ponto flutuante podem ser armazenados com precis\u00e3o simples (identificados com o tipo float ) ou com precis\u00e3o dupla (tipo double ). N\u00fameros de precis\u00e3o simples utilizam 32 bits de espa\u00e7o de mem\u00f3ria, enquanto n\u00fameros de precis\u00e3o dupla utilizam 64 bits. Outra importante diferen\u00e7a refere-se a quantidade de casas decimais armazenadas: enquanto um tipo float armazena at\u00e9 7 casas decimais, um double armazena 15 casas. float var_float ; double var_double ; var_float = 1'234.34 ; var_double = 345 ;","title":"Literais para n\u00fameros de ponto flutuante"},{"location":"programacao/identificadores/#literais-booleanos","text":"\u00c1lgebra booleana \u00e9 um formalizmo matem\u00e1tico utilizado na computa\u00e7\u00e3o para implementar testes l\u00f3gicos. Na \u00e1lgebra booleana temos dois estados poss\u00edveis para um proposi\u00e7\u00e3o l\u00f3gica: verdadeiro e falso . No C++, o estado verdadeiro \u00e9 representado pelo literal true (ou pelo literal inteiro 1 ). J\u00e1 o estado falso \u00e9 representado pelo literal false (ou pelo literal inteiro 0 ). Observe o exemplo: bool var_true , var_false ; var_true = true ; var_false = false ; var_true = 1 ; var_false = 0 ;","title":"Literais booleanos"},{"location":"programacao/identificadores/#literais-para-caracteres","text":"Caracteres s\u00e3o os s\u00edmbolos do alfabeto, pontua\u00e7\u00e3o, entre outros. Nem todo caractere tem representa\u00e7\u00e3o gr\u00e1fica (quebra de linha e fim de arquivo, por exemplo). Para representar caracteres computacionalmente, pode-se utilizar 1 ou 2 bytes. O padr\u00e3o Unicode \u00e9 a norma atual para representa\u00e7\u00e3o de caracteres de forma universal, independementente de plataforma, programa, linguagem ou mesmo idioma. O padr\u00e3o Unicode utiliza 2 bytes para representar o c\u00f3digo num\u00e9rico de cada um dos 137,929 caracteres existentes ( Vers\u00e3o 12 ) Em C++, os literais de caracteres s\u00e3o representados envolvidos por aspas simples. Observe o exemplo: char var_char ; var_char = 'c' ; var_char = 'B' ;","title":"Literais para caracteres"},{"location":"programacao/identificadores/#literais-para-strings","text":"Strings s\u00e3o sequ\u00eancias de caracteres, ou simplesmente, a forma de expressar texto na programa\u00e7\u00e3o. Literais s\u00e3o definidos no C++ por meio de aspas duplas, conforme demonstra o exemplo. string var_string ; var_string = \"Ol\u00e1, isso \u00e9 um texto\" ;","title":"Literais para strings"},{"location":"programacao/identificadores/#um-pouco-de-codigo","text":"Observe o c\u00f3digo-fonte do programa a seguir. Perceba que nele s\u00e3o declaradas vari\u00e1veis cuja inicializa\u00e7\u00e3o faz uso dos literais que estudamos anteriormente.","title":"Um pouco de c\u00f3digo"},{"location":"programacao/io/","text":"Programas de computador s\u00e3o criados basicamente para processar dados. Espera-se, portanto, que hajam meios do programa receber tais dados e devolver os resultados do processamento. Um destes meios s\u00e3o os consoles , ou seja, janelas do sistema operacional que permitem apenas comandos na forma de texto. Outra forma t\u00edpica de coletar e apresentar dados s\u00e3o por interfaces gr\u00e1ficas baseadas em janelas. De qualquer modo, em todos os casos, estamos falando de opera\u00e7\u00f5es de input/output (tamb\u00e9m conhecidas como i/o ). Neste artigo iremos explorar o processo de i/o em console do C++ por meio da bibliote\u00e7a iostream . Cin e cout \u00b6 Em C++ utilizamos o objeto cin para ler valores do teclado, enquanto que utilizamos cout para imprimir valores em tela. Vamos come\u00e7ar nosso estudo pela entrada de dados. Para lermos informa\u00e7\u00f5es do teclado precisamos informar ao objeto cin a vari\u00e1vel de destino. Deste modo, o valor informado ser\u00e1 transferido (registrado) na vari\u00e1vel para posteriormente ser utilizado. Neste processo, podemos informar uma ou mais vari\u00e1veis na mesma instru\u00e7\u00e3o, logo ap\u00f3s o opera\u00e7\u00e3o de extra\u00e7\u00e3o >> . Aten\u00e7\u00e3o Toda vari\u00e1vel no C++, para ser utilizada, deve obrigatoriamente ter sido declarada em instru\u00e7\u00f5es anteriores. Somente podemos utilizar aquilo que j\u00e1 foi \"criado\". Supondo que quis\u00e9ssemos ler o pre\u00e7o de determinado produto do supermercado para uma vari\u00e1vel de nosso programa, primeiro dever\u00edamos realizar a declara\u00e7\u00e3o da mesma e, ap\u00f3s, a leitura. Considerando que pre\u00e7o refere-se a um conceito num\u00e9rico com possibilidade de casas decimais, devemos utilizar, na declara\u00e7\u00e3o, tipos de dados de ponto flutuante, como float ou double . Logo, de forma bem resumida, ter\u00edamos no m\u00ednimo duas etapas em nosso programa relacionadas a este contexto: Declara\u00e7\u00e3o da vari\u00e1vel: float preco_produto; Leitura de valor de produto do console: cin >> preco_produto; Outro aspecto importante \u00e9 que as duas instru\u00e7\u00f5es acima n\u00e3o podem ser invertidas, ou seja, a declara\u00e7\u00e3o deve ocorrer obrigatoriamente em linhas anteriores ao uso da vari\u00e1vel. Mas voc\u00ea h\u00e1 de concordar comigo que simplesmente ficar aguardando o usu\u00e1rio informar um valor pelo teclado, sem inform\u00e1-lo do que o programa espera receber n\u00e3o parece ser adequado. O correto \u00e9 apresentar mensagens para, posteriormente, aguardar o valor. Para esta finalidade precisamos recorrer ao objeto cout . Voltando ao exemplo do pre\u00e7o do produto, seria mais conveniente realizar a seguinte sequ\u00eancia de instru\u00e7\u00f5es: Declara\u00e7\u00e3o da vari\u00e1vel: float preco_produto; Apresentar mensagem em tela: cout << \"Informe o valor do produto:\" Leitura de valor do produto do console: cin >> preco_produto; Aten\u00e7\u00e3o Percebeu que o operador que acompanha o cout \u00e9 oposto em sentido ao do cin ? Pois \u00e9, enquanto o operador de extra\u00e7\u00e3o >> \u00e9 utilizado no objeto cin , o do cout chama-se operador de inser\u00e7\u00e3o e se op\u00f5em em sentido, apontando para a esquerda << . Estudo de caso \u00b6 Observe nosso programa exemplo abaixo. Tenha especial aten\u00e7\u00e3o aos tipos de dado utilizados na decla\u00e7\u00e3o das vari\u00e1veis e aos usos dos objetos de entrada e sa\u00edda. Execute o c\u00f3digo com especial aten\u00e7\u00e3o \u00e0s mensagens exibidas em tela, buscando relacionar com a instru\u00e7\u00e3o que as gera. #include <iostream> using namespace std ; int main () { int ano_nascimento ; float peso ; string nome ; cout << \"Informe seu nome: \" ; cin >> nome ; cout << \"Informe seu peso: \" ; cin >> peso ; cout << \"Informe seu ano de nascimento: \" ; cin >> ano_nascimento ; cout << endl << nome << \", nascido em \" << ano_nascimento << \" tem peso igual a \" << peso << endl ; } Formatando a sa\u00edda de dados \u00b6 A apresenta\u00e7\u00e3o das informa\u00e7\u00f5es ao usu\u00e1rio \u00e9 muito importante, afinal estamos falado de tornar a experi\u00eancia de uso do software o mais agrad\u00e1vel poss\u00edvel. Na intera\u00e7\u00e3o via console, podemos trabalhar a sa\u00edda com aux\u00edlio de recursos da biblioteca iomanip . O primeiro passo para utilizar a biblioteca \u00e9 inclu\u00ed-la no programa atrav\u00e9s da diretiva #include . Feito isso, temos acesso aos seguintes recursos: setfill : permite definir o caractere utilizado para preencher espa\u00e7os vazios. setw : especifica o n\u00famero de colunas reservadas para impress\u00e3o do valor que segue. left : alinhamento da sa\u00edda em tela \u00e0 esquerda. right : alinhamento da sa\u00edda em tela \u00e0 direita. setprecision : configura quantas casas decimais ser\u00e3o impressos na sa\u00edda de n\u00fameros de ponto flutuante. setiosflags : ativa flags do mecanismo de io, como o tipo de representa\u00e7\u00e3o num\u00e9rica utilizada na sa\u00edda, por exemplo. Colocar c\u00f3digo de exemplo. \u00b6","title":"Entrada e Sa\u00edda"},{"location":"programacao/io/#cin-e-cout","text":"Em C++ utilizamos o objeto cin para ler valores do teclado, enquanto que utilizamos cout para imprimir valores em tela. Vamos come\u00e7ar nosso estudo pela entrada de dados. Para lermos informa\u00e7\u00f5es do teclado precisamos informar ao objeto cin a vari\u00e1vel de destino. Deste modo, o valor informado ser\u00e1 transferido (registrado) na vari\u00e1vel para posteriormente ser utilizado. Neste processo, podemos informar uma ou mais vari\u00e1veis na mesma instru\u00e7\u00e3o, logo ap\u00f3s o opera\u00e7\u00e3o de extra\u00e7\u00e3o >> . Aten\u00e7\u00e3o Toda vari\u00e1vel no C++, para ser utilizada, deve obrigatoriamente ter sido declarada em instru\u00e7\u00f5es anteriores. Somente podemos utilizar aquilo que j\u00e1 foi \"criado\". Supondo que quis\u00e9ssemos ler o pre\u00e7o de determinado produto do supermercado para uma vari\u00e1vel de nosso programa, primeiro dever\u00edamos realizar a declara\u00e7\u00e3o da mesma e, ap\u00f3s, a leitura. Considerando que pre\u00e7o refere-se a um conceito num\u00e9rico com possibilidade de casas decimais, devemos utilizar, na declara\u00e7\u00e3o, tipos de dados de ponto flutuante, como float ou double . Logo, de forma bem resumida, ter\u00edamos no m\u00ednimo duas etapas em nosso programa relacionadas a este contexto: Declara\u00e7\u00e3o da vari\u00e1vel: float preco_produto; Leitura de valor de produto do console: cin >> preco_produto; Outro aspecto importante \u00e9 que as duas instru\u00e7\u00f5es acima n\u00e3o podem ser invertidas, ou seja, a declara\u00e7\u00e3o deve ocorrer obrigatoriamente em linhas anteriores ao uso da vari\u00e1vel. Mas voc\u00ea h\u00e1 de concordar comigo que simplesmente ficar aguardando o usu\u00e1rio informar um valor pelo teclado, sem inform\u00e1-lo do que o programa espera receber n\u00e3o parece ser adequado. O correto \u00e9 apresentar mensagens para, posteriormente, aguardar o valor. Para esta finalidade precisamos recorrer ao objeto cout . Voltando ao exemplo do pre\u00e7o do produto, seria mais conveniente realizar a seguinte sequ\u00eancia de instru\u00e7\u00f5es: Declara\u00e7\u00e3o da vari\u00e1vel: float preco_produto; Apresentar mensagem em tela: cout << \"Informe o valor do produto:\" Leitura de valor do produto do console: cin >> preco_produto; Aten\u00e7\u00e3o Percebeu que o operador que acompanha o cout \u00e9 oposto em sentido ao do cin ? Pois \u00e9, enquanto o operador de extra\u00e7\u00e3o >> \u00e9 utilizado no objeto cin , o do cout chama-se operador de inser\u00e7\u00e3o e se op\u00f5em em sentido, apontando para a esquerda << .","title":"Cin e cout"},{"location":"programacao/io/#estudo-de-caso","text":"Observe nosso programa exemplo abaixo. Tenha especial aten\u00e7\u00e3o aos tipos de dado utilizados na decla\u00e7\u00e3o das vari\u00e1veis e aos usos dos objetos de entrada e sa\u00edda. Execute o c\u00f3digo com especial aten\u00e7\u00e3o \u00e0s mensagens exibidas em tela, buscando relacionar com a instru\u00e7\u00e3o que as gera. #include <iostream> using namespace std ; int main () { int ano_nascimento ; float peso ; string nome ; cout << \"Informe seu nome: \" ; cin >> nome ; cout << \"Informe seu peso: \" ; cin >> peso ; cout << \"Informe seu ano de nascimento: \" ; cin >> ano_nascimento ; cout << endl << nome << \", nascido em \" << ano_nascimento << \" tem peso igual a \" << peso << endl ; }","title":"Estudo de caso"},{"location":"programacao/io/#formatando-a-saida-de-dados","text":"A apresenta\u00e7\u00e3o das informa\u00e7\u00f5es ao usu\u00e1rio \u00e9 muito importante, afinal estamos falado de tornar a experi\u00eancia de uso do software o mais agrad\u00e1vel poss\u00edvel. Na intera\u00e7\u00e3o via console, podemos trabalhar a sa\u00edda com aux\u00edlio de recursos da biblioteca iomanip . O primeiro passo para utilizar a biblioteca \u00e9 inclu\u00ed-la no programa atrav\u00e9s da diretiva #include . Feito isso, temos acesso aos seguintes recursos: setfill : permite definir o caractere utilizado para preencher espa\u00e7os vazios. setw : especifica o n\u00famero de colunas reservadas para impress\u00e3o do valor que segue. left : alinhamento da sa\u00edda em tela \u00e0 esquerda. right : alinhamento da sa\u00edda em tela \u00e0 direita. setprecision : configura quantas casas decimais ser\u00e3o impressos na sa\u00edda de n\u00fameros de ponto flutuante. setiosflags : ativa flags do mecanismo de io, como o tipo de representa\u00e7\u00e3o num\u00e9rica utilizada na sa\u00edda, por exemplo.","title":"Formatando a sa\u00edda de dados"},{"location":"programacao/io/#colocar-codigo-de-exemplo","text":"","title":"Colocar c\u00f3digo de exemplo."},{"location":"programacao/iteracao/","text":"","title":"Itera\u00e7\u00e3o"},{"location":"programacao/linguagens/","text":"A comunica\u00e7\u00e3o humana \u00e9 poss\u0131\u0301vel por meio de diferentes linguagens. No caso do computador, o mesmo se aplica, pois fazemos uso de uma linguagem de programa\u00e7\u00e3o para elaborar rotinas de computa\u00e7\u00e3o, ensinando o passo-a-passo para o computador. Importante Programar \u00e9 a arte de escrever sequ\u00eancias de instru\u00e7\u00f5es (comandos) para, computacionalmente, resolver problemas do mundo real por meio de uma linguagem de programa\u00e7\u00e3o. O programador converte problemas do mundo real em algoritmos atrav\u00e9s do processo de abstra\u00e7\u00e3o. O algoritmo representa a solu\u00e7\u00e3o computacional do problema, que ir\u00e1 se tornar operacional a partir do momento em que for codificado por meio de uma linguagem de programa\u00e7\u00e3o. S\u00f3 ent\u00e3o o usu\u00e1rio final ter\u00e1 condi\u00e7\u00f5es de utilizar o programa (que \u00e9 resultado da compila\u00e7\u00e3o ou interpreta\u00e7\u00e3o da codifica\u00e7\u00e3o) para atender suas necessidades. Do problema ao programa Problema > Algoritmo > C\u00f3digo-Fonte > Programa As linguagens de programa\u00e7\u00e3o podem ser classificadas sob diferentes perspectivas. \u00c9 poss\u00edvel agrup\u00e1-las quanto \u00e0: Gera\u00e7\u00e3o Dom\u00ednio da Aplica\u00e7\u00e3o Implementa\u00e7\u00e3o Paradigma A classifica\u00e7\u00e3o acima, contudo, n\u00e3o \u00e9 consenso. De qualquer forma, vamos tentar explorar as linguagens de programa\u00e7\u00e3o a partir da \u00f3tica das gera\u00e7\u00f5es e paradigmas. Linguagens de M\u00e1quina \u00b6 Interpretada diretamente pelo hardware. \u00c9 a linguagem que o processador reconhece. Compiladores, interpretadores e montadores convertem linguagens de mais alto n\u00edvel para linguagem de m\u00e1quina. Representa a 1\u00ba gera\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o . C\u00f3digo em linguagem de m\u00e1quina \u00e9 normalmente representado em hexadecimal para tornar a leitura mais simples. Contudo, sua codifica\u00e7\u00e3o original \u00e9 bin\u00e1ria. Programar neste n\u00edvel \u00e9 complexo e exige do profissional profundo conhecimento da arquitetura do hardware em que o programa ir\u00e1 executar. Este tipo de c\u00f3digo s\u00f3 \u00e9 portavel para arquiteturas identicas, uma vez que \u00e9 altamente dependente do hardware que executa. 8B542408 83FA0077 06B80000 0000C383 FA027706 B8010000 00C353BB 01000000 B9010000 008D0419 83FA0376 078BD989 Linguagem Assembly \u00b6 A intepreta\u00e7\u00e3o de c\u00f3digo de m\u00e1quina por seres humanos \u00e9 extremamente dif\u00edcil. Reconhecer a funcionalidade do c\u00f3digo a partir de sequ\u00eancias de c\u00f3digos hexadecimais \u00e9 praticamente uma odiss\u00e9ia. Isso porque o c\u00f3digo de m\u00e1quina n\u00e3o se preocupa com quest\u00f5es de legibilidade, afinal o processador n\u00e3o precisa desta feature . A fim de tornar a programa\u00e7\u00e3o uma atividade mais amig\u00e1vel para seres humanos, desenvolvou-se uma linguagem cuja sintaxe era mais pr\u00f3xima da escrita em ingl\u00eas, com as devidas restri\u00e7\u00f5es para tornar o c\u00f3digo n\u00e3o amb\u00edguo. Al\u00e9m de facilitar a compreens\u00e3o do algoritmo, a linguagem Assembly trouxe recursos de abstra\u00e7\u00e3o que permitiram manter a complexidade do programa sob controle (at\u00e9 certo ponto, \u00e9 claro). A Linguagem Assembly foi a primeira tentativa de adicionar abstra\u00e7\u00f5es (s\u00edmbolos chamado de mnem\u00f4nicos) sobre a linguagem de m\u00e1quina na esperan\u00e7a de que a programa\u00e7\u00e3o de software n\u00e3o fosse equipar\u00e1vel a um dos Doze Trabalhos de H\u00e9rcules . Ela representa a 2\u00aa gera\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o . Nota Perceba que tornou-se necess\u00e1rio \"passar\" o c\u00f3digo-fonte para um software chamado Assembler (montador) para gerar o c\u00f3digo em linguagem de m\u00e1quina (execut\u00e1vel). ;---------------------------------------------------------------------; START: ;---------------------------------------------------------------------; ; TEST FOR PRESENCE OF CALCULATOR ; ;---------------------------------------------------------------------; SUB AX,AX MOV ES,AX SUB BH,BH MOV BL,INT_NUMBER SHL BX,1 SHL BX,1 MOV DI,ES:[BX] MOV ES,ES:[BX+L\u00f3gica2] ADD DI,4 LEA SI,TAG MOV CX,TAG_LEN REPE CMPSB JE CALL_CALC MOV BX,SCREEN_HANDLE MOV CX,MESSAGE_LEN LEA DX,MESSAGE MOV AH,40h INT 21h JMP SHORT CALC_EXIT ;---------------------------------------------------------------------; ; CALL CALCULATOR ; ;---------------------------------------------------------------------; CALL_CALC: MOV AL,INT_NUMBER MOV BYTE PTR INT_CODE,AL DB 0CDh ; INT C\u00f3digo-fonte extra\u00eddo de https://assembly.happycodings.com/code13.html . Linguagens de Alto N\u0131\u0301vel \u00b6 A escrita do algoritmo \u00e9 feita utilizando-se um conjunto de comandos (palavras reservadas) em ingl\u00eas que determinam as a\u00e7\u00f5es que o computador deve realizar. Se na linguagem Assembly, os comandos representam \"apelidos\" para instru\u00e7\u00e3o de m\u00e1quina, nas linguagens de alto n\u00edvel, os comandos representam a\u00e7\u00f5es abstratas. Tais linguagens abrangem diferentes paradigmas, como estruturado, orientado a objetos, funcional e l\u00f3gico, por exemplo. Ao utilizar linguanges de alto n\u00edvel, o programador aumenta significativamente a portabilidade de seu c\u00f3digo dentre as diferentes arquiteturas de m\u00e1quina existentes, diferentemente da linguagem assembly ou de m\u00e1quina, que s\u00e3o altamente acopladas ao conjunto de instru\u00e7\u00f5es da CPU . Em termos de gera\u00e7\u00e3o, as linguagens de alto n\u00edvel podem enquadrar-se como sendo de 3\u00aa, 4\u00aa ou 5\u00aa gera\u00e7\u00e3o . Veja abaixo um trecho de c\u00f3digo escrito na linguagem C++. #include <iostream> using namespace std ; int saldo ; //vari\u00e1vel global int main (){ int parcela1 , parcela2 ; //vari\u00e1veis locais parcela1 = 10 , parcela2 = 12 ; saldo = parcela1 + parcela2 ; { //in\u00edcio de bloco cout << saldo << endl ; int saldo = 14 ; //variavel local cout << saldo << endl ; } //fim de bloco cout << saldo << endl ; return 0 ; } Linguagens de Sistema \u00b6 S\u00e3o linguagens de alto n\u00edvel utilizadas para programa\u00e7\u00e3o de sistemas. Caracterizam-se por oferecer acesso facilitado ao hardware, ao mesmo tempo que oferecem recursos t\u00edpicos de linguagens de pr\u00f3posito geral, como estruturas de sele\u00e7\u00e3o, la\u00e7os de repeti\u00e7\u00e3o e blocos, por exemplo. Uma destas linguagens chama-se Rust . fn main () { println! ( \"Hello World!\" ); } Linguagens de Dom\u0131\u0301nio Espec\u0131\u0301fico \u00b6 De alto n\u0131\u0301vel, aplicada a um contexto espec\u0131\u0301fico, com expressividade limitada. Express\u00f5es regulares s\u00e3o exemplos desta categoria. Saiba mais sobre DSL . Linguagens Visuais \u00b6 Toda linguagem que n\u00e3o \u00e9 baseada em texto. Exemplos deste tipo de linguagem s\u00e3o o Scratch e o Blockly . Linguagens Esot\u00e9ricas \u00b6 Linguagens que n\u00e3o tem prop\u00f3sito de uso, especificamente. Neste link voc\u00ea encontrar\u00e1 algumas delas . Ficou curioso sobre a classifica\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o? Que tal ler o conte\u00fado deste link para come\u00e7ar :)","title":"Linguagens de Programa\u00e7\u00e3o"},{"location":"programacao/linguagens/#linguagens-de-maquina","text":"Interpretada diretamente pelo hardware. \u00c9 a linguagem que o processador reconhece. Compiladores, interpretadores e montadores convertem linguagens de mais alto n\u00edvel para linguagem de m\u00e1quina. Representa a 1\u00ba gera\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o . C\u00f3digo em linguagem de m\u00e1quina \u00e9 normalmente representado em hexadecimal para tornar a leitura mais simples. Contudo, sua codifica\u00e7\u00e3o original \u00e9 bin\u00e1ria. Programar neste n\u00edvel \u00e9 complexo e exige do profissional profundo conhecimento da arquitetura do hardware em que o programa ir\u00e1 executar. Este tipo de c\u00f3digo s\u00f3 \u00e9 portavel para arquiteturas identicas, uma vez que \u00e9 altamente dependente do hardware que executa. 8B542408 83FA0077 06B80000 0000C383 FA027706 B8010000 00C353BB 01000000 B9010000 008D0419 83FA0376 078BD989","title":"Linguagens de M\u00e1quina"},{"location":"programacao/linguagens/#linguagem-assembly","text":"A intepreta\u00e7\u00e3o de c\u00f3digo de m\u00e1quina por seres humanos \u00e9 extremamente dif\u00edcil. Reconhecer a funcionalidade do c\u00f3digo a partir de sequ\u00eancias de c\u00f3digos hexadecimais \u00e9 praticamente uma odiss\u00e9ia. Isso porque o c\u00f3digo de m\u00e1quina n\u00e3o se preocupa com quest\u00f5es de legibilidade, afinal o processador n\u00e3o precisa desta feature . A fim de tornar a programa\u00e7\u00e3o uma atividade mais amig\u00e1vel para seres humanos, desenvolvou-se uma linguagem cuja sintaxe era mais pr\u00f3xima da escrita em ingl\u00eas, com as devidas restri\u00e7\u00f5es para tornar o c\u00f3digo n\u00e3o amb\u00edguo. Al\u00e9m de facilitar a compreens\u00e3o do algoritmo, a linguagem Assembly trouxe recursos de abstra\u00e7\u00e3o que permitiram manter a complexidade do programa sob controle (at\u00e9 certo ponto, \u00e9 claro). A Linguagem Assembly foi a primeira tentativa de adicionar abstra\u00e7\u00f5es (s\u00edmbolos chamado de mnem\u00f4nicos) sobre a linguagem de m\u00e1quina na esperan\u00e7a de que a programa\u00e7\u00e3o de software n\u00e3o fosse equipar\u00e1vel a um dos Doze Trabalhos de H\u00e9rcules . Ela representa a 2\u00aa gera\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o . Nota Perceba que tornou-se necess\u00e1rio \"passar\" o c\u00f3digo-fonte para um software chamado Assembler (montador) para gerar o c\u00f3digo em linguagem de m\u00e1quina (execut\u00e1vel). ;---------------------------------------------------------------------; START: ;---------------------------------------------------------------------; ; TEST FOR PRESENCE OF CALCULATOR ; ;---------------------------------------------------------------------; SUB AX,AX MOV ES,AX SUB BH,BH MOV BL,INT_NUMBER SHL BX,1 SHL BX,1 MOV DI,ES:[BX] MOV ES,ES:[BX+L\u00f3gica2] ADD DI,4 LEA SI,TAG MOV CX,TAG_LEN REPE CMPSB JE CALL_CALC MOV BX,SCREEN_HANDLE MOV CX,MESSAGE_LEN LEA DX,MESSAGE MOV AH,40h INT 21h JMP SHORT CALC_EXIT ;---------------------------------------------------------------------; ; CALL CALCULATOR ; ;---------------------------------------------------------------------; CALL_CALC: MOV AL,INT_NUMBER MOV BYTE PTR INT_CODE,AL DB 0CDh ; INT C\u00f3digo-fonte extra\u00eddo de https://assembly.happycodings.com/code13.html .","title":"Linguagem Assembly"},{"location":"programacao/linguagens/#linguagens-de-alto-nvel","text":"A escrita do algoritmo \u00e9 feita utilizando-se um conjunto de comandos (palavras reservadas) em ingl\u00eas que determinam as a\u00e7\u00f5es que o computador deve realizar. Se na linguagem Assembly, os comandos representam \"apelidos\" para instru\u00e7\u00e3o de m\u00e1quina, nas linguagens de alto n\u00edvel, os comandos representam a\u00e7\u00f5es abstratas. Tais linguagens abrangem diferentes paradigmas, como estruturado, orientado a objetos, funcional e l\u00f3gico, por exemplo. Ao utilizar linguanges de alto n\u00edvel, o programador aumenta significativamente a portabilidade de seu c\u00f3digo dentre as diferentes arquiteturas de m\u00e1quina existentes, diferentemente da linguagem assembly ou de m\u00e1quina, que s\u00e3o altamente acopladas ao conjunto de instru\u00e7\u00f5es da CPU . Em termos de gera\u00e7\u00e3o, as linguagens de alto n\u00edvel podem enquadrar-se como sendo de 3\u00aa, 4\u00aa ou 5\u00aa gera\u00e7\u00e3o . Veja abaixo um trecho de c\u00f3digo escrito na linguagem C++. #include <iostream> using namespace std ; int saldo ; //vari\u00e1vel global int main (){ int parcela1 , parcela2 ; //vari\u00e1veis locais parcela1 = 10 , parcela2 = 12 ; saldo = parcela1 + parcela2 ; { //in\u00edcio de bloco cout << saldo << endl ; int saldo = 14 ; //variavel local cout << saldo << endl ; } //fim de bloco cout << saldo << endl ; return 0 ; }","title":"Linguagens de Alto N\u0131\u0301vel"},{"location":"programacao/linguagens/#linguagens-de-sistema","text":"S\u00e3o linguagens de alto n\u00edvel utilizadas para programa\u00e7\u00e3o de sistemas. Caracterizam-se por oferecer acesso facilitado ao hardware, ao mesmo tempo que oferecem recursos t\u00edpicos de linguagens de pr\u00f3posito geral, como estruturas de sele\u00e7\u00e3o, la\u00e7os de repeti\u00e7\u00e3o e blocos, por exemplo. Uma destas linguagens chama-se Rust . fn main () { println! ( \"Hello World!\" ); }","title":"Linguagens de Sistema"},{"location":"programacao/linguagens/#linguagens-de-domnio-especfico","text":"De alto n\u0131\u0301vel, aplicada a um contexto espec\u0131\u0301fico, com expressividade limitada. Express\u00f5es regulares s\u00e3o exemplos desta categoria. Saiba mais sobre DSL .","title":"Linguagens de Dom\u0131\u0301nio Espec\u0131\u0301fico"},{"location":"programacao/linguagens/#linguagens-visuais","text":"Toda linguagem que n\u00e3o \u00e9 baseada em texto. Exemplos deste tipo de linguagem s\u00e3o o Scratch e o Blockly .","title":"Linguagens Visuais"},{"location":"programacao/linguagens/#linguagens-esotericas","text":"Linguagens que n\u00e3o tem prop\u00f3sito de uso, especificamente. Neste link voc\u00ea encontrar\u00e1 algumas delas . Ficou curioso sobre a classifica\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o? Que tal ler o conte\u00fado deste link para come\u00e7ar :)","title":"Linguagens Esot\u00e9ricas"},{"location":"programacao/ponteiros/","text":"","title":"Ponteiros"}]}